#pragma once

// Name: SCUM, Version: 4.20.3

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class ConZ.AchievementsManagerClient
// 0x0098 (0x03C0 - 0x0328)
class AAchievementsManagerClient : public AActor
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0328(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AchievementsManagerClient");
		return ptr;
	}

};


// Class ConZ.AchievementsManagerServer
// 0x0078 (0x03A0 - 0x0328)
class AAchievementsManagerServer : public AActor
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0328(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AchievementsManagerServer");
		return ptr;
	}

};


// Class ConZ.DesignableUserWidget
// 0x0018 (0x0220 - 0x0208)
class UDesignableUserWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0208(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DesignableUserWidget");
		return ptr;
	}


	void SetDisplayLabelName(const struct FString& displayLabelName);
	void SetDefaultPosition(const struct FVector2D& Value);
	void OnSynchronizeProperties();
	struct FString GetDisplayLabelName();
	struct FVector2D GetDefaultPosition();
};


// Class ConZ.ActionProgressWidget
// 0x0050 (0x0270 - 0x0220)
class UActionProgressWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    ActionProgressFinishedEvent;                              // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ActionProgressCancelledEvent;                             // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               CanCancel;                                                // 0x0240(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0241(0x000B) MISSED OFFSET
	float                                              _currentTime;                                             // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              _duration;                                                // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               _manualMode;                                              // 0x0254(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1B];                                      // 0x0255(0x001B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ActionProgressWidget");
		return ptr;
	}


	void UnPauseProgress();
	void SetProgress(float progress);
	void PauseProgress();
	void OnActionProgressFinishedEvent__DelegateSignature();
	void OnActionProgressCancelledEvent__DelegateSignature();
	void ExecuteAction();
	void CancelAction();
};


// Class ConZ.Sickness
// 0x0188 (0x01B0 - 0x0028)
class USickness : public UObject
{
public:
	unsigned char                                      UnknownData00[0x188];                                     // 0x0028(0x0188) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Sickness");
		return ptr;
	}


	void SetShouldDisplayState(bool Value);
	ESicknessState GetState();
	bool GetShouldDisplayState();
	int GetPhase();
	struct FText GetCaption();
};


// Class ConZ.Addiction
// 0x0000 (0x01B0 - 0x01B0)
class UAddiction : public USickness
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Addiction");
		return ptr;
	}

};


// Class ConZ.AdminCommand
// 0x0058 (0x0080 - 0x0028)
class UAdminCommand : public UObject
{
public:
	struct FString                                     _verb;                                                    // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAdminCommandArgumentDescription>    _argumentDescriptions;                                    // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                _numberOfRequiredArguments;                               // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isEnabled;                                               // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isEnabledInShippingBuild;                                // 0x004D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isAdminStatusRequired;                                   // 0x004E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isDeveloperStatusRequired;                               // 0x004F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _shouldExecuteOnServer;                                   // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _shouldExecuteOnClient;                                   // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _shouldDisableSingleplayerAchievementsIfExecuted;         // 0x0052(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
	struct FString                                     _description;                                             // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0068(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand");
		return ptr;
	}


	bool Execute(TArray<struct FString> Arguments);
	bool CanEverBeExecuted(class APlayerController* Controller, struct FString* reasonIfNot);
	bool CanBeExecuted(class APlayerController* Controller, struct FString* reasonIfNot);
};


// Class ConZ.AdminCommand_Announce
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_Announce : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_Announce");
		return ptr;
	}

};


// Class ConZ.AdminCommand_BanPlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_BanPlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_BanPlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_CharacterSpawner
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_CharacterSpawner : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_CharacterSpawner");
		return ptr;
	}

};


// Class ConZ.AdminCommand_CompleteMission
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_CompleteMission : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_CompleteMission");
		return ptr;
	}

};


// Class ConZ.AdminCommand_CrashMajestically
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_CrashMajestically : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_CrashMajestically");
		return ptr;
	}

};


// Class ConZ.AdminCommand_DemolitionSkillDebug
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_DemolitionSkillDebug : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_DemolitionSkillDebug");
		return ptr;
	}

};


// Class ConZ.AdminCommand_DestroyAllVehicles
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_DestroyAllVehicles : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_DestroyAllVehicles");
		return ptr;
	}

};


// Class ConZ.AdminCommand_DestroyVehicle
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_DestroyVehicle : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_DestroyVehicle");
		return ptr;
	}

};


// Class ConZ.AdminCommand_Immortality
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_Immortality : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_Immortality");
		return ptr;
	}

};


// Class ConZ.AdminCommand_KickPlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_KickPlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_KickPlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_Knockout
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_Knockout : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_Knockout");
		return ptr;
	}

};


// Class ConZ.AdminCommand_LeaveCorpse
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_LeaveCorpse : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_LeaveCorpse");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListMutedPlayers
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ListMutedPlayers : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListMutedPlayers");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListPlayers
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ListPlayers : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPlayers");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListPrimaryAssets
// 0x0058 (0x00D8 - 0x0080)
class UAdminCommand_ListPrimaryAssets : public UAdminCommand
{
public:
	struct FPrimaryAssetType                           _primaryAssetType;                                        // 0x0080(0x0008) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0088(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.AdminCommand_ListPrimaryAssets._primaryAssetsToExclude

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPrimaryAssets");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListSilencedPlayers
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ListSilencedPlayers : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSilencedPlayers");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListSpawnedVehicles
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ListSpawnedVehicles : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSpawnedVehicles");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListSquadMembers
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ListSquadMembers : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSquadMembers");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ListSquads
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ListSquads : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSquads");
		return ptr;
	}

};


// Class ConZ.AdminCommand_Location
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_Location : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_Location");
		return ptr;
	}

};


// Class ConZ.AdminCommand_LogCharacterSpawner
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_LogCharacterSpawner : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_LogCharacterSpawner");
		return ptr;
	}

};


// Class ConZ.AdminCommand_MutePlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_MutePlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_MutePlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_PlaceableActorDebug
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_PlaceableActorDebug : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_PlaceableActorDebug");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ResetAchievements
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ResetAchievements : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetAchievements");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ResetMissionEnabled
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ResetMissionEnabled : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetMissionEnabled");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ResetSquadInfo
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ResetSquadInfo : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetSquadInfo");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ScheduleWorldEvent
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ScheduleWorldEvent : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ScheduleWorldEvent");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SendNotification
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SendNotification : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SendNotification");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetDecayTimeDilation
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetDecayTimeDilation : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetDecayTimeDilation");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetFacialHairLength
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetFacialHairLength : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFacialHairLength");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetFamePoints
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetFamePoints : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFamePoints");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetFamePointsToAll
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetFamePointsToAll : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFamePointsToAll");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetFamePointsToAllOnline
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetFamePointsToAllOnline : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFamePointsToAllOnline");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetGodMode
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetGodMode : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetGodMode");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetHairLength
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetHairLength : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetHairLength");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetHealthToItemInHands
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetHealthToItemInHands : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetHealthToItemInHands");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetInfiniteAmmo
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetInfiniteAmmo : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetInfiniteAmmo");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetInfiniteStamina
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetInfiniteStamina : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetInfiniteStamina");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetSkillLevel
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetSkillLevel : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetSkillLevel");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetStamina
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetStamina : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetStamina");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetTime
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetTime : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetTime");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SetWeather
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SetWeather : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SetWeather");
		return ptr;
	}

};


// Class ConZ.AdminCommand_ShowBaseBuildingDebug
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_ShowBaseBuildingDebug : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowBaseBuildingDebug");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SilencePlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_SilencePlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SilencePlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_Sleep
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_Sleep : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_Sleep");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SpawnPrimaryActorAsset
// 0x0060 (0x00E0 - 0x0080)
class UAdminCommand_SpawnPrimaryActorAsset : public UAdminCommand
{
public:
	struct FPrimaryAssetType                           _primaryAssetType;                                        // 0x0080(0x0008) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0088(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.AdminCommand_SpawnPrimaryActorAsset._primaryAssetsToExclude
	int                                                _countArgumentMinValue;                                   // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                _countArgumentMaxValue;                                   // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnPrimaryActorAsset");
		return ptr;
	}

};


// Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset
// 0x0000 (0x00E0 - 0x00E0)
class UAdminCommand_SpawnRandomPrimaryActorAsset : public UAdminCommand_SpawnPrimaryActorAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset");
		return ptr;
	}

};


// Class ConZ.AdminCommand_Teleport
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_Teleport : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_Teleport");
		return ptr;
	}

};


// Class ConZ.AdminCommand_TeleportTo
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_TeleportTo : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportTo");
		return ptr;
	}

};


// Class ConZ.AdminCommand_TeleportTo3pm
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_TeleportTo3pm : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportTo3pm");
		return ptr;
	}

};


// Class ConZ.AdminCommand_TeleportToMe
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_TeleportToMe : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportToMe");
		return ptr;
	}

};


// Class ConZ.AdminCommand_TeleportToVehicle
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_TeleportToVehicle : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportToVehicle");
		return ptr;
	}

};


// Class ConZ.AdminCommand_UnbanPlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_UnbanPlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_UnbanPlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_UnmutePlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_UnmutePlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_UnmutePlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_UnsilencePlayer
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_UnsilencePlayer : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_UnsilencePlayer");
		return ptr;
	}

};


// Class ConZ.AdminCommand_VisualizeBulletTrajectories
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_VisualizeBulletTrajectories : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_VisualizeBulletTrajectories");
		return ptr;
	}

};


// Class ConZ.AdminCommand_VisualizeZombieLocation
// 0x0000 (0x0080 - 0x0080)
class UAdminCommand_VisualizeZombieLocation : public UAdminCommand
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommand_VisualizeZombieLocation");
		return ptr;
	}

};


// Class ConZ.AdminCommandArgumentCompletion
// 0x0008 (0x0030 - 0x0028)
class UAdminCommandArgumentCompletion : public UObject
{
public:
	bool                                               _canCompletionValuesBeCached;                             // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion");
		return ptr;
	}


	void GetCompletionValues(TArray<struct FString>* Result);
};


// Class ConZ.AdminCommandArgumentCompletion_Constant
// 0x0010 (0x0040 - 0x0030)
class UAdminCommandArgumentCompletion_Constant : public UAdminCommandArgumentCompletion
{
public:
	TArray<struct FString>                             _completionValues;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Constant");
		return ptr;
	}

};


// Class ConZ.AdminCommandArgumentCompletion_Enum
// 0x0060 (0x0090 - 0x0030)
class UAdminCommandArgumentCompletion_Enum : public UAdminCommandArgumentCompletion
{
public:
	struct FName                                       _enum;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _excludeNoneEnumerator;                                   // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _excludeAutoGeneratedEnumerator;                          // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x003A(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.AdminCommandArgumentCompletion_Enum._additionalEnumeratorsToExclude

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Enum");
		return ptr;
	}

};


// Class ConZ.AdminCommandArgumentCompletion_Player
// 0x0000 (0x0030 - 0x0030)
class UAdminCommandArgumentCompletion_Player : public UAdminCommandArgumentCompletion
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Player");
		return ptr;
	}

};


// Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset
// 0x0058 (0x0088 - 0x0030)
class UAdminCommandArgumentCompletion_PrimaryAsset : public UAdminCommandArgumentCompletion
{
public:
	struct FPrimaryAssetType                           _primaryAssetType;                                        // 0x0030(0x0008) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.AdminCommandArgumentCompletion_PrimaryAsset._primaryAssetsToExclude

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset");
		return ptr;
	}

};


// Class ConZ.AdminCommandArgumentCompletion_Skill
// 0x0000 (0x0030 - 0x0030)
class UAdminCommandArgumentCompletion_Skill : public UAdminCommandArgumentCompletion
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Skill");
		return ptr;
	}

};


// Class ConZ.AdminCommandArgumentCompletion_Squad
// 0x0000 (0x0030 - 0x0030)
class UAdminCommandArgumentCompletion_Squad : public UAdminCommandArgumentCompletion
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Squad");
		return ptr;
	}

};


// Class ConZ.AdminCommandCompletionManager
// 0x00B0 (0x00D8 - 0x0028)
class UAdminCommandCompletionManager : public UObject
{
public:
	TMap<struct FString, class UClass*>                _commands;                                                // 0x0028(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0078(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandCompletionManager");
		return ptr;
	}

};


// Class ConZ.AdminCommandRegistry
// 0x0060 (0x0088 - 0x0028)
class UAdminCommandRegistry : public UObject
{
public:
	TArray<class UClass*>                              _commands;                                                // 0x0028(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AdminCommandRegistry");
		return ptr;
	}


	bool UnregisterCommand(class UClass* Command);
	void UnregisterAllCommands();
	bool RegisterCommand(class UClass* Command);
	bool IsCommandRegistered(class UClass* Command);
	TArray<class UClass*> GetCommands();
	class UClass* GetCommandByVerb(const struct FString& verb);
};


// Class ConZ.AlcoholismAddiction
// 0x0010 (0x01C0 - 0x01B0)
class UAlcoholismAddiction : public UAddiction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AlcoholismAddiction");
		return ptr;
	}

};


// Class ConZ.Disease
// 0x0000 (0x01B0 - 0x01B0)
class UDisease : public USickness
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Disease");
		return ptr;
	}

};


// Class ConZ.Poisoning
// 0x0000 (0x01B0 - 0x01B0)
class UPoisoning : public UDisease
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Poisoning");
		return ptr;
	}

};


// Class ConZ.AmanitaMuscariaPoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UAmanitaMuscariaPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmanitaMuscariaPoisoning");
		return ptr;
	}

};


// Class ConZ.AmanitaPantheriaPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UAmanitaPantheriaPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmanitaPantheriaPoisoning");
		return ptr;
	}

};


// Class ConZ.AmanitaPhalloidesPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UAmanitaPhalloidesPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmanitaPhalloidesPoisoning");
		return ptr;
	}

};


// Class ConZ.AmanitaVirosaPoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UAmanitaVirosaPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmanitaVirosaPoisoning");
		return ptr;
	}

};


// Class ConZ.AmbientSounds
// 0x0108 (0x0430 - 0x0328)
class AAmbientSounds : public AActor
{
public:
	float                                              MinCameraLocationDeltaForUpdate;                          // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	struct FGameplayTag                                ForestMask;                                               // 0x0330(0x0008) (Edit, BlueprintVisible)
	float                                              ForestMaskSearchRadius;                                   // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ForestMaskTopLeftWorld;                                   // 0x033C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     ForestMaskBottomRightWorld;                               // 0x0348(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               CoastalForestAudioEvent;                                  // 0x0358(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ContinentalForest1AudioEvent;                             // 0x0360(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ContinentalForest2AudioEvent;                             // 0x0368(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ContinentalForest3AudioEvent;                             // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               UndergroundAudioEvent;                                    // 0x0378(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                CityMask;                                                 // 0x0380(0x0008) (Edit, BlueprintVisible)
	float                                              CityMaskSearchRadius;                                     // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CityMaskTopLeftWorld;                                     // 0x038C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     CityMaskBottomRightWorld;                                 // 0x0398(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               CityAudioEvent;                                           // 0x03A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               LargeVillageAudioEvent;                                   // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SmallVillageAudioEvent;                                   // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               IndustrialAreaAudioEvent;                                 // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x68];                                      // 0x03C8(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmbientSounds");
		return ptr;
	}

};


// Class ConZ.Item
// 0x0540 (0x0868 - 0x0328)
class AItem : public AActor
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0328(0x0088) MISSED OFFSET
	struct FScriptMulticastDelegate                    DebugTextChanged;                                         // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PickedUpState;                                            // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStaticMeshChanged;                                      // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkeletalMeshChanged;                                    // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemAddedEvent;                                         // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemRemovedEvent;                                       // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemMovedEvent;                                         // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0420(0x0010) MISSED OFFSET
	class UClass*                                      AttachmentSocketMountType;                                // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAttachmentSocket>                   AttachmentSockets;                                        // 0x0438(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      HolsterAttachmentSocketMountType;                         // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, struct FAttachmentSocketOffset> AttachmentSocketsOffset;                                  // 0x0450(0x0050) (Edit, ZeroConstructor)
	class UStaticMeshComponent*                        Mesh;                                                     // 0x04A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  InventoryIcon;                                            // 0x04A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  InventoryIconInHands;                                     // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  OutsideInventoryIcon;                                     // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       Caption;                                                  // 0x04C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	uint32_t                                           SizeX;                                                    // 0x04D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData)
	uint32_t                                           SizeY;                                                    // 0x04DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData)
	bool                                               IgnoreMaxContainedWeight;                                 // 0x04E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04E1(0x0003) MISSED OFFSET
	float                                              MaxContainedWeight;                                       // 0x04E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaterWeightAsRatioOfWeight;                            // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsIgnoredBySpawners;                                      // 0x04EC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FItemLocation                               ItemLocation;                                             // 0x04ED(0x000E) (Edit, DisableEditOnInstance)
	EItemRarity                                        Rarity;                                                   // 0x04FB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       ItemSpawnTypes;                                           // 0x0500(0x0020) (Edit, DisableEditOnInstance)
	struct FVector                                     SpawnLocationOffset;                                      // 0x0520(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SpawnRotationOffset;                                      // 0x052C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              SpawnRotationRandomization;                               // 0x0538(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Uses;                                                     // 0x053C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       Description;                                              // 0x0540(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FPossibleItemSickness>               PossibleSicknesses;                                       // 0x0558(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              TreatSicknesses;                                          // 0x0568(0x0010) (Edit, ZeroConstructor)
	float                                              DamageOnUse;                                              // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageOverTime;                                           // 0x057C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoDestructTime;                                         // 0x0580(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EItemExhausted                                     IfExhausted;                                              // 0x0584(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EInteractionType                                   CraftingInteraction;                                      // 0x0585(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0586(0x0002) MISSED OFFSET
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                  // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       PickupCaption;                                            // 0x0590(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               EnableGlowOnBeginPlay;                                    // 0x05A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EnableAwarenessGlow;                                      // 0x05A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EnableHoverGlow;                                          // 0x05AA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x05AB(0x0005) MISSED OFFSET
	TArray<class UBaseItemTag*>                        ItemTags;                                                 // 0x05B0(0x0010) (Edit, ZeroConstructor)
	TArray<class UBaseItemTag*>                        OwnedItemTags;                                            // 0x05C0(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<struct FString>                             ItemSnapTags;                                             // 0x05D0(0x0010) (Edit, ZeroConstructor)
	ENoiseLevel                                        NoiseLevel;                                               // 0x05E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x05E1(0x0007) MISSED OFFSET
	struct FItemMotionNoise                            MotionNoise;                                              // 0x05E8(0x0008) (Edit)
	struct FItemInventoryHandlingSounds                InventoryHandlingSounds;                                  // 0x05F0(0x0008) (Edit)
	class UDestructibleMesh*                           DestroyedMesh;                                            // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DestroyedImpulseStrength;                                 // 0x0600(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0604(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               DestroyedSound;                                           // 0x0608(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HoverWidgetClass;                                         // 0x0610(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x0618(0x0018) MISSED OFFSET
	class UThrowingComponent*                          ThrowingComponent;                                        // 0x0630(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ShouldDestroyContainedItemsOnDestroyEvent;                // 0x0638(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x48];                                      // 0x0639(0x0048) MISSED OFFSET
	EInteractionType                                   _defaultInteractionOnFloor;                               // 0x0681(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EInteractionType                                   _defaultInteractionInInventory;                           // 0x0682(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EInteractionType                                   _defaultInteractionEquipped;                              // 0x0683(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x14];                                      // 0x0684(0x0014) MISSED OFFSET
	float                                              _itemLoadingWeightOverride;                               // 0x0698(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x069C(0x0004) MISSED OFFSET
	struct FText                                       _debugText;                                               // 0x06A0(0x0018) (Net)
	class AActor*                                      _attachParentObject;                                      // 0x06B8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVisibilityReplication                      _visibilityReplication;                                   // 0x06C0(0x0008) (Net)
	unsigned char                                      UnknownData12[0x34];                                      // 0x06C8(0x0034) MISSED OFFSET
	unsigned char                                      _waterWeightReplicated;                                   // 0x06FC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0xB];                                       // 0x06FD(0x000B) MISSED OFFSET
	bool                                               _meshIsSimulatingPhysics;                                 // 0x0708(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0709(0x0003) MISSED OFFSET
	float                                              Fuel;                                                     // 0x070C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // 0x0710(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              _health;                                                  // 0x0714(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxHealth;                                               // 0x0718(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _defaultMaxHealth;                                        // 0x071C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint16_t                                           _healthReplicated;                                        // 0x0720(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x2];                                       // 0x0722(0x0002) MISSED OFFSET
	float                                              _weightUsed;                                              // 0x0724(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isCrafted;                                               // 0x0728(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0729(0x0003) MISSED OFFSET
	float                                              _uncraftTime;                                             // 0x072C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isBusy;                                                  // 0x0730(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _examined;                                                // 0x0731(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x16];                                      // 0x0732(0x0016) MISSED OFFSET
	class USceneComponent*                             _tempSceneComponent;                                      // 0x0748(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               _useHandCorrections;                                      // 0x0750(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldBeMaintained;                                      // 0x0751(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0xE];                                       // 0x0752(0x000E) MISSED OFFSET
	int64_t                                            _expirationTime;                                          // 0x0760(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _canBeDropped;                                            // 0x0768(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x3];                                       // 0x0769(0x0003) MISSED OFFSET
	int                                                _maxNumberOfContainedItems;                               // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canContainNonEmptyItems;                                 // 0x0770(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _blinkOnSpawn;                                            // 0x0771(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isPartOfEvent;                                           // 0x0772(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x1];                                       // 0x0773(0x0001) MISSED OFFSET
	float                                              _vicinityCheckDistance;                                   // 0x0774(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _updateVisualsFrequency;                                  // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x077C(0x0004) MISSED OFFSET
	struct FTimerHandle                                _updateVisualsTimer;                                      // 0x0780(0x0008)
	TArray<struct FInventoryStackData>                 _stacks;                                                  // 0x0788(0x0010) (Net, ZeroConstructor)
	TArray<class UClass*>                              _stackableClasses;                                        // 0x0798(0x0010) (Edit, ZeroConstructor)
	int                                                _maxNumOfStacks;                                          // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x07AC(0x0004) MISSED OFFSET
	class AItem*                                       _stackExhaustedSuccessorItem;                             // 0x07B0(0x0008) (ZeroConstructor, IsPlainOldData)
	TScriptInterface<class UInventoryContainer>        _parentContainer;                                         // 0x07B8(0x0030) (ZeroConstructor, IsPlainOldData)
	TScriptInterface<class UInventoryNode>             _parentInventoryNode;                                     // 0x07C8(0x0030) (ZeroConstructor, IsPlainOldData)
	bool                                               _canEverBeVirtualized;                                    // 0x07D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _hasHighLoadPriorityInVirtualization;                     // 0x07D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x2];                                       // 0x07DA(0x0002) MISSED OFFSET
	float                                              _virtualizationDistance;                                  // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canPlaceItemsOn;                                         // 0x07E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldShowStatusWidget;                                  // 0x07E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canBeNamed;                                              // 0x07E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x5];                                       // 0x07E3(0x0005) MISSED OFFSET
	TWeakObjectPtr<class UItemStatusWidget>            _itemStatusWidget;                                        // 0x07E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UChangeTextWidget>            _editTextWidget;                                          // 0x07F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FString                                     _playerGivenName;                                         // 0x07F8(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData25[0x10];                                      // 0x0808(0x0010) MISSED OFFSET
	float                                              _preferredDamagePerUpdate;                                // 0x0818(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x081C(0x0004) MISSED OFFSET
	class UInventoryContainer2D*                       _inventoryContainer2D;                                    // 0x0820(0x0008) (BlueprintVisible, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FItemLayout                                 _itemLayout;                                              // 0x0828(0x0040) (Edit, DisableEditOnInstance, DuplicateTransient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Item");
		return ptr;
	}


	bool Use(class APrisoner* Prisoner, int usage, float usageWeight, bool Eat, float damageMultiplier);
	void UpdateVisuals(bool shouldHandleAging);
	void UpdateDebugText();
	void StopBlinking();
	void StaticMeshChangedDelegate__DelegateSignature(class AItem* Item);
	void SkeletalMeshChangedDelegate__DelegateSignature(class AItem* Item);
	void SetWeight(float Value);
	void SetMaxHealth(float maxHealth);
	void SetHealth(float health);
	void SetFuel(float Value);
	void Server_Throw(const struct FVector& ZeroBasedStartPosition, const struct FRotator& StartRotation, const struct FVector& StartVelocity);
	void SelectedEvent__DelegateSignature(bool selected);
	void Repair(float healthToRepair);
	TScriptInterface<class UInventoryNode> RemoveStacks(int stacksToSplit);
	void PickedUpStateDelegate__DelegateSignature(class AItem* Item, bool pickedUp);
	void PhysicsSimulationTimerCallback();
	void OnRightClicked();
	void OnRep_WeightUsed();
	void OnRep_WaterWeight();
	void OnRep_Visibility();
	void OnRep_Stacks();
	void OnRep_MeshIsSimulatingPhysics();
	void OnRep_InventoryContainer2D();
	void OnRep_Health();
	void OnRep_Examined();
	void OnRep_DebugText();
	void OnProjectileStop(const struct FHitResult& ImpactResult);
	void OnLocalPrisonerPanelsClosed();
	void OnLocalPrisonerHoveredActorChanged(class AActor* hoveredActor);
	void OnEditTextWidgetTextAccepted(class APrisoner* User, const struct FText& Text);
	void OnDetachedFromItem(class AItem* Item);
	void OnDestroyedEvent(class AActor* Self);
	void OnContainedItemDestroyed(class AActor* containedItem);
	void OnAttachedToItem(class AItem* Item);
	void NetMulticast_SpawnDestroyedEffects();
	void NetMulticast_SetPlayerGivenName(const struct FString& Value);
	void NetMulticast_SetActorDropLocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation);
	void Multicast_UpdateExpirationTime(int64_t Time);
	void Multicast_Throw(const struct FVector& ZeroBasedStartPosition, const struct FRotator& StartRotation, const struct FVector& StartVelocity);
	void ItemRemovedDelegate__DelegateSignature(class AItem* container, class AItem* Item);
	void ItemMovedDelegate__DelegateSignature(class AItem* container, class AItem* Item, int column, int row);
	void ItemAddedDelegate__DelegateSignature(class AItem* container, class AItem* Item, int column, int row);
	bool HasPriorityForContainerItem(class AItem* containerItem);
	struct FWidgetDisplayInfo GetWidgetDisplayInfo();
	float GetWetness();
	float GetWeightUsed();
	float GetWeightRemained();
	float GetWeightPerUse();
	float GetWeight();
	float GetWaterWeight();
	int GetUsedSlots();
	float GetUsedMass();
	float GetTotalWeight();
	int GetTotalUses();
	int GetStacksCount();
	int GetSizeY();
	int GetSizeX();
	int GetRemainingUses();
	int GetRemaining();
	float GetNormalizedHealth();
	float GetNoiseLoudnessWhenPickedUp();
	float GetNoiseLoudnessWhenDropped();
	float GetNoiseLoudnessOnGroundImpact();
	class UMeshComponent* GetMeshComponent();
	float GetMaxHealth();
	float GetHealth();
	float GetFuel();
	float GetDefaultMaxHealth();
	void GetDebugText(struct FText* debugText);
	TArray<class AItem*> GetAllContainedItems(bool recursive);
	bool DropAt(const struct FVector& dropLocation, const struct FRotator& dropRotation);
	bool DropAround(class AActor* Actor, float Radius);
	void Drop(bool wasThrowed);
	void DetachFromAll();
	void DebugTextChangedDelegate__DelegateSignature(class AItem* Item);
	bool CanStackWith(class UObject* Item);
	bool CanStack();
	bool CanBeDroppedBy(class AConZCharacter* Character);
	bool CanBeCraftedByCharactrer(class ACharacter* Character);
	bool CanAutoAddItem(class AItem* Item, unsigned char* column, unsigned char* row);
	bool CanAddItem(class AItem* Item, unsigned char column, unsigned char row);
	void Blink(float Duration);
	bool AutoAddItemToInventoryNode(const TScriptInterface<class UInventoryNode>& Item);
	bool AttachToCharacterHands(class AConZCharacter* Character);
	void AddStack(const TScriptInterface<class UInventoryNode>& Item);
};


// Class ConZ.AmmunitionItem
// 0x0018 (0x0880 - 0x0868)
class AAmmunitionItem : public AItem
{
public:
	class UClass*                                      ProjectileClass;                                          // 0x0868(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxAmmoCount;                                             // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _ammoCount;                                               // 0x0874(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	int                                                _ammoCountOwnerHelper;                                    // 0x0878(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x087C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmmunitionItem");
		return ptr;
	}


	void SetAmmoCount(int count, bool replicateToOwner);
	void OnRep_AmmoCountOwnerHelper();
	void OnRep_AmmoCount();
	int GetAmmoCount();
	void Client_SetAmmoCount(int count);
};


// Class ConZ.AmmunitionArrow
// 0x0020 (0x08A0 - 0x0880)
class AAmmunitionArrow : public AAmmunitionItem
{
public:
	bool                                               DestroyOnHit;                                             // 0x0880(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0881(0x0007) MISSED OFFSET
	class UClass*                                      BrokenArrowClass;                                         // 0x0888(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _muzzleVelocityMultiplier;                                // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _stiffnessFactor;                                         // 0x0894(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _flightRotationCorrectionSpeed;                           // 0x0898(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _elasticityFactorSpread;                                  // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmmunitionArrow");
		return ptr;
	}

};


// Class ConZ.AmmunitionBoxItem
// 0x0018 (0x0880 - 0x0868)
class AAmmunitionBoxItem : public AItem
{
public:
	class UClass*                                      AmmunitionItemClass;                                      // 0x0868(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemClassToSpawnWhenUnpacked;                             // 0x0870(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxAmmoCount;                                             // 0x0878(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _ammoCount;                                               // 0x087C(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AmmunitionBoxItem");
		return ptr;
	}


	void OnRep_AmmoCount();
};


// Class ConZ.ConZCharacter
// 0x01F0 (0x0930 - 0x0740)
class AConZCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0740(0x0030) MISSED OFFSET
	class UClass*                                      CorpseClass;                                              // 0x0770(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                  // 0x0778(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IterativeChopping;                                        // 0x0780(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0781(0x0007) MISSED OFFSET
	class UClass*                                      ItemRepresentation;                                       // 0x0788(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       HeadBoneName;                                             // 0x0790(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<struct FName, EBodyPart>                      BodyPartByBoneName;                                       // 0x0798(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x1];                                       // 0x07E8(0x0001) MISSED OFFSET
	bool                                               ShouldAutoUpdateEnvironmentDescription;                   // 0x07E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x07EA(0x0002) MISSED OFFSET
	float                                              EnvironmentDescriptionAutoUpdateInterval;                 // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EnteredIndoorEnvironmentAudioEvent;                       // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EnteredOutdoorEnvironmentAudioEvent;                      // 0x07F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EnteredUndergroundAudioEvent;                             // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               LeftUndergroundAudioEvent;                                // 0x0808(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0810(0x0008) MISSED OFFSET
	class UCharacterSoundComponent*                    SoundComponent;                                           // 0x0818(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x0820(0x0020) MISSED OFFSET
	EGender                                            _gender;                                                  // 0x0840(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1F];                                      // 0x0841(0x001F) MISSED OFFSET
	EConZPxDominanceGroup                              _physicsDominanceGroup;                                   // 0x0860(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0861(0x0003) MISSED OFFSET
	float                                              _activeHitTimeToLive;                                     // 0x0864(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 _hitDamageVsVehicleSpeedInKph;                            // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FHitEffects                                 _effectsOnVehicleHit[0x3];                                // 0x0870(0x0038) (Edit)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0918(0x0010) MISSED OFFSET
	EAITeam                                            _aiTeam;                                                  // 0x0928(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0929(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZCharacter");
		return ptr;
	}


	void SetGender(EGender Value);
	void SetEnvironmentDescription(const struct FEnvironmentDescription& Value);
	void Server_HandleMeleeAttackCapsuleHit(class AConZCharacter* attacker, const struct FMeleeAttackCapsuleHitInfo& HitInfo);
	void ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_Gender();
	void NetMulticast_HandleMeleeAttackCapsuleHit(class AConZCharacter* attacker, const struct FMeleeAttackCapsuleHitInfo& HitInfo);
	class ACorpse* LeaveCorpse();
	bool IsHeadBone(const struct FName& BoneName);
	bool IsConscious();
	bool IsAlive();
	class UCharacterSoundComponent* GetSoundComponent();
	EDetectHitCollisionType GetHitReactBodyPartFromHitResult(const struct FHitResult& HitResult);
	EDetectHitCollisionType GetHitReactBodyPartFromBodyPart(EBodyPart Value);
	EGender GetGender();
	struct FEnvironmentDescription GetEnvironmentDescription();
	EBodyPart GetBodyPartFromBoneName(const struct FName& BoneName);
	void ActorHitCallback(class AActor* Actor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class ConZ.Animal
// 0x01B0 (0x0AE0 - 0x0930)
class AAnimal : public AConZCharacter
{
public:
	struct FText                                       Species;                                                  // 0x0930(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              AttackRange;                                              // 0x0948(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SightRange;                                               // 0x094C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SenseRange;                                               // 0x0950(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitAngle;                                                 // 0x0954(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitRange;                                                 // 0x0958(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WalkSpeed;                                                // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeed;                                                 // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttackSpeed;                                              // 0x0964(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationSpeedFree;                                        // 0x0968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationSpeedFollow;                                      // 0x096C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StuckTime;                                                // 0x0970(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StuckRadius;                                              // 0x0974(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StuckDuration;                                            // 0x0978(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Mass;                                                     // 0x097C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDamageMultiplier;                                    // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BodyShotDamageMultiplier;                                 // 0x0984(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadShotDamageMultiplier;                                 // 0x0988(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BleedingSpeed;                                            // 0x098C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BleedingThreshold;                                        // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAnimalHandlingLevel                               HandlingLevel;                                            // 0x0994(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0995(0x0003) MISSED OFFSET
	TArray<EAnimalCommand>                             HandlingCommands;                                         // 0x0998(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UAnimalHandlingItemTag*                      HandlingTag;                                              // 0x09A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x09B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IdleStates;                                               // 0x09B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x09B5(0x0003) MISSED OFFSET
	float                                              EatingProbability;                                        // 0x09B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ObservingProbability;                                     // 0x09BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GroundSlopeAngleSmoothingRate;                            // 0x09C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x09C4(0x0004) MISSED OFFSET
	class UClass*                                      TrackingMarker;                                           // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BloodTrailMarker;                                         // 0x09D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerFrequency;                                  // 0x09D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerDistance;                                   // 0x09DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerRadius;                                     // 0x09E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerDuration;                                   // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceFromHabitatWhenSearchingForFood;               // 0x09E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceFromHabitatWhenSearchingForFood;               // 0x09EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinRestDuration;                                          // 0x09F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRestDuration;                                          // 0x09F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDesiredFleeLocationDistance;                           // 0x09F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDesiredFleeLocationDistance;                           // 0x09FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GoalRadius;                                               // 0x0A00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinFleeingDuration;                                       // 0x0A04(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFleeingDuration;                                       // 0x0A08(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FleeingDirectionRandomness;                               // 0x0A0C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Habitat;                                                  // 0x0A10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinIdleTime;                                              // 0x0A18(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxIdleTime;                                              // 0x0A1C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EatingAnimMontage;                                        // 0x0A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ObservingAnimMontage;                                     // 0x0A28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DebugDraw;                                                // 0x0A30(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0A31(0x0003) MISSED OFFSET
	struct FColor                                      DebugColor;                                               // 0x0A34(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UAnimalAnimationComponent*                   AnimationComponent;                                       // 0x0A38(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHitReactComponent*                          HitReactComponent;                                        // 0x0A40(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        NameTextRender;                                           // 0x0A48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0A50(0x0008) MISSED OFFSET
	float                                              _health;                                                  // 0x0A58(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	EAnimalPace                                        _pace;                                                    // 0x0A5C(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x13];                                      // 0x0A5D(0x0013) MISSED OFFSET
	class APrisoner*                                   _handler;                                                 // 0x0A70(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	EAnimalHandlingStage                               _handlingStage;                                           // 0x0A78(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	EAnimalCommand                                     _handlingCommand;                                         // 0x0A79(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0A7A(0x0006) MISSED OFFSET
	struct FString                                     _realName;                                                // 0x0A80(0x0010) (Net, ZeroConstructor)
	int                                                _handlingID;                                              // 0x0A90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x0A94(0x0018) MISSED OFFSET
	unsigned char                                      _idleState;                                               // 0x0AAC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x33];                                      // 0x0AAD(0x0033) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Animal");
		return ptr;
	}


	void TestTameAnimal(class APrisoner* Prisoner);
	void StopObservingMontageOnClients();
	void StopEatingMontageOnClients();
	void SilentKill();
	void SetRealNameOnClient(const struct FString& realName);
	void SetPace(EAnimalPace pace);
	void PlayObservingMontageOnClients();
	void PlayEatingMontageOnClients();
	void OnShot(const struct FHitResult& HitResult, const struct FVector& ImpulseDir);
	void OnRep_RealName();
	void OnRagdollShot(const struct FHitResult& HitResult, const struct FVector& ImpulseDir);
	void Kill();
	void GoToRagdoll();
	float GetSpeed();
	EAnimalPace GetPace();
	EAnimalCommand GetHandlingCommand();
	void ApplyDamage(float Damage);
};


// Class ConZ.Animal2
// 0x01C0 (0x0AF0 - 0x0930)
class AAnimal2 : public AConZCharacter
{
public:
	struct FText                                       Species;                                                  // 0x0930(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EAnimalActivityCycle                               ActivityCycle;                                            // 0x0948(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0949(0x0003) MISSED OFFSET
	float                                              maxHealth;                                                // 0x094C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UHitReactComponent*                          HitReactComponent;                                        // 0x0950(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FGameplayTag                                HitReactType;                                             // 0x0958(0x0008) (Edit, BlueprintVisible)
	struct FName                                       EyesViewPointSocketName;                                  // 0x0960(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TrackingMarker;                                           // 0x0968(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BloodTrailMarker;                                         // 0x0970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerFrequency;                                  // 0x0978(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerDistance;                                   // 0x097C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerRadius;                                     // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingMarkerDuration;                                   // 0x0984(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BleedingSpeed;                                            // 0x0988(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LightWoundDamageAmount;                                   // 0x098C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeBleedingThreshold;                                   // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StuckCheckDuration;                                       // 0x0994(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StuckRadius;                                              // 0x0998(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnstuckMode;                                              // 0x099C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x099D(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDamageTaken;                                            // 0x09A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              HeadBoneRotationSendToServerInterval;                     // 0x09B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SightRange;                                               // 0x09B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               TiltMeshOnSlopes;                                         // 0x09B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AdjustMeshHeightOnSlopes;                                 // 0x09B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x09BA(0x0002) MISSED OFFSET
	float                                              MeshPositionLerpSpeed;                                    // 0x09BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BleedInterval;                                            // 0x09C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldGoToRagdolIfTakenDamage;                            // 0x09C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x09C5(0x0003) MISSED OFFSET
	float                                              RagdollDuration;                                          // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _health;                                                  // 0x09CC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _woundDamage;                                             // 0x09D0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3C];                                      // 0x09D4(0x003C) MISSED OFFSET
	EAnimalStance                                      _animalStance;                                            // 0x0A10(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0A11(0x0007) MISSED OFFSET
	bool                                               _shouldUpdateMovementSpeedRTPCValue;                      // 0x0A18(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x5F];                                      // 0x0A19(0x005F) MISSED OFFSET
	bool                                               _doNotCrumble;                                            // 0x0A78(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0A79(0x0003) MISSED OFFSET
	float                                              _throwingDamageMultiplier;                                // 0x0A7C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _throwingDamageMultiplierPerBodyPart[0xC];                // 0x0A80(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _projectileDamageMultiplier;                              // 0x0AB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _projectileDamageMultiplierPerBodyPart[0xC];              // 0x0AB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0xC];                                       // 0x0AE4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Animal2");
		return ptr;
	}


	void UnpackUint8(unsigned char pack, TArray<bool>* B);
	unsigned char PackBoolsIntoUint8(TArray<bool> B);
	void OnRep_WoundDamage();
	void OnRep_Health();
	void NetMulticast_PlaySoundOnClients(EAnimal2Sound SoundToPlay);
	void GenerateBloodMarkerRPC();
	class APrisoner* ClosestPrisoner();
};


// Class ConZ.Animal2MovementComponent
// 0x0010 (0x0780 - 0x0770)
class UAnimal2MovementComponent : public UCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0770(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Animal2MovementComponent");
		return ptr;
	}

};


// Class ConZ.CharacterSoundComponent
// 0x0028 (0x0118 - 0x00F0)
class UCharacterSoundComponent : public UActorComponent
{
public:
	struct FName                                       AttachedSoundsAttachPointName;                            // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterImpactSoundsData*                  ImpactSounds;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterPainSoundsData*                    PainSounds;                                               // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDurationBetweenPainSounds;                             // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDurationBetweenPainSounds;                             // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSoundComponent");
		return ptr;
	}

};


// Class ConZ.Animal2SoundComponent
// 0x00C0 (0x01D8 - 0x0118)
class UAnimal2SoundComponent : public UCharacterSoundComponent
{
public:
	class USoundCue*                                   IdleSound;                                                // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateIdleSound;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               IdleAudioEvent;                                           // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AngrySound;                                               // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateAngrySound;                                      // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AngryAudioEvent;                                          // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AttackSound;                                              // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateAttackSound;                                     // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AttackAudioEvent;                                         // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ScaredAudioEvent;                                         // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AlertedAudioEvent;                                        // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   KillSound;                                                // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateKillSound;                                       // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               KillAudioEvent;                                           // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   WalkFootstepSound;                                        // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   RunFootstepSound;                                         // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AnimalFootstep;                                           // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootstepSoundOverlap;                                     // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FixedFootstepVolume;                                      // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedFootstepVolume;                                      // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSilenceTimeout;                                        // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSilenceTimeout;                                        // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x01B4(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Animal2SoundComponent");
		return ptr;
	}

};


// Class ConZ.SkillAction
// 0x0078 (0x00A0 - 0x0028)
class USkillAction : public UObject
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0028(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SkillAction");
		return ptr;
	}


	void OnActionFinished();
	void OnActionCanceled();
};


// Class ConZ.AnimalAction
// 0x0008 (0x00A8 - 0x00A0)
class UAnimalAction : public USkillAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalAction");
		return ptr;
	}

};


// Class ConZ.AnimalAIController
// 0x0090 (0x04C8 - 0x0438)
class AAnimalAIController : public AAIController
{
public:
	float                                              TickFrequency;                                            // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	class UPawnSensingComponent*                       SensingComponent;                                         // 0x0440(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x0448(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalAIController");
		return ptr;
	}


	void SensingComponent_OnHearNoise(class APawn* instigatorPawn, const struct FVector& Location, float Volume);
};


// Class ConZ.AnimalAnimationComponent
// 0x0008 (0x00F8 - 0x00F0)
class UAnimalAnimationComponent : public UActorComponent
{
public:
	uint16_t                                           AnimationFlags;                                           // 0x00F0(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00F2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalAnimationComponent");
		return ptr;
	}

};


// Class ConZ.AnimalAnimInstance
// 0x0020 (0x0380 - 0x0360)
class UAnimalAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0360(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalAnimInstance");
		return ptr;
	}


	void AnimNotify_RFootDownRear();
	void AnimNotify_RFootDown();
	void AnimNotify_LFootDownRear();
	void AnimNotify_LFootDown();
	void AnimNotify_ArmHit();
};


// Class ConZ.Animal2AnimInstance
// 0x0030 (0x0390 - 0x0360)
class UAnimal2AnimInstance : public UAnimInstance
{
public:
	float                                              MaximumLeaningAngle;                                      // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IdleStanceIndex;                                          // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAnimalStance                                      Stance;                                                   // 0x0368(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0369(0x0003) MISSED OFFSET
	struct FRotator                                    SlopeRootTiltRotation;                                    // 0x036C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              ABPSpeed;                                                 // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ABPTurn;                                                  // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveVelocity;                                             // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0384(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Animal2AnimInstance");
		return ptr;
	}


	void AnimNotify_RFootDownRear();
	void AnimNotify_RFootDown();
	void AnimNotify_LFootDownRear();
	void AnimNotify_LFootDown();
	void AnimNotify_IntroEnd();
	void AnimNotify_IdleEnd();
};


// Class ConZ.ComplexAnimalAIController
// 0x01A0 (0x05D8 - 0x0438)
class AComplexAnimalAIController : public AAIController
{
public:
	EAnimalAgressivness                                Agressivness;                                             // 0x0438(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0439(0x0003) MISSED OFFSET
	float                                              SightIntimidateRadius;                                    // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SightAttackRadius;                                        // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FoeChargeVelocity;                                        // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnimalVelocityThatMakesThisAnimalFlee;                    // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeDistance;                                             // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeTime;                                                 // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TrotTime;                                                 // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeToAttackWhenAggro;                                    // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToQuitObserve;                                        // 0x045C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinReactionTime;                                          // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxReactionTime;                                          // 0x0464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MovingUpdateInterval;                                     // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttackingUpdateInetrval;                                  // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PathSegmentLength_OBSOLETE;                               // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinPaceDuration_OBSOLETE;                                 // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumWalks_OBSOLETE;                                     // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumTrots_OBSOLETE;                                     // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PathDirectionCounterResetTime_OBOLETE;                    // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveSegmentLength;                                        // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BackOffDistance;                                          // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttackTrackingDistance;                                   // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PredictionFactor;                                         // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BackAndForthStuckCheck;                                   // 0x0494(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AttackAttempts;                                           // 0x0495(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0496(0x0002) MISSED OFFSET
	float                                              ActionChangedDelay;                                       // 0x0498(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloseAttackRepeatDelay;                                   // 0x049C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttackChainDelay;                                         // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BlockedPathRetryAttempts;                                 // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DirectionLockTime;                                        // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinWalkTimeDuringRoaming;                                 // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkTimeDuringRoaming;                                 // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinStandTimeDuringRoaming;                                // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxStandTimeDuringRoaming;                                // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IntimidateTime;                                           // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IntimidateAnimationEndTime;                               // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AlertActionTime;                                          // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AlertStartupTime;                                         // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AlertAllowedAgainTime;                                    // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DoNotDespawnTime;                                         // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	class UAISenseConfig_Sight*                        NormalAISenseSight;                                       // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      NormalAISenseHearing;                                     // 0x04E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      RelaxedAISenseHearing;                                    // 0x04E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      AlertedAISenseHearing;                                    // 0x04F0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Sight*                        SleepAISenseSight;                                        // 0x04F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AComplexAnimal2*                             _animal;                                                  // 0x0500(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD0];                                      // 0x0508(0x00D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ComplexAnimalAIController");
		return ptr;
	}


	void UpdatePerception(TArray<class AActor*> actorsPercepted);
	void StartFullAlert();
	void QuitObserve();
	void OnTakeDamageHandler(class AActor* damageActor, float Damage, const struct FVector& HitLocation, class APawn* eventInstigator);
	void OnActionChangedHandler(EAnimalAction CurrentAction, EAnimalAction PrevAction);
	EAnimalMode GetMode();
	void ChangeMode(EAnimalMode NewMode);
};


// Class ConZ.AnimalContinuousChargeAttackAIController
// 0x0018 (0x05F0 - 0x05D8)
class AAnimalContinuousChargeAttackAIController : public AComplexAnimalAIController
{
public:
	float                                              LockAttackDirectionDistance;                              // 0x05D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ContinueAttackDistance;                                   // 0x05DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x05E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalContinuousChargeAttackAIController");
		return ptr;
	}

};


// Class ConZ.AnimalCrowdFollowingComponent
// 0x0048 (0x0360 - 0x0318)
class UAnimalCrowdFollowingComponent : public UCrowdFollowingComponent
{
public:
	float                                              DesiredAngleDelta;                                        // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     RequestedVelocity;                                        // 0x031C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData)
	float                                              YawDelta;                                                 // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    TerrainRotation;                                          // 0x032C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData)
	float                                              SpeedLimit;                                               // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DeltaPosition;                                            // 0x033C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x0348(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x034C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalCrowdFollowingComponent");
		return ptr;
	}

};


// Class ConZ.BaseItemTag
// 0x0000 (0x0030 - 0x0030)
class UBaseItemTag : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BaseItemTag");
		return ptr;
	}

};


// Class ConZ.AnimalHandlingItemTag
// 0x0000 (0x0030 - 0x0030)
class UAnimalHandlingItemTag : public UBaseItemTag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalHandlingItemTag");
		return ptr;
	}

};


// Class ConZ.Skill
// 0x0070 (0x00A0 - 0x0030)
class USkill : public UDataAsset
{
public:
	struct FText                                       Caption;                                                  // 0x0030(0x0018) (Edit)
	ESkillReplicationID                                ReplicationID;                                            // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              ComboBonus;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              NoSkillBonus;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BasicBonus;                                               // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MediumBonus;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AdvancedBonus;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DisplayActionMessages;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               IsAvailableInCharacterCreation;                           // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	class UTexture2D*                                  _skillIcon;                                               // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2C];                                      // 0x0070(0x002C) MISSED OFFSET
	float                                              _famePointsMultiplier;                                    // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Skill");
		return ptr;
	}


	void SetSkillAttribute(ESkillAttribute skillAttribute);
	void SetLevel(ESkillLevel Level);
	void SetExperiencePoints(float Points);
	bool IsWeakenedByAttribute();
	class UTexture2D* GetSkillIcon();
	ESkillAttribute GetSkillAttribute();
	ESkillLevel GetLevel();
	float GetExperiencePoints();
	struct FString GetCaption();
};


// Class ConZ.IntelligenceSkill
// 0x0000 (0x00A0 - 0x00A0)
class UIntelligenceSkill : public USkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.IntelligenceSkill");
		return ptr;
	}

};


// Class ConZ.AnimalHandlingSkill
// 0x0010 (0x00B0 - 0x00A0)
class UAnimalHandlingSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalHandlingSkill");
		return ptr;
	}

};


// Class ConZ.AnimalMovementComponent
// 0x0000 (0x0770 - 0x0770)
class UAnimalMovementComponent : public UCharacterMovementComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalMovementComponent");
		return ptr;
	}

};


// Class ConZ.AnimalSoundComponent
// 0x00B8 (0x01D0 - 0x0118)
class UAnimalSoundComponent : public UCharacterSoundComponent
{
public:
	class USoundCue*                                   IdleSound;                                                // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateIdleSound;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AngrySound;                                               // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateAngrySound;                                      // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AttackSound;                                              // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateAttackSound;                                     // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   KillSound;                                                // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AlternateKillSound;                                       // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   WalkFootstepSound;                                        // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   RunFootstepSound;                                         // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootstepSoundOverlap;                                     // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FixedFootstepVolume;                                      // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedFootstepVolume;                                      // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSilenceTimeout;                                        // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSilenceTimeout;                                        // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x017C(0x003C) MISSED OFFSET
	EAnimalSound                                       _animalSound;                                             // 0x01B8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x01B9(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalSoundComponent");
		return ptr;
	}


	void OnRep_AnimalSound();
};


// Class ConZ.AnimalSpawner2
// 0x00A0 (0x03C8 - 0x0328)
class AAnimalSpawner2 : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	float                                              MinSpawnAwayDistance;                                     // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnAwayDistance;                                     // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, struct FAnimalSpawnInfo>       SpawnInfo;                                                // 0x0348(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class USphereComponent*                            SphereComponent;                                          // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class AGlobalAnimalSpawner*                        _globalSpawner;                                           // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x03A8(0x0010) MISSED OFFSET
	TArray<struct FAnimalManagementData>               _animalsData;                                             // 0x03B8(0x0010) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimalSpawner2");
		return ptr;
	}


	void SphereComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void SphereComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPlayerDespawned(class AActor* despawnedActor);
	bool IsSpawnerActive();
	int GetSpawnedAnimalsAmount(class UClass* AnimalClass);
};


// Class ConZ.AnimHelpers
// 0x0000 (0x0028 - 0x0028)
class UAnimHelpers : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimHelpers");
		return ptr;
	}

};


// Class ConZ.AnimNotify_CharacterActionEnd
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_CharacterActionEnd : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_CharacterActionEnd");
		return ptr;
	}

};


// Class ConZ.AnimNotify_CharacterActionNotify
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_CharacterActionNotify : public UAnimNotify
{
public:
	ECharacterActionNotifyType                         CharacterActionNotifyType;                                // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_CharacterActionNotify");
		return ptr;
	}

};


// Class ConZ.AnimNotify_ClimbingFinished
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_ClimbingFinished : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_ClimbingFinished");
		return ptr;
	}

};


// Class ConZ.AnimNotify_MakeNoise
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_MakeNoise : public UAnimNotify
{
public:
	ENoiseLevel                                        NoiseLevel;                                               // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_MakeNoise");
		return ptr;
	}

};


// Class ConZ.AnimNotify_PlaySoundBySurface
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_PlaySoundBySurface : public UAnimNotify
{
public:
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_PlaySoundBySurface");
		return ptr;
	}

};


// Class ConZ.AnimNotify_PlaySoundOnOwner
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_PlaySoundOnOwner : public UAnimNotify
{
public:
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_PlaySoundOnOwner");
		return ptr;
	}

};


// Class ConZ.AnimNotify_WaterPaddle
// 0x0028 (0x0060 - 0x0038)
class UAnimNotify_WaterPaddle : public UAnimNotify
{
public:
	class UParticleSystem*                             ParticleSystem;                                           // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DebugMode;                                                // 0x0058(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_WaterPaddle");
		return ptr;
	}

};


// Class ConZ.AnimNotify_WeaponActionNotify
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_WeaponActionNotify : public UAnimNotify
{
public:
	EWeaponActionNotifyType                            WeaponActionNotifyType;                                   // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponActionNotify");
		return ptr;
	}

};


// Class ConZ.AnimNotify_WeaponChamberBullet
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_WeaponChamberBullet : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponChamberBullet");
		return ptr;
	}

};


// Class ConZ.AnimNotify_WeaponChamberBulletInternal
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_WeaponChamberBulletInternal : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponChamberBulletInternal");
		return ptr;
	}

};


// Class ConZ.AnimNotify_WeaponEjectCasing
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_WeaponEjectCasing : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponEjectCasing");
		return ptr;
	}

};


// Class ConZ.AnimNotifyState_ChamberWeapon
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_ChamberWeapon : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotifyState_ChamberWeapon");
		return ptr;
	}

};


// Class ConZ.AnimNotifyState_Melee
// 0x0040 (0x0070 - 0x0030)
class UAnimNotifyState_Melee : public UAnimNotifyState
{
public:
	struct FGameplayTag                                _attackCapsuleAttachment;                                 // 0x0030(0x0008) (Edit, BlueprintReadOnly)
	float                                              _damageMultiplier;                                        // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDamageMagnitudeType                               _damageMagnitudeType;                                     // 0x003C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	float                                              _knockoutChance;                                          // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _stopOnHit;                                               // 0x0044(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	TArray<struct FMeleeHitDetectionMarker>            _hitDetectionMarkers;                                     // 0x0048(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	int                                                _hitDetectionSamplingRate;                                // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x005C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotifyState_Melee");
		return ptr;
	}

};


// Class ConZ.AnimNotifyState_PhysicalAnimation
// 0x0030 (0x0060 - 0x0030)
class UAnimNotifyState_PhysicalAnimation : public UAnimNotifyState
{
public:
	bool                                               GotoRagdollOnEnd;                                         // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FName                                       BodyProfileName;                                          // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConstraintProfileName;                                    // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       StrengthBlendCurveName;                                   // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhysicsBlendCurveName;                                    // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AnimNotifyState_PhysicalAnimation");
		return ptr;
	}

};


// Class ConZ.StrengthSkill
// 0x0000 (0x00A0 - 0x00A0)
class UStrengthSkill : public USkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StrengthSkill");
		return ptr;
	}

};


// Class ConZ.RangedWeaponsSkill
// 0x0010 (0x00B0 - 0x00A0)
class URangedWeaponsSkill : public UStrengthSkill
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RangedWeaponsSkill");
		return ptr;
	}

};


// Class ConZ.ArcherySkill
// 0x0068 (0x0118 - 0x00B0)
class UArcherySkill : public URangedWeaponsSkill
{
public:
	float                                              _drawWeightNoSkillValue;                                  // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawWeightBasicSkillValue;                               // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawWeightMediumSkillValue;                              // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawWeightAdvancedSkillValue;                            // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawWeightAboveAvancedSkillValue;                        // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _holdTimeInFullDrawNoSkillValue;                          // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _holdTimeInFullDrawBasicSkillValue;                       // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _holdTimeInFullDrawMediumSkillValue;                      // 0x00CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _holdTimeInFullDrawAdvancedSkillValue;                    // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _holdTimeInFullDrawAboveAvancedSkillValue;                // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _armsShakeMultiplierNoSkillValue;                         // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _armsShakeMultiplierBasicSkillValue;                      // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _armsShakeMultiplierMediumSkillValue;                     // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _armsShakeMultiplierAdvancedSkillValue;                   // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _armsShakeMultiplierAboveAvancedSkillValue;               // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _tuneBowDurationNoSkillValue;                             // 0x00EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _tuneBowDurationBasicSkillValue;                          // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _tuneBowDurationMediumSkillValue;                         // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _tuneBowDurationAdvancedSkillValue;                       // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _tuneBowDurationAboveAvancedSkillValue;                   // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawCenterDotExtraTimeLimitNoSkillValue;                 // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawCenterDotExtraTimeLimitBasicSkillValue;              // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawCenterDotExtraTimeLimitMediumSkillValue;             // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawCenterDotExtraTimeLimitAdvancedSkillValue;           // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _drawCenterDotExtraTimeLimitAboveAvancedSkillValue;       // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ArcherySkill");
		return ptr;
	}

};


// Class ConZ.MedicalAction
// 0x0008 (0x00A8 - 0x00A0)
class UMedicalAction : public USkillAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MedicalAction");
		return ptr;
	}

};


// Class ConZ.ArtificalPerspirationAction
// 0x0000 (0x00A8 - 0x00A8)
class UArtificalPerspirationAction : public UMedicalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ArtificalPerspirationAction");
		return ptr;
	}

};


// Class ConZ.AttachmentSocketMountType
// 0x0000 (0x0028 - 0x0028)
class UAttachmentSocketMountType : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AttachmentSocketMountType");
		return ptr;
	}

};


// Class ConZ.AttachmentSocketMountTypePrisonerHand
// 0x0000 (0x0028 - 0x0028)
class UAttachmentSocketMountTypePrisonerHand : public UAttachmentSocketMountType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AttachmentSocketMountTypePrisonerHand");
		return ptr;
	}

};


// Class ConZ.AttributeMapInterface
// 0x0000 (0x0028 - 0x0028)
class UAttributeMapInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AttributeMapInterface");
		return ptr;
	}


	void SetStringAttribute(const struct FString& Name, const struct FString& Value);
	void SetIntAttribute(const struct FString& Name, int Value);
	void SetFloatAttribute(const struct FString& Name, float Value);
	void SetBoolAttribute(const struct FString& Name, bool Value);
	bool HasAttribute(const struct FString& Name);
	struct FString GetStringAttribute(const struct FString& Name);
	int GetIntAttribute(const struct FString& Name);
	float GetFloatAttribute(const struct FString& Name);
	bool GetBoolAttribute(const struct FString& Name);
};


// Class ConZ.AttributesGraph
// 0x0130 (0x0230 - 0x0100)
class UAttributesGraph : public UWidget
{
public:
	ESkillAttribute                                    Attribute;                                                // 0x0100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0104(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x0118(0x0014) (ZeroConstructor, InstancedReference)
	float                                              Thickness;                                                // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FSlateBrush                                 HoverBrush;                                               // 0x0130(0x0088) (Edit, BlueprintVisible)
	struct FScriptDelegate                             HoverBrushDelegate;                                       // 0x01B8(0x0014) (ZeroConstructor, InstancedReference)
	struct FSlateFontInfo                              Font;                                                     // 0x01C8(0x0050) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0218(0x0010) MISSED OFFSET
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                   // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AttributesGraph");
		return ptr;
	}


	void UpdateNumOfPointsToTrack(int Num);
	void UpdateGraph();
	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
};


// Class ConZ.AudioStatics
// 0x0000 (0x0028 - 0x0028)
class UAudioStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AudioStatics");
		return ptr;
	}


	struct FName STATIC_GetMovementPaceSwitchValue(EPrisonerMovementPace Value);
	struct FName STATIC_GetMovementPaceSwitchName();
	struct FName STATIC_GetMotionIntensitySwitchValue(EMotionIntensity Value);
	struct FName STATIC_GetMotionIntensitySwitchName();
	struct FName STATIC_GetMaterialSwitchValue(TEnumAsByte<EPhysicalSurface> Value);
	struct FName STATIC_GetMaterialSwitchName();
	struct FName STATIC_GetImpactSeveritySwitchValue(EImpactSeverity Value);
	struct FName STATIC_GetImpactSeveritySwitchName();
	struct FName STATIC_GetGenderSwitchValue(EGender Value);
	struct FName STATIC_GetGenderSwitchName();
	struct FName STATIC_GetEnvironmentSwitchValue(EEnvironmentClass Value);
	struct FName STATIC_GetEnvironmentSwitchName();
	struct FName STATIC_GetCharacterPainSeveritySwitchValue(ECharacterPainSoundSeverity Value);
	struct FName STATIC_GetCharacterPainSeveritySwitchName();
};


// Class ConZ.AwarenessSkill
// 0x02B8 (0x0358 - 0x00A0)
class UAwarenessSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET
	float                                              StaminaConsumption;                                       // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               EnterFocusModeAudioEvent;                                 // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               LeaveFocusModeAudioEvent;                                 // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _updateTime;                                              // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _serverUpdateTime;                                        // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicWatchingDetectionChance;                            // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumWatchingDetectionChance;                           // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedWatchingDetectionChance;                         // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedWatchingDetectionChance;                    // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillItemDetectionTime;                                // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicItemDetectionTime;                                  // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumItemDetectionTime;                                 // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedItemDetectionTime;                               // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedItemDetectionTime;                          // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillItemDetectionRadius;                              // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicItemDetectionRadius;                                // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumItemDetectionRadius;                               // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedItemDetectionRadius;                             // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedItemDetectionRadius;                        // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillItemDetectionChance;                              // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicItemDetectionChance;                                // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumItemDetectionChance;                               // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedItemDetectionChance;                             // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedItemDetectionChance;                        // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillItemHighlightByDayRadius;                         // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicItemHighlightByDayRadius;                           // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumItemHighlightByDayRadius;                          // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedItemHighlightByDayRadius;                        // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedItemHighlightByDayRadius;                   // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillItemHighlightByNightRadius;                       // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicItemHighlightByNightRadius;                         // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumItemHighlightByNightRadius;                        // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedItemHighlightByNightRadius;                      // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedItemHighlightByNightRadius;                 // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillWatchingDetectionRadius;                          // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicWatchingDetectionRadius;                            // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumWatchingDetectionRadius;                           // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedWatchingDetectionRadius;                         // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedWatchingDetectionRadius;                    // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _characterDetectionAngle;                                 // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _characterDetectionTime;                                  // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _characterDetectionRange;                                 // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _characterDetectionPeriodicRangeIncrement;                // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillHiddenCharacterDetectionRange;                    // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicHiddenCharacterDetectionRange;                      // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumHiddenCharacterDetectionRange;                     // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedHiddenCharacterDetectionRange;                   // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedHiddenCharacterDetectionRange;              // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillHotSpotHiddenCharacterDetectionRange;             // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicHotSpotHiddenCharacterDetectionRange;               // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumHotSpotHiddenCharacterDetectionRange;              // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedHotSpotHiddenCharacterDetectionRange;            // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedHotSpotHiddenCharacterDetectionRange;       // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillSoundDetectionRange;                              // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicSoundDetectionRange;                                // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumSoundDetectionRange;                               // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedSoundDetectionRange;                             // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedSoundDetectionRange;                        // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _notMovingFocusRangeMultiplier;                           // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _slowMovingFocusRangeMultiplier;                          // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumMovingFocusRangeMultiplier;                        // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _fastMovingFocusRangeMultiplier;                          // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillFocusModeActivationTime;                          // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicFocusModeActivationTime;                            // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumFocusModeActivationTime;                           // 0x01BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedFocusModeActivationTime;                         // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedFocusModeActivationTime;                    // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillTrackDetectionRange;                              // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicTrackDetectionRange;                                // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumTrackDetectionRange;                               // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedTrackDetectionRange;                             // 0x01D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedTrackDetectionRange;                        // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _trackDetectionNightTimeMultiplier;                       // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillTrapDetectionRange;                               // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicTrapDetectionRange;                                 // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumTrapDetectionRange;                                // 0x01E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedTrapDetectionRange;                              // 0x01EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedTrapDetectionRange;                         // 0x01F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillFlashFadeOutDurationMultiplier;                   // 0x01F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicFlashFadeOutDurationMultiplier;                     // 0x01F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumFlashFadeOutDurationMultiplier;                    // 0x01FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedFlashFadeOutDurationMultiplier;                  // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedFlashFadeOutDurationMultiplier;             // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x150];                                     // 0x0208(0x0150) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.AwarenessSkill");
		return ptr;
	}


	void EnterFocusMode();
};


// Class ConZ.BacillusCereusPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UBacillusCereusPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BacillusCereusPoisoning");
		return ptr;
	}

};


// Class ConZ.BaneberryPoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UBaneberryPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BaneberryPoisoning");
		return ptr;
	}

};


// Class ConZ.BaseBuildingComponent
// 0x0130 (0x0720 - 0x05F0)
class UBaseBuildingComponent : public UStaticMeshComponent
{
public:
	struct FString                                     _name;                                                    // 0x05F0(0x0010) (Edit, ZeroConstructor)
	EBaseElementType                                   _baseElementType;                                         // 0x0600(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0600(0x0001) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               _isTileable;                                              // 0x0602(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isClimbable;                                             // 0x0603(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isBlockingItemPlacement;                                 // 0x0604(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _mustBePlacedOnFoundation;                                // 0x0605(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canEverBePlacedOnFoundation;                             // 0x0606(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canBePlacedOnOtherBaseElements;                          // 0x0607(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canBePlacedWithoutSnapping;                              // 0x0608(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldIgnoreSelfWhilePlacing;                            // 0x0609(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canBeGroundedOnOtherElements;                            // 0x060A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      _maxHeightLevel;                                          // 0x060B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxHeightOffsetWhilePlacing;                             // 0x060C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _addRandomRotation;                                       // 0x0610(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldDestroyElementsOnTopWhenDestroyed;                 // 0x0611(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _mustGroundAllPoints;                                     // 0x0612(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _traceComplexWhilePlacing;                                // 0x0613(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _mustBePlacedUpright;                                     // 0x0614(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _useSimpleCollisionForOverlaps;                           // 0x0615(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0616(0x0002) MISSED OFFSET
	struct FConZBaseBuildingSnappingData               _snappingData;                                            // 0x0618(0x0010) (Edit)
	TArray<struct FBaseElementSnapMarker>              _snapMarkers;                                             // 0x0628(0x0010) (Edit, ZeroConstructor)
	struct FRotator                                    _maxRotationWhilePlacing;                                 // 0x0638(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0644(0x0004) MISSED OFFSET
	TArray<class UStaticMesh*>                         _staticMeshVariations;                                    // 0x0648(0x0010) (Edit, ZeroConstructor)
	class UChoppingRecipeDataAsset*                    _choppingRecipeAsset;                                     // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _destructionTime;                                         // 0x0660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _repairTime;                                              // 0x0664(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRepairableParams                           _repairableParams;                                        // 0x0668(0x0038) (Edit)
	float                                              _healthPoints;                                            // 0x06A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canBeDamaged;                                            // 0x06A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x06A5(0x0003) MISSED OFFSET
	float                                              _decayPerHour;                                            // 0x06A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _walkingDamagePerSecond;                                  // 0x06AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _radialDamageMultiplier;                                  // 0x06B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldRemoveIntersectingElementsOnDestroy;               // 0x06B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x06B5(0x0003) MISSED OFFSET
	class UStaticMesh*                                 _weatherMaskMesh;                                         // 0x06B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _experienceAwardForBuilding;                              // 0x06C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	TArray<class UParticleSystem*>                     _destructionParticles;                                    // 0x06C8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FTransform>                          _destructionParticlesSpawnTransforms;                     // 0x06D8(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               _destructionSound;                                        // 0x06E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isDoor;                                                  // 0x06F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x06F1(0x0007) MISSED OFFSET
	class UClass*                                      _doorClass;                                               // 0x06F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _hasLadder;                                               // 0x0700(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0701(0x0007) MISSED OFFSET
	TArray<struct FLadderMarker>                       _ladderMarkers;                                           // 0x0708(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0718(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BaseBuildingComponent");
		return ptr;
	}

};


// Class ConZ.BaseItemContainerWidget
// 0x0038 (0x0258 - 0x0220)
class UBaseItemContainerWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    ObjectAddedToContainer;                                   // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0230(0x0004) MISSED OFFSET
	int                                                Columns;                                                  // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Rows;                                                     // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	class UGridPanel*                                  GridPanel;                                                // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 HighlightBorder;                                          // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0250(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BaseItemContainerWidget");
		return ptr;
	}


	void RefreshSize();
	void OnObjectAddedToContainerEvent__DelegateSignature(class UObject* Object);
	void OnDropEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Item);
	void OnDragStartEvent(class UBaseItemWidget* Widget, const struct FGeometry& Geometry);
	void OnDragLeaveEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Widget);
	void OnDragEnterEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Widget);
	void OnDragCancelledEvent(class UBaseItemWidget* Widget);
	void InitGrid(const struct FMargin& gridPadding);
	bool GetSlotsForPanel(class UGridSlot* GridSlot, int Width, int Height, class UGridPanel* panel, int numColumns, int numRows, TArray<class UInventorySlotUserWidget*>* slots);
	bool GetSlots(class UGridSlot* GridSlot, int Width, int Height, TArray<class UInventorySlotUserWidget*>* slots);
	TArray<class UItemUserWidget*> GetItemWidgets();
};


// Class ConZ.BaseItemWidget
// 0x0020 (0x0240 - 0x0220)
class UBaseItemWidget : public UDesignableUserWidget
{
public:
	class UBaseItemContainerWidget*                    ParentInventory;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0228(0x0008) MISSED OFFSET
	int                                                Width;                                                    // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UImage*                                      _imageWidget;                                             // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BaseItemWidget");
		return ptr;
	}


	void SetStacksCount(int count);
	int GetStacksCount();
	void GetDragImage(const struct FGeometry& Geometry, class UInventorySlotUserWidget* widgetImage);
	void DragCancelled();
};


// Class ConZ.BasicLadder
// 0x0028 (0x0350 - 0x0328)
class ABasicLadder : public AActor
{
public:
	class UStaticMeshComponent*                        _mesh;                                                    // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FLadderMarker>                       _ladderMarkers;                                           // 0x0330(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BasicLadder");
		return ptr;
	}

};


// Class ConZ.ConZNotification
// 0x0008 (0x0030 - 0x0028)
class UConZNotification : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZNotification");
		return ptr;
	}

};


// Class ConZ.BasicNotification
// 0x0000 (0x0030 - 0x0030)
class UBasicNotification : public UConZNotification
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BasicNotification");
		return ptr;
	}

};


// Class ConZ.NotificationDescription
// 0x0018 (0x0040 - 0x0028)
class UNotificationDescription : public UObject
{
public:
	ENotificationTarget                                Target;                                                   // 0x0028(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FDbIntegerId                                TargetUserProfileId;                                      // 0x0030(0x0008) (SaveGame)
	bool                                               ShouldSendIfClientOffline;                                // 0x0038(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NotificationDescription");
		return ptr;
	}

};


// Class ConZ.BasicNotificationDescription
// 0x0018 (0x0058 - 0x0040)
class UBasicNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                  // 0x0040(0x0010) (ZeroConstructor, SaveGame)
	float                                              Duration;                                                 // 0x0050(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BasicNotificationDescription");
		return ptr;
	}

};


// Class ConZ.BasicTextWidget
// 0x0008 (0x0210 - 0x0208)
class UBasicTextWidget : public UUserWidget
{
public:
	int                                                MaxTextRows;                                              // 0x0208(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCharactersPerTextRow;                                  // 0x020C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BasicTextWidget");
		return ptr;
	}


	void SetCurrentText(const struct FText& Text);
};


// Class ConZ.Bear
// 0x0010 (0x0AF0 - 0x0AE0)
class ABear : public AAnimal
{
public:
	float                                              _scale;                                                   // 0x0AE0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0AE4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Bear");
		return ptr;
	}


	void PlayAttackMontageOnClients();
	void OnRep_Scale();
};


// Class ConZ.BearAIController
// 0x0010 (0x04D8 - 0x04C8)
class ABearAIController : public AAnimalAIController
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BearAIController");
		return ptr;
	}

};


// Class ConZ.BearAnimInstance
// 0x0000 (0x0380 - 0x0380)
class UBearAnimInstance : public UAnimalAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BearAnimInstance");
		return ptr;
	}

};


// Class ConZ.BinocularsItem
// 0x0060 (0x08C8 - 0x0868)
class ABinocularsItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	TArray<struct FScopeZoomLevelSettings>             _zoomLevelSettings;                                       // 0x0870(0x0010) (Edit, ZeroConstructor)
	class UTexture2D*                                  _scopingOverlayTexture;                                   // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageStandingFP;                                       // 0x0888(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageCrouchingFP;                                      // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageProneFP;                                          // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageStandingTP;                                       // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageCrouchingTP;                                      // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageProneTP;                                          // 0x08B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _scopingStartDelay;                                       // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _scopingStopDelay;                                        // 0x08BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x08C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BinocularsItem");
		return ptr;
	}

};


// Class ConZ.BioChemSkill
// 0x0000 (0x00A0 - 0x00A0)
class UBioChemSkill : public UIntelligenceSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BioChemSkill");
		return ptr;
	}

};


// Class ConZ.Bird
// 0x00A0 (0x09D0 - 0x0930)
class ABird : public AConZCharacter
{
public:
	bool                                               bUseRandomSeed;                                           // 0x0930(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0931(0x0003) MISSED OFFSET
	int                                                randomSeed;                                               // 0x0934(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationRate;                                             // 0x0938(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocRandomRange;                                     // 0x093C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     InitialRotationFactor;                                    // 0x0948(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              TargetThreshold;                                          // 0x0954(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurnAngleRange;                                           // 0x0958(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              YawFactor;                                                // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WindDirectionNormalized;                                  // 0x0964(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              WindStrength;                                             // 0x0970(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0974(0x0004) MISSED OFFSET
	class UHitReactComponent*                          HitReactComponent;                                        // 0x0978(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0980(0x0004) MISSED OFFSET
	float                                              _health;                                                  // 0x0984(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0988(0x0030) MISSED OFFSET
	struct FVector                                     _targetLocation;                                          // 0x09B8(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x09C4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Bird");
		return ptr;
	}


	void Kill();
	void GoToRagdoll();
};


// Class ConZ.Bird2
// 0x0030 (0x0B20 - 0x0AF0)
class ABird2 : public AAnimal2
{
public:
	float                                              MaxFlightAltitude;                                        // 0x0AF0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isLanding;                                               // 0x0AF4(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               _isTakingOff;                                             // 0x0AF5(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               _isPerched;                                               // 0x0AF6(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               _isFlying;                                                // 0x0AF7(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<bool>                                       _states;                                                  // 0x0AF8(0x0010) (ZeroConstructor)
	unsigned char                                      _repStates;                                               // 0x0B08(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0B09(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Bird2");
		return ptr;
	}


	void OnRep_States();
	bool GetIsTakingOff();
	bool GetIsStaringPerched();
	bool GetIsPerched();
	bool GetIsLanding();
	bool GetIsFlying();
	void CapsuleComponent_OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class ConZ.Bird2AIController
// 0x0060 (0x0498 - 0x0438)
class ABird2AIController : public AAIController
{
public:
	float                                              FlyDurationMin;                                           // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlyDurationMax;                                           // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RemainOnGroundDurationMin;                                // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RemainOnGroundDurationMax;                                // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              turnSpeed;                                                // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlightSegmentDistance;                                    // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LandingDistance;                                          // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x44];                                      // 0x0454(0x0044) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Bird2AIController");
		return ptr;
	}


	void UpdatePerception(TArray<class AActor*> actorsPercepted);
};


// Class ConZ.Bird2AnimInstance
// 0x0010 (0x0370 - 0x0360)
class UBird2AnimInstance : public UAnimInstance
{
public:
	bool                                               IsStaringPerched;                                         // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	struct FRotator                                    SlopeRootTiltRotation;                                    // 0x0364(0x000C) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Bird2AnimInstance");
		return ptr;
	}

};


// Class ConZ.BirdTargetPoint
// 0x0008 (0x0330 - 0x0328)
class ABirdTargetPoint : public AActor
{
public:
	bool                                               IsOccupied;                                               // 0x0328(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BirdTargetPoint");
		return ptr;
	}

};


// Class ConZ.BloodOxygenationWidget
// 0x00D8 (0x01D8 - 0x0100)
class UBloodOxygenationWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                    // 0x0100(0x0088) (Edit, BlueprintVisible)
	struct FScriptDelegate                             BrushDelegate;                                            // 0x0188(0x0014) (ZeroConstructor, InstancedReference)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0198(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x01A8(0x0014) (ZeroConstructor, InstancedReference)
	float                                              Thickness;                                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Periods;                                                  // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                   // 0x01D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BloodOxygenationWidget");
		return ptr;
	}


	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	float GetMinOxygenSaturation();
	float GetMaxOxygenSaturation();
};


// Class ConZ.BloodPressureWidget
// 0x00D8 (0x01D8 - 0x0100)
class UBloodPressureWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                    // 0x0100(0x0088) (Edit, BlueprintVisible)
	struct FScriptDelegate                             BrushDelegate;                                            // 0x0188(0x0014) (ZeroConstructor, InstancedReference)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0198(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x01A8(0x0014) (ZeroConstructor, InstancedReference)
	float                                              Thickness;                                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Periods;                                                  // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                   // 0x01D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BloodPressureWidget");
		return ptr;
	}


	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
};


// Class ConZ.Objective
// 0x0100 (0x0428 - 0x0328)
class AObjective : public AActor
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x0328(0x0090) MISSED OFFSET
	TArray<struct FDialogueInfo>                       _objectivesIntroDialogues;                                // 0x03B8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDialogueInfo>                       _objectivesOutroSuccessDialogues;                         // 0x03C8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDialogueInfo>                       _objectivesOutroFailDialogues;                            // 0x03D8(0x0010) (Edit, ZeroConstructor)
	EObjectiveState                                    _objectiveState;                                          // 0x03E8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03E9(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AMission>                     _parentMission;                                           // 0x03EC(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	struct FText                                       _description;                                             // 0x03F8(0x0018) (Edit)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0410(0x0010) MISSED OFFSET
	bool                                               _objectiveForcedFail;                                     // 0x0420(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _canInterruptDialogue;                                    // 0x0421(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _playUISounds;                                            // 0x0422(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0423(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Objective");
		return ptr;
	}


	void SetObjectiveState(EObjectiveState Value, bool silent);
	void Server_ActiveObjectiveInitialized();
	void OnRep_ObjectiveStateChanged();
	void OnObjectiveStarted();
	void OnObjectiveInitialized();
	void OnObjectiveFailed();
	void OnObjectiveCompleted();
	void OnObjectiveBelated();
	bool IsStarted();
	bool IsCompleted();
	struct FText GetDescription();
	void FailObjective(bool forceFail);
	void CompleteObjective();
	void Client_ShowWaypointWidget(class AActor* targetActor, class AActor* actorToTieLifetime);
	void Client_RemoveWaypointWidget();
	void Client_BroadcastTrackedItemAmount(int currentAmount);
	bool CanInterruptDialogue();
};


// Class ConZ.RequirementObjective
// 0x0010 (0x0438 - 0x0428)
class ARequirementObjective : public AObjective
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0428(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RequirementObjective");
		return ptr;
	}

};


// Class ConZ.BlueprintableItemObjective
// 0x0038 (0x0470 - 0x0438)
class ABlueprintableItemObjective : public ARequirementObjective
{
public:
	EBlueprintItemActionType                           _actionType;                                              // 0x0438(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0439(0x0007) MISSED OFFSET
	class UClass*                                      _targetBlueprintActor;                                    // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              _itemsToFill;                                             // 0x0448(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0458(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BlueprintableItemObjective");
		return ptr;
	}

};


// Class ConZ.BodyTemperatureWidget
// 0x00D8 (0x01D8 - 0x0100)
class UBodyTemperatureWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                    // 0x0100(0x0088) (Edit, BlueprintVisible)
	struct FScriptDelegate                             BrushDelegate;                                            // 0x0188(0x0014) (ZeroConstructor, InstancedReference)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0198(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x01A8(0x0014) (ZeroConstructor, InstancedReference)
	float                                              Thickness;                                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Periods;                                                  // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                   // 0x01D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BodyTemperatureWidget");
		return ptr;
	}


	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	float GetMinTemperature();
	float GetMaxTemperature();
};


// Class ConZ.Minigame
// 0x0078 (0x03A0 - 0x0328)
class AMinigame : public AActor
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0328(0x0030) MISSED OFFSET
	int                                                _testingMode;                                             // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	class USceneComponent*                             _rootComponent;                                           // 0x0360(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    _captureCam;                                              // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    _captureMaskCam;                                          // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0378(0x0008) MISSED OFFSET
	class UMinigameWidget*                             _minigameWidget;                                          // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      _minigameWidgetClass;                                     // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0390(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Minigame");
		return ptr;
	}

};


// Class ConZ.BombDefusalMinigame
// 0x0200 (0x05A0 - 0x03A0)
class ABombDefusalMinigame : public AMinigame
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        _timeBomb;                                                // 0x03A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMesh*                                 _splineConnectorMesh;                                     // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x03B8(0x0010) MISSED OFFSET
	struct FVector                                     _wireButtonsSize;                                         // 0x03C8(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               _bombDefusalTimerStartSound;                              // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _bombDefusalTimerStopSound;                               // 0x03E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _cutWireSound;                                            // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _bombDefusedSound;                                        // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      _defusalTool;                                             // 0x03F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              _defusingToolDistanceFromCamera;                          // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _defusingToolOffsetFromCursorX;                           // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _defusingToolOffsetFromCursorZ;                           // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _minDefusingToolOffsetFromCenter;                         // 0x040C(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     _maxDefusingToolOffsetFromCenter;                         // 0x0418(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	class UMaterialInterface*                          _greenLedLight;                                           // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          _redLedLight;                                             // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          _yellowLedLight;                                          // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UStaticMeshComponent*>                _ledLights;                                               // 0x0440(0x0010) (Edit, ExportObject, ZeroConstructor)
	class UStaticMesh*                                 _ledLightMesh;                                            // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class UStaticMesh*                                 _wireMesh;                                                // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<EWireType>                                  _wiresEndPositions;                                       // 0x0468(0x0010) (ZeroConstructor)
	TArray<struct FWireDescription>                    _wires;                                                   // 0x0478(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0488(0x0010) MISSED OFFSET
	TArray<struct FSplineDescription>                  _splines;                                                 // 0x0498(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x10];                                      // 0x04A8(0x0010) MISSED OFFSET
	int                                                _numberOfWires;                                           // 0x04B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _numberOfWirePoints;                                      // 0x04BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _wiresShuffleIntensity;                                   // 0x04C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _minWiresComplexity;                                      // 0x04C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ESplineAxis                                        _wiresForwardAxis;                                        // 0x04C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x04C9(0x0003) MISSED OFFSET
	float                                              _wiresStartSmoothness;                                    // 0x04CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wiresEndSmoothness;                                      // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wiresMiddleSmoothness;                                   // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wiresSharpCornerSmoothness;                              // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxSegmentSize;                                          // 0x04DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wirePointsSpreadPositive;                                // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wirePointsSpreadNegative;                                // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wireHeight;                                              // 0x04E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _wireVerticalSpacing;                                     // 0x04EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _wirePointsOffset;                                        // 0x04F0(0x000C) (Edit, IsPlainOldData)
	float                                              _wireEndOffset;                                           // 0x04FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _additionalWireEndPointOffset;                            // 0x0500(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        _cutWireSegment0;                                         // 0x0510(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _cutWireSegment1;                                         // 0x0518(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _cutWireSegment2;                                         // 0x0520(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _cutWireSegment3;                                         // 0x0528(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _cutWireSegment4;                                         // 0x0530(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _cutWireSegment5;                                         // 0x0538(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _uncutWireSegment0;                                       // 0x0540(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _uncutWireSegment1;                                       // 0x0548(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _uncutWireSegment2;                                       // 0x0550(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _uncutWireSegment3;                                       // 0x0558(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _uncutWireSegment4;                                       // 0x0560(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _uncutWireSegment5;                                       // 0x0568(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               _wireBox1;                                                // 0x0570(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               _wireBox2;                                                // 0x0578(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               _wireBox3;                                                // 0x0580(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               _wireBox4;                                                // 0x0588(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               _wireBox5;                                                // 0x0590(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               _wireBox6;                                                // 0x0598(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BombDefusalMinigame");
		return ptr;
	}


	void Reload();
	void PlayCutWireMontage();
};


// Class ConZ.MinigameConfiguration
// 0x0018 (0x0040 - 0x0028)
class UMinigameConfiguration : public UObject
{
public:
	class UClass*                                      MinigameClass;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MinigameConfiguration");
		return ptr;
	}

};


// Class ConZ.BombDefusalMinigameConfiguration
// 0x0008 (0x0048 - 0x0040)
class UBombDefusalMinigameConfiguration : public UMinigameConfiguration
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BombDefusalMinigameConfiguration");
		return ptr;
	}

};


// Class ConZ.MinigameWidget
// 0x0018 (0x0238 - 0x0220)
class UMinigameWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0220(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MinigameWidget");
		return ptr;
	}

};


// Class ConZ.BombDefusalWidget
// 0x0020 (0x0258 - 0x0238)
class UBombDefusalWidget : public UMinigameWidget
{
public:
	class UTextBlock*                                  _remainingTimeMinutes1;                                   // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _remainingTimeMinutes2;                                   // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _remainingTimeSeconds1;                                   // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _remainingTimeSeconds2;                                   // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BombDefusalWidget");
		return ptr;
	}

};


// Class ConZ.BondageComponent
// 0x0010 (0x0BB0 - 0x0BA0)
class UBondageComponent : public USkeletalMeshComponent
{
public:
	EClothesType                                       _boundBodyPart;                                           // 0x0BA0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0BA1(0x0003) MISSED OFFSET
	float                                              _tightness;                                               // 0x0BA4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0BA8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BondageComponent");
		return ptr;
	}


	void UpdateVisuals();
	void OnRep_BoundBodyPart();
	void OnRep_BondageItem();
	class AItem* GetBondageItem();
};


// Class ConZ.BondageItemTag
// 0x0068 (0x0098 - 0x0030)
class UBondageItemTag : public UBaseItemTag
{
public:
	class USkeletalMesh*                               BondageMesh;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseStruggleDuration;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StruggleStrengthModifier;                                 // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StruggleDexterityModifier;                                // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundMovementSpeedMultiplier;                            // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaterMovementSpeedMultiplier;                             // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UAnimSequenceBase*                           HandsBoundIdleFPAnimation;                                // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           HandsBoundIdleTPAnimation;                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                HandsBoundMontage;                                        // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                HandsAdjustMontage;                                       // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                HandsBoundStruggleMontage;                                // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                HandsFreedMontage;                                        // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BindingHandsMontage;                                      // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                AdjustingHandsMontage;                                    // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                HandsBoundSuicideMontage;                                 // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BondageItemTag");
		return ptr;
	}

};


// Class ConZ.BotulismPoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UBotulismPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BotulismPoisoning");
		return ptr;
	}

};


// Class ConZ.WeaponAttachment
// 0x0020 (0x0888 - 0x0868)
class AWeaponAttachment : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	class UStaticMesh*                                 _staticMeshWhenAttached;                                  // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0878(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachment");
		return ptr;
	}


	void Unequip();
	class UStaticMesh* GetStaticMeshWhenAttached();
	float GetShakinessModifier();
	class AWeapon* GetOwningWeapon();
	void Equip(class AWeapon* Weapon);
};


// Class ConZ.BowAttachmentSilencer
// 0x0008 (0x0890 - 0x0888)
class ABowAttachmentSilencer : public AWeaponAttachment
{
public:
	float                                              _noiseMultiplier;                                         // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x088C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BowAttachmentSilencer");
		return ptr;
	}

};


// Class ConZ.BowAttachmentStabilizer
// 0x0008 (0x0898 - 0x0890)
class ABowAttachmentStabilizer : public ABowAttachmentSilencer
{
public:
	float                                              _shakinessModifier;                                       // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0894(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BowAttachmentStabilizer");
		return ptr;
	}

};


// Class ConZ.MeleeSkill
// 0x0058 (0x00F8 - 0x00A0)
class UMeleeSkill : public UStrengthSkill
{
public:
	class UMeleeSkillAnimationsPreset*                 AnimationsPreset;                                         // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMeleeSkillExperienceAwards                 _noSkillExperienceAwards;                                 // 0x00A8(0x0010) (Edit)
	struct FMeleeSkillExperienceAwards                 _basicSkillExperienceAwards;                              // 0x00B8(0x0010) (Edit)
	struct FMeleeSkillExperienceAwards                 _mediumSkillExperienceAwards;                             // 0x00C8(0x0010) (Edit)
	struct FMeleeSkillExperienceAwards                 _advancedSkillExperienceAwards;                           // 0x00D8(0x0010) (Edit)
	struct FMeleeSkillExperienceAwards                 _aboveAdvancedSkillExperienceAwards;                      // 0x00E8(0x0010) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeSkill");
		return ptr;
	}


	class UAnimSequenceBase* GetWalkingIdleAnimationTP();
	class UAnimSequenceBase* GetWalkingIdleAnimationFP();
	class UAnimSequenceBase* GetTiredIdleAnimationTP();
	class UAnimSequenceBase* GetTiredIdleAnimationFP();
	float GetStaminaMultiplier(float excessGearWeight);
	class UAnimSequenceBase* GetPrimaryIdleAnimationTP();
	class UAnimSequenceBase* GetPrimaryIdleAnimationFP();
	class UAnimMontage* GetLeaveCombatModeMontage();
	TArray<class UAnimSequenceBase*> GetInactivityIdleAnimations();
	float GetIdleToBlockBlendDuration();
	class UAnimMontage* GetEnterCombatModeMontage();
	float GetBlockToIdleBlendDuration();
	class UAnimSequenceBase* GetBlockIdleAnimationTP();
	class UAnimSequenceBase* GetBlockIdleAnimationFP();
	class UBlendSpace* GetAimOffsetBlendSpaceTP();
	class UBlendSpace* GetAimOffsetBlendSpaceFP();
};


// Class ConZ.BoxingSkill
// 0x0000 (0x00F8 - 0x00F8)
class UBoxingSkill : public UMeleeSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BoxingSkill");
		return ptr;
	}

};


// Class ConZ.TriggerComponent
// 0x0060 (0x05C0 - 0x0560)
class UTriggerComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0560(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TriggerComponent");
		return ptr;
	}

};


// Class ConZ.ProximityTriggerComponent
// 0x0040 (0x0600 - 0x05C0)
class UProximityTriggerComponent : public UTriggerComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x05C0(0x0004) MISSED OFFSET
	float                                              TriggerAngle;                                             // 0x05C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MotionDetectionSensitivity;                               // 0x05C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MotionDetectionDepletionSpeed;                            // 0x05CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _motionDetector;                                          // 0x05D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05D4(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               _motionDetectorStartSound;                                // 0x05D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _motionDetectorEndSound;                                  // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x05E8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProximityTriggerComponent");
		return ptr;
	}

};


// Class ConZ.BoxProximityTriggerComponent
// 0x0020 (0x0620 - 0x0600)
class UBoxProximityTriggerComponent : public UProximityTriggerComponent
{
public:
	class UBoxComponent*                               BoxCollisionComponent;                                    // 0x0600(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     _triggerSize;                                             // 0x0608(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0614(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BoxProximityTriggerComponent");
		return ptr;
	}


	void BoxComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BoxComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class ConZ.BreathingBarLungsWidget
// 0x0018 (0x0220 - 0x0208)
class UBreathingBarLungsWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	class UImage*                                      _lungs;                                                   // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _lungsCritical;                                           // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BreathingBarLungsWidget");
		return ptr;
	}


	void StopCriticalLungsAnimation();
	void StartCriticalLungsAnimation();
	bool IsCriticalLungsAnimationPlaying();
	class UWidgetAnimation* GetCriticalLungsAnimation();
};


// Class ConZ.BrokenArrow
// 0x0000 (0x0868 - 0x0868)
class ABrokenArrow : public AItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BrokenArrow");
		return ptr;
	}

};


// Class ConZ.Injury
// 0x0000 (0x01B0 - 0x01B0)
class UInjury : public USickness
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Injury");
		return ptr;
	}

};


// Class ConZ.PhysicalInjury
// 0x0070 (0x0220 - 0x01B0)
class UPhysicalInjury : public UInjury
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x01B0(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PhysicalInjury");
		return ptr;
	}

};


// Class ConZ.BrokenLimbsInjury
// 0x0008 (0x0228 - 0x0220)
class UBrokenLimbsInjury : public UPhysicalInjury
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BrokenLimbsInjury");
		return ptr;
	}

};


// Class ConZ.BruisingComponent
// 0x0078 (0x0168 - 0x00F0)
class UBruisingComponent : public UActorComponent
{
public:
	class UBruisingData*                               BruisingData;                                             // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               FadeBruises;                                              // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              BruisesLifeTime;                                          // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BruisesFadeUpdateInterval;                                // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class UTextureRenderTarget2D*                      _renderTargetByLayer[0x3];                                // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x48];                                      // 0x0120(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BruisingComponent");
		return ptr;
	}


	void MakeCompletelyBruised();
	class UTextureRenderTarget2D* GetBruiseLayerRenderTarget(EBruiseLayer Layer);
	void ClearBruises();
	void AddBruise(EBruiseZone zone);
};


// Class ConZ.BruisingData
// 0x0010 (0x0040 - 0x0030)
class UBruisingData : public UDataAsset
{
public:
	TArray<struct FBruisePatch>                        Patches;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BruisingData");
		return ptr;
	}

};


// Class ConZ.BuildingHelperComponent
// 0x0000 (0x00F0 - 0x00F0)
class UBuildingHelperComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BuildingHelperComponent");
		return ptr;
	}

};


// Class ConZ.Building
// 0x0108 (0x0430 - 0x0328)
class ABuilding : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	TArray<struct FLadderMarker>                       _ladderMarkers;                                           // 0x0338(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0348(0x0010) MISSED OFFSET
	TArray<struct FWindowMarker>                       _windowMarkers;                                           // 0x0358(0x0010) (Edit, ZeroConstructor)
	TArray<struct FWindowMarker>                       _windowMarkersDynamic;                                    // 0x0368(0x0010) (ZeroConstructor)
	TArray<struct FWindowMarkerModifier>               _windowMarkerModifiers;                                   // 0x0378(0x0010) (Net, ZeroConstructor)
	bool                                               _isCleared;                                               // 0x0388(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isClaimable;                                             // 0x0389(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x038A(0x0006) MISSED OFFSET
	TMap<struct FString, class ADoor*>                 _doors;                                                   // 0x0390(0x0050) (ZeroConstructor)
	TArray<class UFortificationComponent*>             _fortifications;                                          // 0x03E0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData03[0x40];                                      // 0x03F0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Building");
		return ptr;
	}


	void OnRep_WindowMarkerModifiers();
	void OnRep_Cleared();
};


// Class ConZ.BuildingManager
// 0x0248 (0x0570 - 0x0328)
class ABuildingManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0328(0x0048) MISSED OFFSET
	TMap<class ABuilding*, struct FBox2D>              _buildings;                                               // 0x0370(0x0050) (ZeroConstructor)
	TMap<struct FDbIntegerId, struct FBuildingsArray>  _buildingsOwned;                                          // 0x03C0(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x160];                                     // 0x0410(0x0160) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BuildingManager");
		return ptr;
	}


	void NetMulticast_UpdateDoorData(int dataVersion, const struct FString& runtimeId, const struct FDoorRepData& doorData);
	void NetMulticast_UpdateBuildingFortificationsState(int dataVersion, const struct FString& buildingId, TArray<struct FFortificationData> FortificationData);
	void NetMulticast_UpdateBuildingData(int dataVersion, const struct FString& runtimeId, const struct FBuildingData& BuildingData);
};


// Class ConZ.Burnable
// 0x0000 (0x0028 - 0x0028)
class UBurnable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Burnable");
		return ptr;
	}


	void SetFuel(float Value);
	float GetFuel();
};


// Class ConZ.BuryData
// 0x0070 (0x00A0 - 0x0030)
class UBuryData : public UDataAsset
{
public:
	TMap<TEnumAsByte<EPhysicalSurface>, struct FBuryMaterialData> AllowedBuryMaterials;                                     // 0x0030(0x0050) (Edit, ZeroConstructor)
	class UClass*                                      MoundItemClass;                                           // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              staminaDrain;                                             // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RecoveredStaminaThreshold;                                // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SkillToIncrease;                                          // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkillIncreaseAmount;                                      // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkillIncreaseModifier;                                    // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BuryData");
		return ptr;
	}

};


// Class ConZ.BuryToolItemTag
// 0x0030 (0x0060 - 0x0030)
class UBuryToolItemTag : public UBaseItemTag
{
public:
	bool                                               IsSmallSizedTool;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                BuryItemUsage;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuryDurationModifier;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FName                                       BladeTipSocket;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       BladeCenterSocket;                                        // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShortToolMinBuryTime;                                     // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShortToolMaxBuryTime;                                     // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LongToolMinBuryTime;                                      // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LongToolMaxBuryTime;                                      // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BuryToolItemTag");
		return ptr;
	}

};


// Class ConZ.Deficiency
// 0x0010 (0x01C0 - 0x01B0)
class UDeficiency : public USickness
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Deficiency");
		return ptr;
	}

};


// Class ConZ.CalciumDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UCalciumDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CalciumDeficiency");
		return ptr;
	}

};


// Class ConZ.CamouflageSkill
// 0x0108 (0x01A8 - 0x00A0)
class UCamouflageSkill : public UIntelligenceSkill
{
public:
	float                                              _activationTime;                                          // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _standingPenalty;                                         // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _crouchingPenalty;                                        // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _pronePenalty;                                            // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _slowMovingStandingPenalty;                               // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _slowMovingCrouchingPenalty;                              // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _slowMovingPronePenalty;                                  // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumMovingStandingPenalty;                             // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumMovingCrouchingPenalty;                            // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _fastMovingStandingPenalty;                               // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _standingAIPerceptionMultiplier;                          // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _crouchingAIPerceptionMultiplier;                         // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _proneAIPerceptionMultiplier;                             // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxRelevantAIPerceptionRadius;                           // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6C];                                      // 0x00D8(0x006C) MISSED OFFSET
	struct FCamouflageSkillExperienceAwards            NoSkillExperienceAwards;                                  // 0x0144(0x0004) (Edit)
	struct FCamouflageSkillExperienceAwards            BasicSkillExperienceAwards;                               // 0x0148(0x0004) (Edit)
	struct FCamouflageSkillExperienceAwards            MediumSkillExperienceAwards;                              // 0x014C(0x0004) (Edit)
	struct FCamouflageSkillExperienceAwards            AdvancedSkillExperienceAwards;                            // 0x0150(0x0004) (Edit)
	struct FCamouflageSkillExperienceAwards            AboveAdvancedSkillExperienceAwards;                       // 0x0154(0x0004) (Edit)
	struct FCamouflageSkillParametersPerSkillLevel     NoSkillParameters;                                        // 0x0158(0x0010) (Edit)
	struct FCamouflageSkillParametersPerSkillLevel     BasicSkillParameters;                                     // 0x0168(0x0010) (Edit)
	struct FCamouflageSkillParametersPerSkillLevel     MediumSkillParameters;                                    // 0x0178(0x0010) (Edit)
	struct FCamouflageSkillParametersPerSkillLevel     AdvancedSkillParameters;                                  // 0x0188(0x0010) (Edit)
	struct FCamouflageSkillParametersPerSkillLevel     AboveAdvancedSkillParameters;                             // 0x0198(0x0010) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CamouflageSkill");
		return ptr;
	}


	float GetHidePenaltyForCharacter(class AConZCharacter* Character);
};


// Class ConZ.CampylobacteriosisPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UCampylobacteriosisPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CampylobacteriosisPoisoning");
		return ptr;
	}

};


// Class ConZ.CarbonMonoxidePoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UCarbonMonoxidePoisoning : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CarbonMonoxidePoisoning");
		return ptr;
	}

};


// Class ConZ.CargoDropContainer
// 0x0088 (0x03B0 - 0x0328)
class ACargoDropContainer : public AActor
{
public:
	float                                              DelayDuration;                                            // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallDuration;                                             // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DetonationTime;                                           // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DetonationCountdown;                                      // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               LandSound;                                                // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               WarningSound;                                             // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               DetonationSound;                                          // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DetonationParticles;                                      // 0x0350(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CameraShakeClass;                                         // 0x0358(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        _parachuteMesh;                                           // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _flareParticles;                                          // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _dustParticles;                                           // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     _endLocation;                                             // 0x0378(0x000C) (Net, IsPlainOldData)
	struct FRotator                                    _rotation;                                                // 0x0384(0x000C) (Net, IsPlainOldData)
	bool                                               _landed;                                                  // 0x0390(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0391(0x0003) MISSED OFFSET
	float                                              _fallingSpeed;                                            // 0x0394(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _flareParticlesEnabled;                                   // 0x0398(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x0399(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CargoDropContainer");
		return ptr;
	}


	void OnWarning();
	void OnTouchdown();
	void OnRep_FlareParticlesEnabled();
	void OnDetonate();
	void Multicast_StartDetonation();
	void Multicast_Detonate();
	void DropToLocation(const struct FVector& EndLocation, float fallingTime);
};


// Class ConZ.WorldEvent
// 0x0028 (0x0350 - 0x0328)
class AWorldEvent : public AActor
{
public:
	struct FVector                                     Location;                                                 // 0x0328(0x000C) (Net, IsPlainOldData)
	float                                              Radius;                                                   // 0x0334(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    IconTexture;                                              // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WorldEvent");
		return ptr;
	}


	void StartEvent();
};


// Class ConZ.CargoDropEvent
// 0x0018 (0x0368 - 0x0350)
class ACargoDropEvent : public AWorldEvent
{
public:
	TArray<class UClass*>                              CargoDropClasses;                                         // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class APlayerStart*                                ForcePlayerStart;                                         // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CargoDropEvent");
		return ptr;
	}


	void Multicast_DisplayNotification(const struct FString& SectorName, float FallDuration);
};


// Class ConZ.CargoDropShip
// 0x0000 (0x0328 - 0x0328)
class ACargoDropShip : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CargoDropShip");
		return ptr;
	}

};


// Class ConZ.WeaponItem
// 0x0048 (0x08B0 - 0x0868)
class AWeaponItem : public AItem
{
public:
	uint32_t                                           SizeXInHands;                                             // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           SizeYInHands;                                             // 0x086C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MinRange;                                                 // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxRange;                                                 // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MinDamage;                                                // 0x0878(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxDamage;                                                // 0x087C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           AP;                                                       // 0x0880(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MagazineSize;                                             // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           FireModes;                                                // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           ROF;                                                      // 0x088C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           ReloadTime;                                               // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0894(0x0004) MISSED OFFSET
	class UWeaponAccuracyGroup*                        AccuracyGroup;                                            // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWeaponDamageGroup*                          DamageGroup;                                              // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWeaponRecoilGroup*                          RecoilGroup;                                              // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponItem");
		return ptr;
	}

};


// Class ConZ.Weapon
// 0x0B80 (0x1430 - 0x08B0)
class AWeapon : public AWeaponItem
{
public:
	struct FScriptMulticastDelegate                    AttachmentAdded;                                          // 0x08B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AttachmentRemoved;                                        // 0x08C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x30];                                      // 0x08D0(0x0030) MISSED OFFSET
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0900(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	EWeaponFiringStateType                             WeaponFiringStateType;                                    // 0x0908(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0909(0x0007) MISSED OFFSET
	class UWeaponStateFiring*                          TempWeaponStateFiringAutomatic;                           // 0x0910(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateFiring*                          TempWeaponStateFiringSemiAutomatic;                       // 0x0918(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateFiring*                          TempWeaponStateFiringManual;                              // 0x0920(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateFiring*                          FiringState;                                              // 0x0928(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UClass*>                              ReloadActionSequenceClasses;                              // 0x0930(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWeaponActionReloadSequence*>         ReloadActionSequences;                                    // 0x0940(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UWeaponActionClearMalfunctionSequence*> ClearMalfunctionActionSequences;                          // 0x0950(0x0010) (ExportObject, ZeroConstructor)
	class UClass*                                      ProjectileClass;                                          // 0x0960(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultAmmoClass;                                         // 0x0968(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RequiredAmmoForShot;                                      // 0x0970(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxLoadedAmmo;                                            // 0x0974(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                InitialAmmo;                                              // 0x0978(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                InternalMagazineCapacity;                                 // 0x097C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreProceduralDownTheSightFiringAnimation;              // 0x0980(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0981(0x0007) MISSED OFFSET
	class UAnimMontage*                                FireAnimation;                                            // 0x0988(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAnimationLastRound;                                   // 0x0990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAnimationBody;                                        // 0x0998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FirstPersonFireAnimationBody;                             // 0x09A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAutomaticAnimationBody;                               // 0x09A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                CheckFiringModeAnimationBody;                             // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, struct FWeaponAttachmentAnimations> AttachmentsAnimations;                                    // 0x09B8(0x0050) (Edit, ZeroConstructor)
	struct FName                                       MuzzleSocketName;                                         // 0x0A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       GripCorrectionSocketName;                                 // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AimingDownTheSightsCenterSocketName;                      // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       EjectCasingSocketName;                                    // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreSupportingHandIK;                                   // 0x0A28(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0A29(0x0007) MISSED OFFSET
	struct FName                                       SupportingHandIKSocketName;                               // 0x0A30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SupportingHandIKLocation;                                 // 0x0A38(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     AimingDownTheSightsLocationOffset;                        // 0x0A44(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     HolsteredOnPrisonerLocationOffset;                        // 0x0A50(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    HolsteredOnPrisonerRotationOffset;                        // 0x0A5C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               IgnoreZeroRangeChange;                                    // 0x0A68(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0A69(0x0003) MISSED OFFSET
	int                                                zeroRange;                                                // 0x0A6C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ZeroRangeStep;                                            // 0x0A70(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ZeroRangeMax;                                             // 0x0A74(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UProjectileImpactEffects*                    InstantHitImpactEffects;                                  // 0x0A78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FieldOfView;                                              // 0x0A80(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldFocalDistance;                                // 0x0A84(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ObstaclesDetectionOffset;                                 // 0x0A88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0A8C(0x0004) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0A90(0x0520) (Edit)
	class UAnimSequenceBase*                           RelaxedGripCorrectionAnimationPose[0x4];                  // 0x0FB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AimingHipAnimationPose[0x4];                              // 0x0FD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AimingDownTheSightsAnimationPose[0x4];                    // 0x0FF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AimingDownTheSightsStillAnimationPose[0x4];               // 0x1010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AimingDownTheSightsWalkingAnimationPose[0x4];             // 0x1030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AimingDownTheSightsLimpingWalkingAnimationPose[0x4];      // 0x1050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandIdleAnimation;                   // 0x1070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandWalkAnimation;                   // 0x1078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               FirstPersonUpperBodyStandWalkBlendSpace;                  // 0x1080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               FirstPersonUpperBodyLimpingStandWalkBlendSpace;           // 0x1088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandJogAnimation;                    // 0x1090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               FirstPersonUpperBodyStandJogBlendSpace;                   // 0x1098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               FirstPersonUpperBodyLimpingStandJogBlendSpace;            // 0x10A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandRunAnimation;                    // 0x10A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyCrouchIdleAnimation;                  // 0x10B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyCrouchWalkAnimation;                  // 0x10B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               FirstPersonUpperBodyCrouchWalkBlendSpace;                 // 0x10C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               FirstPersonUpperBodyLimpingCrouchWalkBlendSpace;          // 0x10C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           FirstPersonUpperBodyProneIdleAnimation;                   // 0x10D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 WeaponAimOffsets[0x7];                                    // 0x10D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponCategory                                    WeaponCategory;                                           // 0x1110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreAimingSpread;                                       // 0x1111(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseCustomWeaponSpreadData;                                // 0x1112(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x1113(0x0001) MISSED OFFSET
	struct FWeaponSpreadData                           WeaponSpreadData;                                         // 0x1114(0x0040) (Edit)
	bool                                               UseCustomWeaponViewKickData;                              // 0x1154(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x1155(0x0003) MISSED OFFSET
	struct FWeaponViewKickData                         WeaponViewKickData;                                       // 0x1158(0x0018) (Edit)
	float                                              ViewKickMultiplier;                                       // 0x1170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRecoilOffset;                                          // 0x1174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RecoilRecoverySpeed;                                      // 0x1178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleEffectsScaleDistanceStart;                          // 0x117C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleEffectsScaleDistanceRange;                          // 0x1180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleEffectsScaleByDistanceFactor;                       // 0x1184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChamberBulletDelay;                                       // 0x1188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ChamberBulletAutomatically;                               // 0x118C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               TestWeapon;                                               // 0x118D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x118E(0x0002) MISSED OFFSET
	TArray<struct FFireAnimationData>                  WornOutFiringAnimations;                                  // 0x1190(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UAnimMontage*                                InspectModeAnimation;                                     // 0x11A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseCustomMalfunctionChances;                              // 0x11A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x11A9(0x0003) MISSED OFFSET
	struct FWeaponMalfunctionChances                   MalfunctionChances;                                       // 0x11AC(0x0028) (Edit)
	unsigned char                                      UnknownData10[0x4];                                       // 0x11D4(0x0004) MISSED OFFSET
	struct FName                                       StovePipeSocketName;                                      // 0x11D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 StovePipeMesh;                                            // 0x11E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DoubleFeedSocketName;                                     // 0x11E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 DoubleFeedMesh;                                           // 0x11F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              ClearMalfunctionSequenceClasses;                          // 0x11F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UWeaponState*                                _currentState;                                            // 0x1208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _activeState;                                             // 0x1210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateEquipping*                       _equippingState;                                          // 0x1218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _unequippingStateDefault;                                 // 0x1220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _unequippingState;                                        // 0x1228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _inactiveState;                                           // 0x1230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _chamberBulletState;                                      // 0x1238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateReload*                          _reloadState2;                                            // 0x1240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateClearMalfunction*                _clearMalfunctionState;                                   // 0x1248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             _muzzlePS;                                                // 0x1250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             _suppressorMuzzlePS;                                      // 0x1258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    _muzzlePSC;                                               // 0x1260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             _smokeAfterShotFiredPS;                                   // 0x1268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    _smokeAfterShotFiredPSC;                                  // 0x1270(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             _ejectCasingPS;                                           // 0x1278(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _fireSingleShotAudioEvent;                                // 0x1280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _startAutoFireAudioEvent;                                 // 0x1288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _stopAutoFireAudioEvent;                                  // 0x1290(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _suppressorFireSingleShotAudioEvent;                      // 0x1298(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _suppressorStartAutoFireAudioEvent;                       // 0x12A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _suppressorStopAutoFireAudioEvent;                        // 0x12A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _improvisedSuppressorFireSingleShotAudioEvent;            // 0x12B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _improvisedSuppressorStartAutoFireAudioEvent;             // 0x12B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _improvisedSuppressorStopAutoFireAudioEvent;              // 0x12C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _noAmmoAudioEvent;                                        // 0x12C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _dryFireUncockedAudioEvent;                               // 0x12D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _zeroRangeClickAudioEvent;                                // 0x12D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _changeFiringModeAudioEvent;                              // 0x12E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class APrisoner*                                   _weaponOwner;                                             // 0x12E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                _loadedAmmoCount;                                         // 0x12F0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x12F4(0x0002) MISSED OFFSET
	bool                                               _shouldOverrideUseMuzzleDirectionForShooting;             // 0x12F6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _useMuzzleDirectionForShootingOverride;                   // 0x12F7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       _projectileTargetLocationOverride;                        // 0x12F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x68];                                      // 0x1300(0x0068) MISSED OFFSET
	EWeaponFiringMode                                  _firingMode;                                              // 0x1368(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x17];                                      // 0x1369(0x0017) MISSED OFFSET
	TArray<class AWeaponAttachment*>                   _weaponAttachmentsReplicated;                             // 0x1380(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData14[0x18];                                      // 0x1390(0x0018) MISSED OFFSET
	int                                                _internalMagazineAmmoCount;                               // 0x13A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x5];                                       // 0x13AC(0x0005) MISSED OFFSET
	bool                                               _shouldPlayChamberOpenedIdle;                             // 0x13B1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0xF];                                       // 0x13B2(0x000F) MISSED OFFSET
	bool                                               _isInGameEvent;                                           // 0x13C1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x6];                                       // 0x13C2(0x0006) MISSED OFFSET
	class UAkAudioEvent*                               _switchADSStateAudioEvent;                                // 0x13C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _makeNoiseLoudness;                                       // 0x13D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x20];                                      // 0x13D4(0x0020) MISSED OFFSET
	float                                              _staminaDrainMultiplier;                                  // 0x13F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EPrisonerTempCategory                              _staminaDrainCategory;                                    // 0x13F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0xB];                                       // 0x13F9(0x000B) MISSED OFFSET
	EWeaponMalfunction                                 _malfunction;                                             // 0x1404(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EWeaponBehaviourMode                               _behaviourMode;                                           // 0x1405(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2A];                                      // 0x1406(0x002A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Weapon");
		return ptr;
	}


	void UpdateReloadData(struct FWeaponReloadData* reloadDataIn, struct FWeaponReloadData* reloadDataOut);
	void Unequip();
	void StopFiringEffects();
	void StopFireOnServer();
	void StopFire();
	void StartFireOnServer();
	void StartFire();
	bool ShouldPlayChamberOpenedIdle();
	void SetZeroRangeOnServer(int zeroRange);
	void SetUseMuzzleDirectionForShooting(bool Value);
	void SetStaminaAmountToDrain(float Value);
	void SetShouldPlayChamberOpenedIdle(bool Value);
	void SetMalfunction(EWeaponMalfunction Type);
	void SetMakeNoiseLoudness(bool Value);
	void SetIsChambering(bool Value);
	void SetFiringModeOnServer(EWeaponFiringMode Value);
	void SetFiringMode(EWeaponFiringMode Value);
	void Server_SwapAttachments(class AWeaponAttachment* oldAttachment, class AWeaponAttachment* newAttachment);
	void Server_StopFiringEffects();
	void Server_SetMalfunction(EWeaponMalfunction Type);
	void Server_SetBehaviourMode(EWeaponBehaviourMode Mode);
	void Server_PlayFiringEffects(bool isLastShot);
	void Server_InsertCartridgeIntoWeapon(class AAmmunitionItem* ammo);
	void Server_FireShotProjectile(const struct FFireShotProjectileData& Data, const struct FFireShotDescription& desc);
	void ResetZeroRange();
	void RequestClearMalfunction(EWeaponMalfunction malfunction);
	void RemoveAttachmentOnServer(class AWeaponAttachment* Attachment);
	void RemoveAttachmentLocal(class AWeaponAttachment* Attachment);
	void RemoveAttachment(class AWeaponAttachment* Attachment);
	void PlayFiringEffects(bool isLastShot);
	void OnWeaponActionAnimNotify(EWeaponActionNotifyType notifyType);
	void OnStaminaDrained();
	void OnShotFired(bool isLastShot);
	void OnRep_WeaponAttachmentsReplicated();
	void OnRep_Malfunction();
	void OnRep_FireShotCounterEffectsSync();
	void OnRep_BehaviourMode();
	void OnChamberOpened();
	void OnChamberClosed();
	void NotifyMissOnServer(const struct FVector_NetQuantizeNormal& shootDirection, int randomSeed, float reticleSpread);
	void NotifyHitOnServer(const struct FHitResult& HitResult, const struct FVector_NetQuantizeNormal& shootDirection, int randomSeed, float reticleSpread);
	void NetMulticast_StopFiringEffects();
	void NetMulticast_StopFire();
	void NetMulticast_StartFire();
	void NetMulticast_PlayFiringEffects(bool isLastShot);
	bool IsInGameEvent();
	bool IsFiring();
	bool IsChamberOpened();
	bool IsAmmoCompatible(class UClass* ProjectileClass);
	void IncrementZeroRange();
	int GetZeroRange();
	class APrisoner* GetWeaponOwner();
	bool GetUseMuzzleDirectionForShooting();
	int GetUsedAmmoCount();
	float GetStaminaAmountToDrain();
	float GetSpread();
	float GetShakiness();
	class UWeaponActionReloadSequence* GetReloadActionSequenceForData(const struct FWeaponReloadData& reloadData);
	class URangedWeaponsSkill* GetRangedWeaponsSkill();
	struct FVector GetMuzzleLocation();
	struct FVector GetMuzzleDirection();
	void GetMalfunctionsForEvent(EWeaponMalfunctionEvent malfunctionEvent, const struct FWeaponMalfunctionEventDescription& desc, TArray<EWeaponMalfunction>* malfunctionsIn, TArray<EWeaponMalfunction>* malfunctionsOut);
	float GetMakeNoiseLoudness();
	class AWeaponAttachmentMagazine* GetMagazine();
	int GetLoadedAmmoCount();
	bool GetIsChambering();
	int GetInternalMagazineSpace();
	int GetInternalMagazineAmmoCount();
	bool GetIgnoreSupportingHandIK();
	class UAnimMontage* GetFiringMontage(bool isLastShot);
	EWeaponFiringMode GetFiringMode();
	struct FBodyWeaponAnimation GetFiringBodyWeaponAnimation();
	int GetAmmoReloadCapacity(class AAmmunitionItem* ammo);
	int GetAmmoCount();
	void FireShot();
	bool FindReloadData(TArray<class AItem*> Items, struct FWeaponReloadData* reloadData);
	void FillUpWithAmmo();
	void Equip();
	void DecrementZeroRange();
	void Client_SetupForEvent();
	void Client_SetLoadedVariables(int zeroRange, int loadedAmmoCount, int internalMagazineAmmoCount, EWeaponFiringMode firingMode);
	bool CanSwitchFiringMode();
	bool CanReloadUsingData(const struct FWeaponReloadData& Data);
	void CancelFire();
	bool CanAddAttachment(class AWeaponAttachment* Attachment);
	void AttachmentRemovedSignature__DelegateSignature(class AWeapon* sender, class AWeaponAttachment* Attachment);
	void AttachmentAddedSignature__DelegateSignature(class AWeapon* sender, class AWeaponAttachment* Attachment);
	void AddAttachmentOnServer(class AWeaponAttachment* Attachment);
	void AddAttachmentLocal(class AWeaponAttachment* Attachment, bool attach);
	void AddAttachment(class AWeaponAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType);
	void AddAmmo(int amount);
};


// Class ConZ.WeaponAction
// 0x0000 (0x0028 - 0x0028)
class UWeaponAction : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAction");
		return ptr;
	}


	void RemoveAttachmentFromWeapon(class AWeapon* Weapon, class AWeaponAttachment* Attachment);
	void OnWeaponActionAnimNotify(EWeaponActionNotifyType notifyType);
	void OnActionAnimNotify(ECharacterActionNotifyType notifyType);
	void InsertCartridgeIntoWeapon(class AWeapon* Weapon, class AAmmunitionItem* ammo);
	void InsertCartridgeIntoMagazine(class AWeaponAttachmentMagazine* magazine, class AAmmunitionItem* ammo);
	class AWeapon* GetWeapon();
	void AddAttachmentToWeapon(class AWeapon* Weapon, class AWeaponAttachment* Attachment);
};


// Class ConZ.WeaponActionReloadSequence
// 0x0060 (0x0088 - 0x0028)
class UWeaponActionReloadSequence : public UWeaponAction
{
public:
	struct FBodyWeaponAnimation                        AnimationStandAndCrouch;                                  // 0x0028(0x0010) (Edit)
	struct FBodyWeaponAnimation                        AnimationProne;                                           // 0x0038(0x0010) (Edit)
	bool                                               CanBeInterrupted;                                         // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3F];                                      // 0x0049(0x003F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponActionReloadSequence");
		return ptr;
	}


	void SetNextMontageSectionFromPrevious(const struct FName& previousSection, const struct FName& NextSection);
	void SetNextMontageSection(const struct FName& NextSection);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	struct FWeaponReloadData GetReloadData();
	class UAnimMontage* GetActiveAnimationWeapon();
	class UAnimMontage* GetActiveAnimationBody();
	float ExecuteUsingData(const struct FWeaponReloadData& Data);
	void End(bool Regular);
	bool CanInterrupt();
	bool CanExecuteUsingData(const struct FWeaponReloadData& Data);
};


// Class ConZ.ChamberCartridge
// 0x0000 (0x0088 - 0x0088)
class UChamberCartridge : public UWeaponActionReloadSequence
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChamberCartridge");
		return ptr;
	}

};


// Class ConZ.WaypointWidget
// 0x0098 (0x02B8 - 0x0220)
class UWaypointWidget : public UDesignableUserWidget
{
public:
	class UTexture2D*                                  IconTexture;                                              // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AccentTexture;                                            // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                AccentColor;                                              // 0x0230(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              BarValue;                                                 // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BarColor;                                                 // 0x0244(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              HeightOffset;                                             // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Emphasized;                                               // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	struct FLinearColor                                EmphasisColor;                                            // 0x025C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	struct FString                                     LabelText;                                                // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x38];                                      // 0x0280(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WaypointWidget");
		return ptr;
	}


	void TieLifetimeToActor(class AActor* Target);
	void SetWorldPosition(const struct FVector& Location);
	void SetTargetActor(class AActor* Target);
	void OnLifetimeTiedActorDestroyed(class AActor* Actor);
	bool IsOnScreen();
	bool IsAttached();
	class AActor* GetTargetActor();
	float GetDistance();
	float GetAngle();
};


// Class ConZ.ChangeTextWidget
// 0x0028 (0x02E0 - 0x02B8)
class UChangeTextWidget : public UWaypointWidget
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x02B8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChangeTextWidget");
		return ptr;
	}


	void TextAcceptedEvent__DelegateSignature(class APrisoner* User, const struct FText& Text);
	void SetMaxNumberOfCharacters(int Value);
	void SetCurrentInputText_BP(const struct FText& Text);
	void OnTextAccepted();
	void OnCurrentInputTextChanged(const struct FText& Text);
};


// Class ConZ.CharacterAction
// 0x0088 (0x00B0 - 0x0028)
class UCharacterAction : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET
	TArray<class UCharacterActionDescription*>         PreActionsDescriptions;                                   // 0x0058(0x0010) (ZeroConstructor)
	class UCharacterAction*                            ParentAction;                                             // 0x0068(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UCharacterAction*>                    _preActions;                                              // 0x0070(0x0010) (ExportObject, ZeroConstructor)
	class UActionProgressWidget*                       _progressWidget;                                          // 0x0080(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0088(0x0008) MISSED OFFSET
	class UCharacterActionDescription*                 _description;                                             // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0098(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterAction");
		return ptr;
	}


	float PlayMontage(class UAnimMontage* Montage, float PlayRate, const struct FName& startSection);
	void OnProgressWidgetFinished();
	void OnProgressWidgetCanceled();
	void OnPreActionEnd(class UCharacterAction* Action);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
};


// Class ConZ.CharacterActionComponent
// 0x0010 (0x0100 - 0x00F0)
class UCharacterActionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterActionComponent");
		return ptr;
	}


	void Server_NotifyReadyToDestroy();
};


// Class ConZ.CharacterActionDescription
// 0x0008 (0x0030 - 0x0028)
class UCharacterActionDescription : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterActionDescription");
		return ptr;
	}

};


// Class ConZ.CharacterCreationWidget
// 0x0008 (0x0228 - 0x0220)
class UCharacterCreationWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterCreationWidget");
		return ptr;
	}


	void StartGame();
	void ShowErrorDialog(const struct FText& Message);
	void SendKeepServerConnectionAliveRequest();
	void OnUserProfileCreated();
	float ModifyAttributesByAttributeSize(float attributeSizeNormalized, struct FVector4* Attributes);
	TArray<int> GetRandomValuesInRangeAddingUpTo(int Min, int Max, int sum, int Num);
	TArray<float> GetRandomizedSkillValuesFloat(float Points, int Num, float* usedPoints);
	TArray<int> GetRandomizedSkillValues(int Points, int Num);
	struct FDateTime GetRandomBirthdayForAge(int Age);
	void EndWaitingOnServerResponse();
	void CreateUserProfile(struct FCharacterTemplate* CharacterTemplate);
	void CancelWaitingOnServerResponse();
	void BeginWaitingOnServerResponse();
};


// Class ConZ.CharacterImpactSoundsData
// 0x0060 (0x0090 - 0x0030)
class UCharacterImpactSoundsData : public UDataAsset
{
public:
	struct FCharacterHeadImpactSoundsData              head;                                                     // 0x0030(0x0018) (Edit)
	struct FCharacterTorsoImpactSoundsData             Torso;                                                    // 0x0048(0x0018) (Edit)
	struct FCharacterArmsImpactSoundsData              Arms;                                                     // 0x0060(0x0018) (Edit)
	struct FCharacterLegsImpactSoundsData              Legs;                                                     // 0x0078(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterImpactSoundsData");
		return ptr;
	}

};


// Class ConZ.CharacterPainSoundsData
// 0x0008 (0x0038 - 0x0030)
class UCharacterPainSoundsData : public UDataAsset
{
public:
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterPainSoundsData");
		return ptr;
	}

};


// Class ConZ.CharacterSelectionWidget
// 0x0000 (0x0220 - 0x0220)
class UCharacterSelectionWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSelectionWidget");
		return ptr;
	}


	void DeleteCharacter(class UUserProfile* UserProfile);
};


// Class ConZ.CharacterSpawner
// 0x0078 (0x03A0 - 0x0328)
class ACharacterSpawner : public AActor
{
public:
	class UBillboardComponent*                         SpriteComponent;                                          // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FCharacterSpawnerData2>              Characters;                                               // 0x0330(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<TEnumAsByte<EPhysicalSurface>>              AllowedSurfaces;                                          // 0x0340(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                CharactersPerCell;                                        // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TotalCharacters;                                          // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CellSize;                                                 // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CellsX;                                                   // 0x035C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CellsY;                                                   // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSpawnRadius;                                           // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnRadius;                                           // 0x0368(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSpawnDistance;                                         // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnDistance;                                         // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CullDistance;                                             // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpawnRetries;                                             // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DebugDraw;                                                // 0x0381(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0382(0x0002) MISSED OFFSET
	struct FColor                                      DebugColor;                                               // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0388(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSpawner");
		return ptr;
	}

};


// Class ConZ.CharacterSpawnerSpawnee
// 0x0000 (0x0028 - 0x0028)
class UCharacterSpawnerSpawnee : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSpawnerSpawnee");
		return ptr;
	}


	void SetupCharacter(const struct FCharacterSpawneeInfo& spawneeInfo);
};


// Class ConZ.CharacterSpawningManager
// 0x1588 (0x18B0 - 0x0328)
class ACharacterSpawningManager : public AActor
{
public:
	TArray<struct FPawnCharacterInfo>                  _spawnableCharacters;                                     // 0x0328(0x0010) (Edit, ZeroConstructor)
	float                                              _managerProcessUpdateTime;                                // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _spawnUpdateTime;                                         // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _spawnTriggerGroupUpdateTime;                             // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _spawnTriggerGroupRadius;                                 // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _spawnTriggerGroupProximityQueryRadius;                   // 0x0348(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _interiorSearchDistanceThreshold;                         // 0x034C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _exteriorSpawnerGroupsSpawnCooldownTimeSP;                // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _interiorSpawnerGroupsSpawnCooldownTimeSP;                // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _exteriorSpawnerGroupsSpawnCooldownTimeMP;                // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _interiorSpawnerGroupsSpawnCooldownTimeMP;                // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _baseElementQueryDistance;                                // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _exteriorSpawnerGroupsProbabilityMP;                      // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _interiorSpawnerGroupsProbabilityMP;                      // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _exteriorSpawnerGroupsProbabilitySP;                      // 0x036C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _interiorSpawnerGroupsProbabilitySP;                      // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _disableSerialization;                                    // 0x0374(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _startSpawnerGroupCooldownAfterSpawning;                  // 0x0375(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _startSpawnerGroupCooldownAfterEnteringInterior;          // 0x0376(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x159];                                     // 0x0377(0x0159) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x0377(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.CharacterSpawningManager._referencedPawnClasses
	unsigned char                                      UnknownData02[0x1390];                                    // 0x0520(0x1390) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSpawningManager");
		return ptr;
	}


	bool SpawnCharacter(const struct FTransform& SpawnTransform, class UClass* PawnClass, bool ignoreLimit);
	void OnSpawnTriggerDestroyed(class AActor* DestroyedActor);
	void OnSpawnedPawnDestroyed(class AActor* DestroyedActor);
};


// Class ConZ.CharacterSpawnerComponent
// 0x0030 (0x0270 - 0x0240)
class UCharacterSpawnerComponent : public USceneComponent
{
public:
	bool                                               OverrideDefaultRespawnTime;                               // 0x0240(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0241(0x0003) MISSED OFFSET
	float                                              RespawnTime;                                              // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinCharactersToSpawn;                                     // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxCharactersToSpawn;                                     // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FCharacterSpawnerMarker>             SpawnerMarkers;                                           // 0x0250(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0260(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSpawnerComponent");
		return ptr;
	}

};


// Class ConZ.ChatNotification
// 0x0000 (0x0030 - 0x0030)
class UChatNotification : public UConZNotification
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChatNotification");
		return ptr;
	}

};


// Class ConZ.ChatNotificationDescription
// 0x0018 (0x0058 - 0x0040)
class UChatNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                  // 0x0040(0x0010) (ZeroConstructor, SaveGame)
	EChatType                                          chatType;                                                 // 0x0050(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               shouldCopyToClientClipboard;                              // 0x0051(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChatNotificationDescription");
		return ptr;
	}

};


// Class ConZ.ChatSuggestionWidget
// 0x0038 (0x0258 - 0x0220)
class UChatSuggestionWidget : public UDesignableUserWidget
{
public:
	class UBorder*                                     _border;                                                  // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UChatText*                                   _textBlock;                                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                _defaultColor;                                            // 0x0230(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _highlightedColor;                                        // 0x0240(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0250(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChatSuggestionWidget");
		return ptr;
	}


	void SetText(const struct FString& Text);
	void SetIsHighlighted(bool Value);
};


// Class ConZ.ChatText
// 0x0000 (0x0210 - 0x0210)
class UChatText : public UTextBlock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChatText");
		return ptr;
	}

};


// Class ConZ.ChatWidget
// 0x00D8 (0x02F8 - 0x0220)
class UChatWidget : public UDesignableUserWidget
{
public:
	class UImage*                                      _backgroundImage;                                         // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _chatScrollBox;                                           // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _suggestionsScrollBox;                                    // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _suggestionsDropDown;                                     // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEditableTextBox*                            _inputText;                                               // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _chatTypeIndicator;                                       // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                _localChatColor;                                          // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                _globalChatColor;                                         // 0x0260(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                _squadChatColor;                                          // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                _serverChatColor;                                         // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                _errorChatColor;                                          // 0x0290(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                _defaultChatColor;                                        // 0x02A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                _suggestionsTextColor;                                    // 0x02B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET
	class UAdminCommandCompletionManager*              _adminCommandCompletionManager;                           // 0x02C8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x02D0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChatWidget");
		return ptr;
	}


	void UpdateActiveSuggestions();
	void SetChatType(EChatType chatType);
	void OnTextCommitted(const struct FText& Text, TEnumAsByte<ETextCommit> CommitMethod);
	void OnTextChanged(const struct FText& Text);
	TArray<struct FString> GetSuggestions(const struct FString& Text, bool useSubstring);
	EChatType GetChatType();
	void AddText(const struct FText& Text, EChatType chatType);
};


// Class ConZ.CheckDetectableItemsAction
// 0x0010 (0x00B0 - 0x00A0)
class UCheckDetectableItemsAction : public USkillAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CheckDetectableItemsAction");
		return ptr;
	}

};


// Class ConZ.CheckDetectablePlayersAction
// 0x0008 (0x00A8 - 0x00A0)
class UCheckDetectablePlayersAction : public USkillAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CheckDetectablePlayersAction");
		return ptr;
	}

};


// Class ConZ.CheckOccludedDetectablePlayersAction
// 0x0008 (0x00A8 - 0x00A0)
class UCheckOccludedDetectablePlayersAction : public USkillAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CheckOccludedDetectablePlayersAction");
		return ptr;
	}

};


// Class ConZ.ChestItem
// 0x0060 (0x08C8 - 0x0868)
class AChestItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0868(0x0010) MISSED OFFSET
	int                                                _capacityX;                                               // 0x0878(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData)
	int                                                _capacityY;                                               // 0x087C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0880(0x0018) MISSED OFFSET
	int64_t                                            _decayInDays;                                             // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _decayedChestClass;                                       // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canContainChestItem;                                     // 0x08A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x08A9(0x0007) MISSED OFFSET
	struct FDbIntegerId                                _owningUserProfileId;                                     // 0x08B0(0x0008) (Net)
	TArray<class UClass*>                              _locks;                                                   // 0x08B8(0x0010) (Edit, Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChestItem");
		return ptr;
	}


	void NetMulticast_PlayLockAddedEffects();
};


// Class ConZ.Chicken
// 0x0000 (0x0AE0 - 0x0AE0)
class AChicken : public AAnimal
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Chicken");
		return ptr;
	}

};


// Class ConZ.ChickenAIController
// 0x0000 (0x04C8 - 0x04C8)
class AChickenAIController : public AAnimalAIController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChickenAIController");
		return ptr;
	}

};


// Class ConZ.ChokingSickness
// 0x0008 (0x01B8 - 0x01B0)
class UChokingSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChokingSickness");
		return ptr;
	}

};


// Class ConZ.InteractionAction
// 0x0080 (0x00A8 - 0x0028)
class UInteractionAction : public UObject
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0028(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractionAction");
		return ptr;
	}


	void OnActionFinished();
	void OnActionCanceled();
};


// Class ConZ.ChopItemAction
// 0x0008 (0x00B0 - 0x00A8)
class UChopItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChopItemAction");
		return ptr;
	}

};


// Class ConZ.Choppable
// 0x0000 (0x0028 - 0x0028)
class UChoppable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Choppable");
		return ptr;
	}

};


// Class ConZ.ChoppingObjective
// 0x0038 (0x0470 - 0x0438)
class AChoppingObjective : public ARequirementObjective
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0438(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.ChoppingObjective._targetActors
	bool                                               _targetSpecificClothesType;                               // 0x0448(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0449(0x0007) MISSED OFFSET
	TArray<EClothesType>                               _targetClothesTypes;                                      // 0x0450(0x0010) (Edit, ZeroConstructor)
	bool                                               _singleTarget;                                            // 0x0460(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0461(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChoppingObjective");
		return ptr;
	}

};


// Class ConZ.ChoppingRecipeDataAsset
// 0x0098 (0x00C8 - 0x0030)
class UChoppingRecipeDataAsset : public UDataAsset
{
public:
	struct FChoppingRecipe                             ChoppingRecipe;                                           // 0x0030(0x0098) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChoppingRecipeDataAsset");
		return ptr;
	}

};


// Class ConZ.ChoppingToolItemTag
// 0x0008 (0x0038 - 0x0030)
class UChoppingToolItemTag : public UBaseItemTag
{
public:
	float                                              ChoppingTimeMultiplier;                                   // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                IngredientsQuantityBonus;                                 // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ChoppingToolItemTag");
		return ptr;
	}

};


// Class ConZ.CircularMenuSegmentIcons
// 0x0018 (0x0048 - 0x0030)
class UCircularMenuSegmentIcons : public UDataAsset
{
public:
	class UTexture2D*                                  UnselectedIcon;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SelectedIcon;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DisabledIcon;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentIcons");
		return ptr;
	}

};


// Class ConZ.CircularMenuSegmentInfo
// 0x0028 (0x0058 - 0x0030)
class UCircularMenuSegmentInfo : public UDataAsset
{
public:
	struct FText                                       Caption;                                                  // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UCircularMenuSegmentIcons*                   Icons;                                                    // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCircularMenuWidget*                         ParentCircularWidget;                                     // 0x0050(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentInfo");
		return ptr;
	}

};


// Class ConZ.CircularMenuSegmentSubmenuInfo
// 0x0018 (0x0070 - 0x0058)
class UCircularMenuSegmentSubmenuInfo : public UCircularMenuSegmentInfo
{
public:
	TArray<class UCircularMenuSegmentInfo*>            SubmenuInfo;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              IndexOffset;                                              // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentSubmenuInfo");
		return ptr;
	}

};


// Class ConZ.CircularMenuSegmentGenericInfo
// 0x0010 (0x0068 - 0x0058)
class UCircularMenuSegmentGenericInfo : public UCircularMenuSegmentInfo
{
public:
	struct FScriptDelegate                             Action;                                                   // 0x0058(0x0014) (ZeroConstructor, InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentGenericInfo");
		return ptr;
	}

};


// Class ConZ.CharacterSpawnerPreset
// 0x0010 (0x0038 - 0x0028)
class UCharacterSpawnerPreset : public UObject
{
public:
	struct FCharacterSpawnerData                       SpawnerData;                                              // 0x0028(0x0010) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CharacterSpawnerPreset");
		return ptr;
	}

};


// Class ConZ.CircularMenuSegmentInteractionInfo
// 0x0080 (0x00D8 - 0x0058)
class UCircularMenuSegmentInteractionInfo : public UCircularMenuSegmentInfo
{
public:
	EInteractionTargetType                             InteractionTargetType;                                    // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	struct FInteractionStruct                          InteractionInfo;                                          // 0x0060(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly)
	class APrisoner*                                   _interactionInitiator;                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     _interactableObject;                                      // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentInteractionInfo");
		return ptr;
	}


	class UCircularMenuSegmentInteractionInfo* STATIC_CreateSpecific(class APrisoner* initiator, class UObject* interactable, const struct FInteractionStruct& InteractionStruct);
	class UCircularMenuSegmentInteractionInfo* STATIC_Create(EInteractionTargetType interactionTarget, const struct FInteractionStruct& InteractionStruct);
};


// Class ConZ.CircularMenuSegmentWidget
// 0x0058 (0x0278 - 0x0220)
class UCircularMenuSegmentWidget : public UDesignableUserWidget
{
public:
	float                                              _nonSelectableAlpha;                                      // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                _highlightedColour;                                       // 0x0224(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _unHighlightedColour;                                     // 0x0234(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	class UCircularMenuSegmentInfo*                    _info;                                                    // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      _segment;                                                 // 0x0250(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _iconOverlay;                                             // 0x0258(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _icon;                                                    // 0x0260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0268(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentWidget");
		return ptr;
	}


	void UpdateVisualParameters(int numberOfSegments, int Index, float Offset, float middleCutoffPercentage, float Size);
	class UCircularMenuSegmentWidget* STATIC_CreateFromInfo(class UCircularMenuSegmentInfo* Info);
};


// Class ConZ.CircularMenuWidget
// 0x0048 (0x0268 - 0x0220)
class UCircularMenuWidget : public UDesignableUserWidget
{
public:
	TArray<struct FCircularLayerData>                  _layerData;                                               // 0x0220(0x0010) (Edit, ZeroConstructor)
	float                                              _centerSize;                                              // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	TArray<struct FCircularSegmentContainer>           _segmentsByLayer;                                         // 0x0238(0x0010) (ZeroConstructor)
	class UOverlay*                                    _mainOverlay;                                             // 0x0248(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _actionText;                                              // 0x0250(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0258(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularMenuWidget");
		return ptr;
	}


	void InitializeLayer(int Layer, float Offset, TArray<class UCircularMenuSegmentInfo*> SegmentInfo, int countParameterOverride);
	int GetSegmentIdForCoordinatesAndLayer(const struct FVector2D& Coordinates, int Layer);
	int GetSegmentIdForCoordinates(const struct FVector2D& Coordinates, int* Layer);
	class UCircularMenuWidget* STATIC_Create(class UObject* WorldContextObject, TArray<class UCircularMenuSegmentInfo*> SegmentInfo);
};


// Class ConZ.CircularParameterWidget
// 0x0000 (0x0220 - 0x0220)
class UCircularParameterWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CircularParameterWidget");
		return ptr;
	}


	void SetMaxValue(float Value);
	void SetCurrentValue(float Value);
	float GetPercentage();
	float GetMaxValue();
	float GetCurrentValue();
};


// Class ConZ.WeaponActionClearMalfunctionSequence
// 0x0088 (0x00B0 - 0x0028)
class UWeaponActionClearMalfunctionSequence : public UWeaponAction
{
public:
	EWeaponMalfunction                                 MalfunctionType;                                          // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FText                                       Description;                                              // 0x0030(0x0018) (Edit)
	TMap<EWeaponMalfunction, struct FClearMalfunctionData> Malfunctions;                                             // 0x0048(0x0050) (Edit, ZeroConstructor)
	bool                                               CanBeInterrupted;                                         // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x0099(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponActionClearMalfunctionSequence");
		return ptr;
	}


	void SetNextMontageSectionFromPrevious(const struct FName& previousSection, const struct FName& NextSection);
	void SetNextMontageSection(const struct FName& NextSection);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	class UAnimMontage* GetActiveAnimationWeapon();
	class UAnimMontage* GetActiveAnimationBody();
	float Execute();
	void End(bool Regular);
	bool CanInterrupt();
	bool CanExecute(EWeaponMalfunction malfunction);
};


// Class ConZ.ClearBadRound
// 0x0008 (0x00B8 - 0x00B0)
class UClearBadRound : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ClearBadRound");
		return ptr;
	}

};


// Class ConZ.ClearRoundNotLoaded
// 0x0008 (0x00B8 - 0x00B0)
class UClearRoundNotLoaded : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ClearRoundNotLoaded");
		return ptr;
	}

};


// Class ConZ.ClearStovePipe
// 0x0008 (0x00B8 - 0x00B0)
class UClearStovePipe : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ClearStovePipe");
		return ptr;
	}

};


// Class ConZ.ClockFaceWidget
// 0x0000 (0x0220 - 0x0220)
class UClockFaceWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ClockFaceWidget");
		return ptr;
	}


	void SetTime(float Time);
	void SetMinutes(int Minutes);
	void SetHours(int Hours);
};


// Class ConZ.ClothesItem
// 0x00C0 (0x0928 - 0x0868)
class AClothesItem : public AItem
{
public:
	class UStaticMesh*                                 FemaleEquippedStaticMesh;                                 // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 MaleEquippedStaticMesh;                                   // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               FemaleEquippedSkeletalMesh;                               // 0x0878(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               MaleEquippedSkeletalMesh;                                 // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstance*>                   FemaleEquippedMaterialsOverride;                          // 0x0888(0x0010) (Edit, ZeroConstructor)
	TArray<class UMaterialInstance*>                   MaleEquippedMaterialsOverride;                            // 0x0898(0x0010) (Edit, ZeroConstructor)
	EClothesType                                       ClothesType;                                              // 0x08A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EquipmentLayer;                                           // 0x08A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x08AA(0x0002) MISSED OFFSET
	uint32_t                                           Warmth;                                                   // 0x08AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           Armor;                                                    // 0x08B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CoversWrists;                                             // 0x08B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HidesHair;                                                // 0x08B5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HidesFacialHair;                                          // 0x08B6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x08B7(0x0001) MISSED OFFSET
	float                                              MaxFemaleHairLength;                                      // 0x08B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxMaleHairLength;                                        // 0x08BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxFacialHairLength;                                      // 0x08C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BellyJiggleMultiplier;                                    // 0x08C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreastJiggleMultiplier;                                   // 0x08C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileHitEnergyAbsorption;                            // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileHitEnergyDamagedAbsorption;                     // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnergyThroughputRatio;                                    // 0x08D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TotalEnergyAbsorption;                                    // 0x08D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SharpMeleeDamageReduction;                                // 0x08DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BluntMeleeDamageReduction;                                // 0x08E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           CapacityX;                                                // 0x08E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData)
	uint32_t                                           CapacityY;                                                // 0x08E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData)
	uint32_t                                           WaterResistance;                                          // 0x08EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InwardsWaterPropagationFactor;                            // 0x08F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutwardsWaterPropagationFactor;                           // 0x08F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CamouflageBonus;                                          // 0x08F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageWhenEquipped;                                       // 0x08FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DirtinessWhenEquipped;                                    // 0x0900(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThermalConductivityFactor;                                // 0x0904(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0908(0x0001) MISSED OFFSET
	bool                                               _canBeEquipped;                                           // 0x0909(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x090A(0x0002) MISSED OFFSET
	float                                              _dirtiness;                                               // 0x090C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _smallMaterialDamageLimit;                                // 0x0910(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _bigMaterialDamageLimit;                                  // 0x0914(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      _materialParametersReplicated;                            // 0x0918(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x0919(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ClothesItem");
		return ptr;
	}


	void UpdateMaterialParamsOnClients();
	void SetDirtiness(float dirtiness);
	void OnRep_MaterialParameters();
	int GetWarmth();
	int GetCapacityY();
	int GetCapacityX();
};


// Class ConZ.ClearDoubleFeed
// 0x0008 (0x00B8 - 0x00B0)
class UClearDoubleFeed : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ClearDoubleFeed");
		return ptr;
	}

};


// Class ConZ.InteractionAssetData
// 0x0008 (0x0030 - 0x0028)
class UInteractionAssetData : public UAssetUserData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractionAssetData");
		return ptr;
	}

};


// Class ConZ.CutObjectAssetData
// 0x0008 (0x0038 - 0x0030)
class UCutObjectAssetData : public UInteractionAssetData
{
public:
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                  // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CutObjectAssetData");
		return ptr;
	}

};


// Class ConZ.CollectObjectAssetData
// 0x0000 (0x0038 - 0x0038)
class UCollectObjectAssetData : public UCutObjectAssetData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CollectObjectAssetData");
		return ptr;
	}

};


// Class ConZ.CommandAnimalAction
// 0x0008 (0x00B0 - 0x00A8)
class UCommandAnimalAction : public UAnimalAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CommandAnimalAction");
		return ptr;
	}

};


// Class ConZ.CompassItemTag
// 0x0008 (0x0038 - 0x0030)
class UCompassItemTag : public UBaseItemTag
{
public:
	unsigned char                                      CompassLevel;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CompassItemTag");
		return ptr;
	}

};


// Class ConZ.CompassWidget
// 0x0040 (0x0248 - 0x0208)
class UCompassWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	class UImage*                                      _compassTrack;                                            // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  _compassTrackNorthOnly;                                   // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _compassTrackCardinalOnly;                                // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _compassTrackCardinalAndIntercardinal;                    // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _compassTrackEverything;                                  // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   _offset;                                                  // 0x0238(0x0008) (Edit, IsPlainOldData)
	float                                              _compassTrackWidthMultiplier;                             // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0244(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CompassWidget");
		return ptr;
	}

};


// Class ConZ.ComplexAnimal2
// 0x0170 (0x0C60 - 0x0AF0)
class AComplexAnimal2 : public AAnimal2
{
public:
	float                                              HungerDepletionRateWhenResting;                           // 0x0AF0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EnergyRefillRate;                                         // 0x0AF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HungerRefillRate;                                         // 0x0AF8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealthRegenerationRate;                                   // 0x0AFC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealthDepletionRate;                                      // 0x0B00(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAnimalPaceSettings                         MovementPaceSettings;                                     // 0x0B04(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAnimalStationaryRotationRateSettings       RotationRateSettings;                                     // 0x0B14(0x003C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScriptMulticastDelegate                    OnActionChanged;                                          // 0x0B50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FChargeAttackData>                   ChargeAttacks;                                            // 0x0B60(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCloseRangeAttackData>               CloseRangeAttacks;                                        // 0x0B70(0x0010) (Edit, ZeroConstructor)
	struct FTurnMontages                               TurnMonatges;                                             // 0x0B80(0x0010) (Edit, DisableEditOnInstance)
	struct FAnimalActionMontageData                    AnimalActions;                                            // 0x0B90(0x0018) (Edit)
	float                                              AttackRotationRate;                                       // 0x0BA8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinActionTime;                                            // 0x0BAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                HitReactTypeResting;                                      // 0x0BB0(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                HitReactTypeIntimidate;                                   // 0x0BB8(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0BC0(0x0008) MISSED OFFSET
	uint16_t                                           _hungerAndEnergyReplicated;                               // 0x0BC8(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x16];                                      // 0x0BCA(0x0016) MISSED OFFSET
	struct FVector                                     _lookAtPoint;                                             // 0x0BE0(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData02[0x74];                                      // 0x0BEC(0x0074) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ComplexAnimal2");
		return ptr;
	}


	void Wait(float Time);
	float TurnTowardLocation(const struct FVector& Location);
	float TurnTowardActor(class AActor* foe);
	float TurnAwayFromActor(class AActor* foe);
	float Turn(bool directionLeft);
	void StopAction_Multicast();
	void StartAction_Multicast(const struct FRepActionData& newAction);
	void Sit(float Time);
	void Rest(float Time);
	void ResetRotationRate();
	bool PreformChargeAttack(int attackIndex, float Time);
	void OnRep_HungerAndEnergy();
	void OnRep_ActionData();
	void Intimidate(float Time, class AActor* foe);
	struct FVector GetSpeed();
	float GetAngularVelocity();
	void ForceRoattionRate(const struct FRotator& RotationRate);
	void Eat(float Time);
	bool ChargeAttackFoe(class AActor* foe);
	void ChangeSpeed(float pace);
	void ChangePace(EAnimalMovementPace pace);
	void Alert(float Time);
};


// Class ConZ.ComplexAnimal2AnimInstance
// 0x0020 (0x03B0 - 0x0390)
class UComplexAnimal2AnimInstance : public UAnimal2AnimInstance
{
public:
	EAnimalAction                                      CurrentAction;                                            // 0x0390(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0391(0x0003) MISSED OFFSET
	float                                              HeadLookRight;                                            // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadLookUp;                                               // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadMovementLerpSpeed;                                    // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngularVelocity;                                          // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x03A4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ComplexAnimal2AnimInstance");
		return ptr;
	}

};


// Class ConZ.ConsoleHelpers
// 0x0000 (0x0028 - 0x0028)
class UConsoleHelpers : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConsoleHelpers");
		return ptr;
	}


	void STATIC_SetHasPendingChanges(bool Value);
	void STATIC_SetGraphicsPreset(int preset);
	void STATIC_SetConfigVar(const struct FString& Key, const struct FString& Value, const struct FString& Section);
	void STATIC_RevertConfig();
	bool STATIC_IsPushToTalkEnabled();
	bool STATIC_GetInvertMouseY();
	bool STATIC_GetHasPendingChanges();
	struct FString STATIC_GetConfigVar(EConfigFile file, const struct FString& Key, const struct FString& Section);
	struct FString STATIC_GetConfigString(const struct FString& Key);
	int STATIC_GetConfigInt(const struct FString& Key);
	float STATIC_GetConfigFloat(const struct FString& Key);
	bool STATIC_GetConfigBool(const struct FString& Key);
	void ConsoleFloatChanged__DelegateSignature(float Value);
	void ConsoleBoolChanged__DelegateSignature(bool Value);
	void STATIC_ApplyDynamicShadowsQuality(class UObject* WorldContextObject, int overrideQuality);
	void STATIC_ApplyConfig();
};


// Class ConZ.ConstitutionSkill
// 0x0018 (0x00B8 - 0x00A0)
class UConstitutionSkill : public USkill
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00A0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConstitutionSkill");
		return ptr;
	}

};


// Class ConZ.ContainerItemDescriptor
// 0x00A8 (0x00D0 - 0x0028)
class UContainerItemDescriptor : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UClass*                                      _itemClass;                                               // 0x0048(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0050(0x0010) MISSED OFFSET
	struct FContainerItemDescriptorData                _data;                                                    // 0x0060(0x0040) (Net)
	TScriptInterface<class UInventoryContainer>        _owningContainer;                                         // 0x00A0(0x0030) (ZeroConstructor, IsPlainOldData)
	TScriptInterface<class UInventoryNode>             _owningNode;                                              // 0x00B0(0x0030) (ZeroConstructor, IsPlainOldData)
	bool                                               _firstReplication;                                        // 0x00C0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x00C1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ContainerItemDescriptor");
		return ptr;
	}

};


// Class ConZ.ElectricalDevice
// 0x0028 (0x0350 - 0x0328)
class AElectricalDevice : public AActor
{
public:
	struct FName                                       ControlName;                                              // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PowerConsumption;                                         // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _rootComponent;                                           // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               _hasPower;                                                // 0x0348(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isWorking;                                               // 0x0349(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x034A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ElectricalDevice");
		return ptr;
	}


	void OnRep_IsWorking();
	void OnRep_HasPower();
	bool IsWorking();
	bool HasPower();
};


// Class ConZ.ControlPanel
// 0x0028 (0x0378 - 0x0350)
class AControlPanel : public AElectricalDevice
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0350(0x0008) MISSED OFFSET
	TArray<class ADoor*>                               ControlledDoors;                                          // 0x0358(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AElectricalDevice*>                   ControlledDevices;                                        // 0x0368(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ControlPanel");
		return ptr;
	}

};


// Class ConZ.ConZAssetManager
// 0x0060 (0x0438 - 0x03D8)
class UConZAssetManager : public UAssetManager
{
public:
	TArray<struct FImageAssetToLoad>                   _imageAssetsToLoad;                                       // 0x03D8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x03E8(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZAssetManager");
		return ptr;
	}

};


// Class ConZ.ConZBase
// 0x00A8 (0x03D0 - 0x0328)
class AConZBase : public AActor
{
public:
	TWeakObjectPtr<class AConZBaseElement>             _baseElementActor;                                        // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x74];                                      // 0x0330(0x0074) MISSED OFFSET
	bool                                               _drawBaseDebug;                                           // 0x03A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               _drawDebugSolidBox;                                       // 0x03A5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _drawDebugWireframeBox;                                   // 0x03A6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _drawElementsDebug;                                       // 0x03A7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _overrideBlockStackingRules;                              // 0x03A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	int                                                _decayProcessingNumberOfFrames;                           // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _decayProcessingMaxDestroyedElementsPerUpdate;            // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1C];                                      // 0x03B4(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZBase");
		return ptr;
	}


	void OnElementInteracted(class APrisoner* User, EInteractionType interactionType, const struct FInteractionData& InteractionData);
	struct FString GetBaseName();
};


// Class ConZ.ConZBaseElement
// 0x0100 (0x0428 - 0x0328)
class AConZBaseElement : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0328(0x0028) MISSED OFFSET
	class UClass*                                      _weatherMaskComponentClass;                               // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	TMap<class UStaticMesh*, class UHierarchicalInstancedStaticMeshComponent*> _elementClassMap;                                         // 0x0360(0x0050) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData02[0x78];                                      // 0x03B0(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZBaseElement");
		return ptr;
	}

};


// Class ConZ.ConZBaseManager
// 0x0140 (0x0468 - 0x0328)
class AConZBaseManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0328(0x0048) MISSED OFFSET
	float                                              _damageEventProcessingPeriod;                             // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _decayProcessingPeriod;                                   // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _flagOvertakePeriod;                                      // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	class UClass*                                      _baseClass;                                               // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _baseElementClass;                                        // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _flagAreaVisualizerClass;                                 // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   _initialBaseSize;                                         // 0x0398(0x0008) (Edit, IsPlainOldData)
	float                                              _flagInfluenceRadius;                                     // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _flagOvertakeDuration;                                    // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxBaseBuildingHeight;                                   // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FConZBaseRepairAreaDuration                 _shortRepairDuration;                                     // 0x03AC(0x0008) (Edit)
	struct FConZBaseRepairAreaDuration                 _mediumRepairDuration;                                    // 0x03B4(0x0008) (Edit)
	struct FConZBaseRepairAreaDuration                 _longRepairDuration;                                      // 0x03BC(0x0008) (Edit)
	unsigned char                                      UnknownData02[0xC];                                       // 0x03C4(0x000C) MISSED OFFSET
	bool                                               _usePlacementMask;                                        // 0x03D0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x03D1(0x000F) MISSED OFFSET
	TMap<int64_t, class AConZBase*>                    _bases;                                                   // 0x03E0(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x38];                                      // 0x0430(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZBaseManager");
		return ptr;
	}


	bool SpawnBaseElement(const struct FTransform& Transform, class UClass* ElementClass, class APrisoner* Prisoner, float Quality);
	void NetMulticast_UpdateDoorData(int dataVersion, const struct FVector& doorLocation, const struct FDoorRepData& doorData);
	void NetMulticast_TransferOwnership(int dataVersion, const struct FDbIntegerId& oldId, const struct FDbIntegerId& newId);
	void NetMulticast_SpawnBaseElement(int dataVersion, const struct FTransform& Transform, const struct FConZBaseData& baseData, class UClass* ElementClass, int64_t ElementID, int64_t prisonerPlayerId, bool IsOwnedByPlayer, float Quality);
	void NetMulticast_SetDebugModeEnabled(class APrisoner* Prisoner, bool Value);
	void NetMulticast_SetBaseOwnerPlayerId(int dataVersion, const struct FConZBaseInteractionData& baseData, int64_t PlayerId);
	void NetMulticast_ProcessDecay(int dataVersion, float DeltaSeconds);
	void NetMulticast_InteractWithElement(int dataVersion, EInteractionType interactionType, const struct FConZBaseInteractionData& baseData, const struct FConZBaseElementInteractionData& baseElementData, class APrisoner* User);
	void NetMulticast_ExecuteFlagOvertake(int dataVersion, int64_t ElementID, const struct FVector& elementLocation, const struct FDbIntegerId& PlayerId);
	void NetMulticast_DestroyElement(int dataVersion, const struct FConZBaseElementIdentifier& ElementIdentifier, bool moveOtherElements);
	void NetMulticast_ClearBaseOwnerPlayerId(int dataVersion, const struct FConZBaseInteractionData& baseData);
	void NetMulticast_ApplyDamageToBaseElement(int dataVersion, int64_t BaseId, int64_t ElementID, const struct FVector& elementLocation, float DamageAmount);
};


// Class ConZ.ConZBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UConZBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZBlueprintFunctionLibrary");
		return ptr;
	}


	void STATIC_ChangeLocalization(const struct FString& Target);
};


// Class ConZ.ConZCameraManager
// 0x0000 (0x25F0 - 0x25F0)
class AConZCameraManager : public APlayerCameraManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZCameraManager");
		return ptr;
	}

};


// Class ConZ.ConZGameInstance
// 0x0178 (0x0218 - 0x00A0)
class UConZGameInstance : public UGameInstance
{
public:
	struct FCommonMapNames                             CommonMapNames;                                           // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FCharacterCreationMenuContext               CharacterCreationMenuContext;                             // 0x00B8(0x0030) (Edit, BlueprintVisible)
	bool                                               NetworkFailed;                                            // 0x00E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               WasKickedFromGameSession;                                 // 0x00E9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x00EA(0x0016) MISSED OFFSET
	class UGameplayLog*                                GameplayLogLogin;                                         // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGameplayLog*                                GameplayLogAdmin;                                         // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGameplayLog*                                GameplayLogKill;                                          // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGameplayLog*                                GameplayLogViolations;                                    // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGameplayLog*                                GameplayLogChat;                                          // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	TMap<uint32_t, class UDbConnection*>               _databaseConnections;                                     // 0x0130(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0180(0x0028) MISSED OFFSET
	class UDedicatedServerRequest*                     _serverRequest;                                           // 0x01A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUserManager*                                _userManager;                                             // 0x01B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUser*                                       _currentUser;                                             // 0x01B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUserProfile*                                _currentUserProfile;                                      // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _loadingScreenTexture;                                    // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class ULoadingScreen*                              _loadingScreen;                                           // 0x01D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x40];                                      // 0x01D8(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZGameInstance");
		return ptr;
	}


	void StartSingleplayerGame();
	void StartMultiplayerGame(const struct FString& Ip, int GameplayPort, const struct FString& AuthToken);
	void SetPlayAsDrone(bool Value);
	void SetCurrentUserProfile(class UUserProfile* Value);
	void RemoveLoadingWidget();
	void OnVoiceChatVolumeChanged(float Volume);
	void OnPreLoadMap(const struct FString& MapName);
	void OnPostLoadMap(class UWorld* loadedWorld);
	void OnPlaySessionEnd(bool quit);
	bool IsTransitioningMap();
	void HandleNetworkFailure(class UWorld* World, class UNetDriver* NetDriver, TEnumAsByte<ENetworkFailure> FailureType, const struct FString& ErrorString);
	class UUserManager* GetUserManager();
	class UDedicatedServerRequest* GetServerRequest();
	bool GetPlayAsDrone();
	struct FText GetLastNetworkError();
	class UDbConnection* GetDatabaseConnection();
	class UUserProfile* GetCurrentUserProfile();
	class UUser* GetCurrentUser();
	void AddLoadingWidget(class ULoadingScreen* Widget);
	void AddDefaultLoadingWidget();
};


// Class ConZ.ConZGameMode
// 0x0508 (0x0918 - 0x0410)
class AConZGameMode : public AGameMode
{
public:
	float                                              SerializationFrequency;                                   // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0414(0x001C) MISSED OFFSET
	class UClass*                                      _prisonerClassToSpawn;                                    // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _droneClassToSpawn;                                       // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB0];                                      // 0x0440(0x00B0) MISSED OFFSET
	class UClass*                                      _itemSpawningManagerClass;                                // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AItemSpawningManager*                        _itemSpawningManager;                                     // 0x04F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _itemVirtualizationManagerClass;                          // 0x0500(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AItemVirtualizationManager*                  _itemVirtualizationManager;                               // 0x0508(0x0008) (ZeroConstructor, IsPlainOldData)
	class AGlobalAnimalSpawner*                        _globalAnimalSpawner;                                     // 0x0510(0x0008) (ZeroConstructor, IsPlainOldData)
	class AGlobalBirdSpawner2*                         _globalBirdSpawner;                                       // 0x0518(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _vehicleSpawningManagerClass;                             // 0x0520(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVehicleSpawningManager*                     _vehicleSpawningManager;                                  // 0x0528(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _reportingManagerClass;                                   // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AReportingManager*                           _reportingManager;                                        // 0x0538(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _characterSpawningManagerClass;                           // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ACharacterSpawningManager*                   _characterSpawningManager;                                // 0x0548(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _achievementsManagerServerClass;                          // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AAchievementsManagerServer*                  _achievementsManagerServer;                               // 0x0558(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _missionLevelManagerClass;                                // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AMissionLevelManager*                        _missionLevelManager;                                     // 0x0568(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _missionSchedulerClass;                                   // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AMissionScheduler*                           _missionScheduler;                                        // 0x0578(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _survivalStatsHandlerClass;                               // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ASurvivalStatsHandler*                       _survivalStatsHandler;                                    // 0x0588(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _heatSourceManagerClass;                                  // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AHeatSourceManager*                          _heatSourceManager;                                       // 0x0598(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _baseManagerClass;                                        // 0x05A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AConZBaseManager*                            _baseManager;                                             // 0x05A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _ladderMarkersReplicatorClass;                            // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ALadderMarkersReplicator*                    _ladderMarkersReplicator;                                 // 0x05B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _damageOverTimeDealerClass;                               // 0x05C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ADamageOverTimeDealer*                       _damageOverTimeDealer;                                    // 0x05C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _notificationManagerClass;                                // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ANotificationsManager*                       _notificationManager;                                     // 0x05D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC8];                                      // 0x05E0(0x00C8) MISSED OFFSET
	class UDedicatedServerResponse*                    _serverResponse;                                          // 0x06A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x268];                                     // 0x06B0(0x0268) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZGameMode");
		return ptr;
	}


	void SendHUDMessageToAll(const struct FString& Message, bool beep);
	bool KickPlayer(class AConZPlayerController* Player, const struct FString& KickReason);
	class AVehicleSpawningManager* GetVehicleSpawningManager();
	class ASurvivalStatsHandler* GetSurvivalStatsHandler();
	class AReportingManager* GetReportingManager();
	class AMissionScheduler* GetMissionScheduler();
	class AMissionLevelManager* GetMissionLevelManager();
	class ALadderMarkersReplicator* GetLadderMarkersReplicator();
	class AItemVirtualizationManager* GetItemVirtualizationManager();
	class AItemSpawningManager* GetItemSpawningManager();
	class AHeatSourceManager* GetHeatSourceManager();
	class AGlobalBirdSpawner2* GetGlobalBirdSpawner();
	class AGlobalAnimalSpawner* GetGlobalAnimalSpawner();
	class ADamageOverTimeDealer* GetDamageOverTimeDealer();
	class ACharacterSpawningManager* GetCharacterSpawningManager();
	class AConZBaseManager* GetBaseManager();
	class AAchievementsManagerServer* GetAchievementsManagerServer();
};


// Class ConZ.ConZGameSession
// 0x0000 (0x0340 - 0x0340)
class AConZGameSession : public AGameSession
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZGameSession");
		return ptr;
	}

};


// Class ConZ.ConZGameState
// 0x0338 (0x06C0 - 0x0388)
class AConZGameState : public AGameState
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0388(0x0058) MISSED OFFSET
	float                                              ReactionFrequency;                                        // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SerializationFrequency;                                   // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class URespawnSettings*                            RespawnSettings;                                          // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AllowSectorRespawn;                                       // 0x03F0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               AllowShelterRespawn;                                      // 0x03F1(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               AllowSquadmateRespawn;                                    // 0x03F2(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x03F3(0x0005) MISSED OFFSET
	class UCraftingDatabase*                           _craftingDatabase;                                        // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGlobalItemSpawner*                          _globalItemSpawner;                                       // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBaseItemTag*                                _persistentItemTag;                                       // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0410(0x0018) MISSED OFFSET
	TArray<class AConZCharacter*>                      _registeredCharacters;                                    // 0x0428(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x70];                                      // 0x0438(0x0070) MISSED OFFSET
	class USicknessClasses*                            _sicknessClasses;                                         // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AConZSquad*>                          _squads;                                                  // 0x04B0(0x0010) (Net, ZeroConstructor)
	TMap<TWeakObjectPtr<class AConZCharacter>, int>    _currentDroneTargetDispatcherMap;                         // 0x04C0(0x0050) (ZeroConstructor)
	TMap<TWeakObjectPtr<class AConZCharacter>, int>    _droneTargetDispatcherHistoryMap;                         // 0x0510(0x0050) (ZeroConstructor)
	TMap<TWeakObjectPtr<class AConZCharacter>, class UDroneTargetData*> _droneTargetVisits;                                       // 0x0560(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x28];                                      // 0x05B0(0x0028) MISSED OFFSET
	class UClass*                                      _ladderMarkersRegistryClass;                              // 0x05D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x05E0(0x0008) MISSED OFFSET
	class ALadderMarkersRegistry*                      _ladderMarkersRegistry;                                   // 0x05E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class ADoorVirtualizationManager*                  _doorVirtualizationManager;                               // 0x05F0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0xC8];                                      // 0x05F8(0x00C8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZGameState");
		return ptr;
	}


	void SendServerTime(float Time);
	void RemoveMemberFromSquad(const struct FDbIntegerId& UserProfileId, class AConZSquad* Squad, bool destroySquadIfEmpty);
	void RemoveMemberFromAllSquads(const struct FDbIntegerId& UserProfileId, bool destroySquadIfEmpty);
	void OnRep_Squads();
	void Multicast_SendRespawnSettings(const struct FRespawnParameters& parameters);
	class AConZSquad* GetSquadForUserProfileId(const struct FDbIntegerId& ID);
	class AConZSquad* GetSquadForPrisoner(class APrisoner* Prisoner);
	class AConZSquad* GetSquad(const struct FDbIntegerId& squadId);
	TArray<class APrisoner*> GetRegisteredPrisoners();
	class AConZSquad* CreateSquad(const struct FDbIntegerId& squadId);
	void CleanupSquadsFromDatabase();
	void AddMemberToSquad(const struct FDbIntegerId& UserProfileId, class AConZSquad* Squad);
};


// Class ConZ.GameplayLog
// 0x0018 (0x0040 - 0x0028)
class UGameplayLog : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameplayLog");
		return ptr;
	}

};


// Class ConZ.ConZPlayerController
// 0x0300 (0x0978 - 0x0678)
class AConZPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0678(0x0008) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 ComponentsToHide;                                         // 0x0680(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnPrisonerSpawned;                                        // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UInteractionContainerUserWidget*             CurrentInteractionContainerWidget;                        // 0x06A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              LocalChatDistance;                                        // 0x06A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06AC(0x0004) MISSED OFFSET
	class UPlayerRpcChannel*                           _playerRpcChannel;                                        // 0x06B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x60];                                      // 0x06B8(0x0060) MISSED OFFSET
	class UUserProfile*                                _userProfile;                                             // 0x0718(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x38];                                      // 0x0720(0x0038) MISSED OFFSET
	class APawn*                                       _possessedPawn;                                           // 0x0758(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0760(0x0010) MISSED OFFSET
	class UPawnNoiseEmitterComponent*                  _noiseEmitterComponent;                                   // 0x0770(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0778(0x0010) MISSED OFFSET
	float                                              _teleportWorldStreamingLocationChangeDelay;               // 0x0788(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _teleportWorldStreamingTriggerLag;                        // 0x078C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x68];                                      // 0x0790(0x0068) MISSED OFFSET
	int                                                _repFamePoints;                                           // 0x07F8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8C];                                      // 0x07FC(0x008C) MISSED OFFSET
	int                                                _maxHistorySize;                                          // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x14];                                      // 0x088C(0x0014) MISSED OFFSET
	float                                              _weatherHeightUpdatePeriod;                               // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x08A4(0x0004) MISSED OFFSET
	class UAdminCommandRegistry*                       _adminCommandRegistry;                                    // 0x08A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x20];                                      // 0x08B0(0x0020) MISSED OFFSET
	class AAchievementsManagerClient*                  _achievementsManagerClient;                               // 0x08D0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _achievementsManagerClientClass;                          // 0x08D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _missionManagerClass;                                     // 0x08E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AMissionManager*                             _missionManager;                                          // 0x08E8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _missionDialogueManagerClass;                             // 0x08F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x60];                                      // 0x08F8(0x0060) MISSED OFFSET
	float                                              _isReadyForPlayDelay;                                     // 0x0958(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0xC];                                       // 0x095C(0x000C) MISSED OFFSET
	struct FDateTime                                   _replicatedServerUtcNow;                                  // 0x0968(0x0008) (Net)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0970(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZPlayerController");
		return ptr;
	}


	void ToggleGameMenuEvent();
	void Teleport(const struct FTeleportRequest& request);
	void ShowWarningMessage(const struct FString& Message, float Duration, const struct FLinearColor& TextColor);
	void ShowNotification(const struct FString& Message, float Duration);
	void ShowLevelUpMessageFromClass(class UClass* skillClass, ESkillLevel skillLevel);
	void ShowLevelUpMessage(class USkill* Skill, ESkillLevel skillLevel);
	void ShowKillFeedNotificationOnClient(const struct FString& prefix, const struct FString& characterName, const struct FString& suffix, bool ping);
	void ShowKillFeedMessage(const struct FString& prefix, const struct FString& characterName, const struct FString& suffix, bool ping);
	void ShowHUDMessage(const struct FString& Message, bool beep);
	void SetTeleportWorldStreamingLocationChangeDelay(float Value);
	void SetRespawnOptionTime(ERespawnOption option, float Time);
	void SetIsChatDuplicationToMessageNotificationsMuted(bool Value);
	void SetGameEventCooldown(float cooldown);
	void SetFamePoints(float Value);
	void Server_SendProofOfLife();
	void Server_RequestSurvivalStats(uint32_t ID, const struct FDbIntegerId& UserProfileId);
	void Server_RequestSquadRankingData(uint32_t ID, const struct FDbIntegerId& squadId, int count);
	void Server_RequestSquadMemberInfo(uint32_t ID, const struct FDbIntegerId& squadId);
	void Server_RequestRespawnWaitTime();
	void Server_RequestGameEventTeamChange(int preferredTeam);
	void Server_RequestEventsRankingStats(uint32_t ID, const struct FDbIntegerId& UserProfileId, int count, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder);
	void Server_ReportStartLeavingGame();
	void Server_ReportPlayPreparationsSucceeded();
	void Server_ReportCancelLeavingGame();
	void Server_ProcessAdminCommand(const struct FString& commandText);
	void Server_LeaveGameEvent();
	void Server_JoinGameEvent(class AGameEventBase* gameEvent, int preferredTeam);
	void SendHUDMessageToClient(const struct FString& Message, bool beep);
	void SendHUDMessageToAll(const struct FString& Message, bool beep);
	void SendChatStringToServer(const struct FString& string, EChatType chatType);
	void SendChatStringToClient(class AConZPlayerState* SenderPlayerState, const struct FString& string, EChatType chatType, bool shouldCopyToClientClipboard);
	void SendAnimalEyeSocketYawToServer(class AAnimal2* Animal, unsigned char Yaw);
	void SaveState();
	void RepossesOriginalPrisoner();
	void RemoveServerFromFavorites();
	void RegisterRespawn(ERespawnOption option);
	void RebuildCompletionsForRegisteredAdminCommands();
	void PushChatMessage(const struct FString& string, class AConZPlayerState* SenderPlayerState, EChatType chatType, bool shouldCopyToClientClipboard);
	void PrisonerSpawnedDelegate__DelegateSignature(class APrisoner* spawnedPrisoner);
	void OnRep_ReplicatedServerUtcNow();
	void OnRep_PossessedPawn();
	void OnRep_FamePoints();
	void LoadState();
	void LeaveGameEvent();
	void JoinGameEvent(class AGameEventBase* gameEvent, int preferredTeam);
	bool IsTeleportInProgress();
	void InputComponent_CancelAllControllerActions();
	void HandleChatMessageCommit(const struct FText& Text, EChatType chatType);
	struct FString GetUserProfileName();
	struct FDbIntegerId GetUserProfileId();
	class UUserProfile* GetUserProfile();
	struct FString GetUserName2();
	struct FString GetUserId();
	float GetTeleportWorldStreamingLocationChangeDelay();
	struct FDbIntegerId GetServerUserProfileId();
	float GetRespawnWaitTime();
	float GetRespawnOptionTimeLeft(ERespawnOption option);
	float GetRespawnOptionTime(ERespawnOption option);
	class APrisoner* GetPrisoner();
	class UPlayerRpcChannel* GetPlayerRpcChannel();
	class UPawnNoiseEmitterComponent* GetNoiseEmitterComponent();
	class AMissionDialogueManager* GetMissionDialogueManager();
	struct FPlayerLoginInfo GetLoginInfo();
	bool GetIsChatDuplicationToMessageNotificationsMuted();
	float GetGameEventCooldown();
	int GetFamePointsRounded();
	float GetFamePoints();
	float GetFameMultiplier();
	int GetFameLevel();
	class AMissionDialogueManager* GetDialogueManager();
	class AConZCameraManager* GetCameraManager();
	class UAdminCommandRegistry* GetAdminCommandRegistry();
	class AAchievementsManagerClient* GetAchievementsManagerClient();
	void STATIC_Crash();
	int STATIC_ComputeFameLevel(float FamePoints);
	void Client_UpdateRespawnSettings(const struct FRespawnParameters& parameters);
	void Client_UpdateAdminCommandSquadArgumentCompletionValues(TArray<struct FString> Values);
	void Client_UpdateAdminCommandPlayerArgumentCompletionValues(TArray<struct FString> Values);
	void Client_UnmuteUser(const struct FString& UserId);
	void Client_TestPingLockStuff(float averageDelta, float averagePing, float counter);
	void Client_SetRespawnWaitTime(float Seconds);
	void Client_SetRespawnOptionTime(ERespawnOption option, float Time);
	void Client_SetGameEventCooldown(float cooldown);
	void Client_SaveState();
	void Client_ReceiveSurvivalStats(uint32_t ID, const struct FSurvivalStats& stats);
	void Client_ReceiveSquadRankingData(uint32_t ID, TArray<struct FString> names, TArray<struct FString> information, TArray<uint64_t> emblems, TArray<float> scores, int squadRank, int squadIndex);
	void Client_ReceiveSquadMemberInfo(uint32_t ID, TArray<struct FDbIntegerId> userProfileIds, TArray<struct FString> names, TArray<EConZSquadMemberRank> ranks, TArray<float> FamePoints, TArray<bool> online);
	void Client_ReceiveEventsRankingStats(uint32_t ID, TArray<struct FEventsRankingStatsItem> stats, int playerRank);
	void Client_MuteUser(const struct FString& UserId, const struct FString& userName);
	void Client_Login(const struct FPlayerLoginInfo& serverLoginInfo);
	void Client_ExecuteAdminCommand(const struct FString& commandText);
	void Client_EnableRespawnOption(ERespawnOption option);
	void ClearRespawnOptionTimers();
	void ChatHistoryForward();
	void ChatHistoryBack();
	bool CanAddServerToFavorites();
	void AddServerToFavorites();
};


// Class ConZ.ConZPlayerState
// 0x0000 (0x03F0 - 0x03F0)
class AConZPlayerState : public APlayerState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZPlayerState");
		return ptr;
	}

};


// Class ConZ.ConZReplicationGraph
// 0x0110 (0x0300 - 0x01F0)
class UConZReplicationGraph : public UReplicationGraph
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x01F0(0x00B0) MISSED OFFSET
	class UReplicationGraphNode_GridSpatialization2D*  _gridNode;                                                // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReplicationGraphNode_ActorList*             _alwaysRelevantNode;                                      // 0x02A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x02B0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReplicationGraph");
		return ptr;
	}


	void OnVehicleItemContainerCreated(class AConZVehicle4W* Vehicle);
	void OnVehicleDestroyed(class AConZVehicle4W* Vehicle);
	void OnPlaceableActorOwnerChanged(class APlaceableActor* PlaceableActor, class AActor* NewOwner, class AActor* previousOwner);
	void OnItemOwnerChanged(class AItem* Item, class AActor* NewOwner, class AActor* previousOwner);
};


// Class ConZ.ConZReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0210 (0x0380 - 0x0170)
class UConZReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode_AlwaysRelevant_ForConnection
{
public:
	unsigned char                                      UnknownData00[0x210];                                     // 0x0170(0x0210) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}

};


// Class ConZ.ConZReplicationGraph2
// 0x00E0 (0x02D0 - 0x01F0)
class UConZReplicationGraph2 : public UReplicationGraph
{
public:
	TArray<class UClass*>                              SpatializedClasses;                                       // 0x01F0(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              NonSpatializedChildClasses;                               // 0x0200(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              AlwaysRelevantClasses;                                    // 0x0210(0x0010) (ZeroConstructor)
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                 // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReplicationGraphNode_ActorList*             AlwaysRelevantNode;                                       // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0230(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReplicationGraph2");
		return ptr;
	}

};


// Class ConZ.ConZReplicationGraph2Node_AlwaysRelevant_ForConnection
// 0x0240 (0x02E0 - 0x00A0)
class UConZReplicationGraph2Node_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x228];                                     // 0x00A0(0x0228) MISSED OFFSET
	class AActor*                                      LastPawn;                                                 // 0x02C8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x02D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReplicationGraph2Node_AlwaysRelevant_ForConnection");
		return ptr;
	}

};


// Class ConZ.ConZReplicationGraph2Node_PlayerStateFrequencyLimiter
// 0x0030 (0x00D0 - 0x00A0)
class UConZReplicationGraph2Node_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x00A0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReplicationGraph2Node_PlayerStateFrequencyLimiter");
		return ptr;
	}

};


// Class ConZ.ConZReverbComponent
// 0x0020 (0x02A0 - 0x0280)
class UConZReverbComponent : public UAkLateReverbComponent
{
public:
	class UAkAuxBus*                                   IndoorMediumAuxBus;                                       // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAuxBus*                                   IndoorLargeAuxBus;                                        // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAuxBus*                                   OutdoorLargeAuxBus;                                       // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReverbComponent");
		return ptr;
	}

};


// Class ConZ.ConZReverbVolume
// 0x0000 (0x0398 - 0x0398)
class AConZReverbVolume : public AAkReverbVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZReverbVolume");
		return ptr;
	}

};


// Class ConZ.ConZSquad
// 0x0070 (0x0398 - 0x0328)
class AConZSquad : public AActor
{
public:
	struct FDbIntegerId                                squadId;                                                  // 0x0328(0x0008) (Net)
	struct FString                                     SquadName;                                                // 0x0330(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	struct FString                                     SquadMessage;                                             // 0x0340(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	struct FString                                     SquadInformation;                                         // 0x0350(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	struct FConZSquadEmblem                            SquadEmblem;                                              // 0x0360(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<struct FConZSquadMember>                    _members;                                                 // 0x0368(0x0010) (Net, ZeroConstructor)
	TArray<struct FConZSquadMember>                    _oldMembers;                                              // 0x0378(0x0010) (ZeroConstructor)
	uint64_t                                           _repEmblem;                                               // 0x0388(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                _maxAllowedSquadMembers;                                  // 0x0390(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0394(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZSquad");
		return ptr;
	}


	void UpdateMemberStatus();
	void UpdateMemberLimit();
	void SetMemberRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank);
	void SendMessageToMembers(const struct FString& Message);
	void RemoveMember(const struct FDbIntegerId& UserProfileId);
	void PromoteMember(const struct FDbIntegerId& UserProfileId);
	void OnRep_SquadName();
	void OnRep_SquadMessage();
	void OnRep_Members();
	void OnRep_Emblem();
	bool IsMemberCountValid();
	bool IsAnyMemberInDanger();
	bool IsAnyMemberAlive();
	bool HasMember(const struct FDbIntegerId& UserProfileId);
	struct FDbIntegerId GetSuccessorForMember(const struct FDbIntegerId& UserProfileId);
	TArray<struct FConZSquadMember> GetOnlineMembers();
	int GetOnlineMemberCount();
	TArray<struct FConZSquadMember> GetMembers();
	EConZSquadMemberRank GetMemberRank(const struct FDbIntegerId& UserProfileId);
	int GetMemberCount();
	struct FConZSquadMember GetMember(const struct FDbIntegerId& UserProfileId);
	int GetMaxAllowedMemberCount();
	struct FDbIntegerId GetLeader();
	void GenerateName();
	void GenerateMessage();
	void GenerateInformation();
	void GenerateEmblem();
	void DemoteMember(const struct FDbIntegerId& UserProfileId);
	bool CanMemberRecruitMembers(const struct FDbIntegerId& UserProfileId);
	bool CanMemberPromoteRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank);
	bool CanMemberKickRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank);
	bool CanMemberEditName(const struct FDbIntegerId& UserProfileId);
	bool CanMemberEditMessage(const struct FDbIntegerId& UserProfileId);
	bool CanMemberEditInformation(const struct FDbIntegerId& UserProfileId);
	bool CanMemberEditEmblem(const struct FDbIntegerId& UserProfileId);
	bool CanMemberDemoteRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank);
	void AddMember(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank);
};


// Class ConZ.ConZVehicle4W
// 0x04C8 (0x0860 - 0x0398)
class AConZVehicle4W : public ADcxVehicle4W
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0398(0x0018) MISSED OFFSET
	struct FVehicleSpawnParameters                     _spawnParameters;                                         // 0x03B0(0x0030) (Edit, DisableEditOnInstance)
	EConZPxDominanceGroup                              _physicsDominanceGroup;                                   // 0x03E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1B];                                      // 0x03E1(0x001B) MISSED OFFSET
	bool                                               _isMassChangeByCargoAllowed;                              // 0x03FC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isMassChangeByMounteesAllowed;                           // 0x03FD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isCenterOfMassChangeByCargoAllowed;                      // 0x03FE(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               _isCenterOfMassChangeByMounteesAllowed;                   // 0x03FF(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     _cargoCenterOfMassOffset;                                 // 0x0400(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              _minEffectiveCargoMass;                                   // 0x040C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _maxEffectiveCargoMass;                                   // 0x0410(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _pushImpulseMagnitude;                                    // 0x0414(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _pushDirectionRatioBetweenForwardAndUp;                   // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxDistanceToAllowThePush;                               // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxSpeed;                                                // 0x0420(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _supportsHandbrake;                                       // 0x0424(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	class UAkAudioEvent*                               _engineStartingAudioEvent;                                // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _engineStartedAudioEvent;                                 // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _engineTurnedOffAudioEvent;                               // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _engineFailedToStartAudioEvent;                           // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _engineStalledAudioEvent;                                 // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _hornStartAudioEvent;                                     // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _hornStopAudioEvent;                                      // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lightsActivatedAudioEvent;                               // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lightsDeactivatedAudioEvent;                             // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _gearUpAudioEvent;                                        // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _gearDownAudioEvent;                                      // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _chassisStartedMovingAudioEvent;                          // 0x0480(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _chassisStoppedMovingAudioEvent;                          // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0490(0x0004) MISSED OFFSET
	float                                              _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero;       // 0x0494(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _rpmScaleForSoundWhenSpeedIsLessThanZero;                 // 0x0498(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _soundCullDistance;                                       // 0x049C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UTireToSurfaceAudioData*                     _tireToSurfaceAudioData;                                  // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _sendStateInterval;                                       // 0x04A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _rigidBodyStatePositionErrorTolerance;                    // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _rigidBodyStateRotationErrorTolerance;                    // 0x04B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _distanceErrorToHardSnapToRemoteLocation;                 // 0x04B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UConZVehicle4WMountSlot*>             _mountSlots;                                              // 0x04B8(0x0010) (ExportObject, ZeroConstructor)
	EVehicleEngineState                                _engineState;                                             // 0x04C8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET
	float                                              _engineStallingForceMagnitude;                            // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _hornActive;                                              // 0x04D4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _lightsActive;                                            // 0x04D5(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x04D6(0x0002) MISSED OFFSET
	struct FVehicleMaterialParameterDescription        _headlightsMaterialParameter;                             // 0x04D8(0x0010) (Edit)
	struct FVehicleMaterialParameterDescription        _reverseLightsMaterialParameter;                          // 0x04E8(0x0010) (Edit)
	struct FVehicleMaterialParameterDescription        _brakeLightsMaterialParameter;                            // 0x04F8(0x0010) (Edit)
	float                                              _brakeLightsAlwaysOnIfLightsAreActivated;                 // 0x0508(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x24];                                      // 0x050C(0x0024) MISSED OFFSET
	class UClass*                                      _itemContainerClass;                                      // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AItem*                                       _itemContainer;                                           // 0x0538(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _itemContainerContainedItemsMass;                         // 0x0540(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8C];                                      // 0x0544(0x008C) MISSED OFFSET
	bool                                               _canEngineBeStalledByAcceleration;                        // 0x05D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x05D1(0x0003) MISSED OFFSET
	float                                              _engineStallingByAccelerationSpeedThreshold;              // 0x05D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _engineStallingByAccelerationOccurrenceInterval;          // 0x05D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x05DC(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               _engineStallingByAccelerationAudioEvent;                  // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      _engineStallingByAccelerationAudioEventTriggerTimeRatios; // 0x05E8(0x0010) (Edit, ZeroConstructor)
	bool                                               _canEngineBeStalledByUpShift;                             // 0x05F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x05F9(0x0003) MISSED OFFSET
	float                                              _engineStallingByUpShiftOccurrenceInterval;               // 0x05FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0600(0x0008) MISSED OFFSET
	class UAkAudioEvent*                               _engineStallingByUpShiftAudioEvent;                       // 0x0608(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      _engineStallingByUpShiftAudioEventTriggerTimeRatios;      // 0x0610(0x0010) (Edit, ZeroConstructor)
	bool                                               _canSkillAffectMaxSpeed;                                  // 0x0620(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canSkillAffectSteerRate;                                 // 0x0621(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canSkillAffectThrottleAmount;                            // 0x0622(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _canSkillAffectBrakeAmount;                               // 0x0623(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _repPackedState;                                          // 0x0624(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0628(0x0004) MISSED OFFSET
	float                                              _health;                                                  // 0x062C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _maxHealth;                                               // 0x0630(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _autoHealthDrainThreshold;                                // 0x0634(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _autoHealthDrain;                                         // 0x0638(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x063C(0x0004) MISSED OFFSET
	TArray<struct FVehicleDamagedEffectsParameters>    _damagedEffects;                                          // 0x0640(0x0010) (Edit, ZeroConstructor)
	struct FRepairableParams                           _repairableParams;                                        // 0x0650(0x0038) (Edit)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0688(0x0010) MISSED OFFSET
	struct FVehicleExhaustEffects                      _exhaustEffects;                                          // 0x0698(0x0048) (Edit)
	float                                              _tireEffectUpdateRange;                                   // 0x06E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _numAudioObjectsForTires;                                 // 0x06E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x18];                                      // 0x06E8(0x0018) MISSED OFFSET
	TArray<struct FVehicleTireEffectProperties>        _tireEffectProperties;                                    // 0x0700(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData16[0x10];                                      // 0x0710(0x0010) MISSED OFFSET
	class UClass*                                      _corpseClass;                                             // 0x0720(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _activeHitTimeToLive;                                     // 0x0728(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x072C(0x0004) MISSED OFFSET
	struct FVehicleImpactEffects                       _impactEffects[0x3];                                      // 0x0730(0x0038) (Edit)
	class UCurveFloat*                                 ImpactDamageVsNormalImpulse;                              // 0x07D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x10];                                      // 0x07E0(0x0010) MISSED OFFSET
	float                                              _makeNoiseInterval;                                       // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxNoiseLoudnessFromEngine;                              // 0x07F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxNoiseLoudnessFromSpeed;                               // 0x07F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x07FC(0x0004) MISSED OFFSET
	float                                              _speedThresholdInKphToAffectNavigation;                   // 0x0800(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _allowedWaterImmersionDepth;                              // 0x0804(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _disallowedWaterImmersionDepth;                           // 0x0808(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _waterImmersionDepthToForceEvictMountees;                 // 0x080C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeToEvictMounteesWhenImmersedIntoWater;                // 0x0810(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeToForceEvictMounteesWhenImmersedIntoWater;           // 0x0814(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeToAutoDestructWhenImmersedIntoWater;                 // 0x0818(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x9];                                       // 0x081C(0x0009) MISSED OFFSET
	bool                                               _shouldEvictMounteesIfTiltedAboveThreshold;               // 0x0825(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x2];                                       // 0x0826(0x0002) MISSED OFFSET
	float                                              _tiltThresholdAngleToEvictMountees;                       // 0x0828(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0xC];                                       // 0x082C(0x000C) MISSED OFFSET
	struct FText                                       _healthBarCaption;                                        // 0x0838(0x0018) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData23[0x8];                                       // 0x0850(0x0008) MISSED OFFSET
	class URadioComponent*                             _radioComponent;                                          // 0x0858(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicle4W");
		return ptr;
	}


	void WarnAboutMounteeEvictionIfInWater();
	void Server_StopEngineStalling();
	void Server_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters);
	void Server_SetLightsActive(bool Value);
	void Server_SetHornActive(bool Value);
	void Server_SetEngineState(EVehicleEngineState Value);
	void Server_SendState(const struct FRigidBodyState& State, uint32_t packedState);
	void Server_ApplyImpactDamage(float Damage, const struct FHitResult& HitResult);
	void ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_PackedState();
	void OnRep_LightsActive(bool OldValue);
	void OnRep_ItemContainerContainedItemsMass(float OldValue);
	void OnRep_HornActive(bool OldValue);
	void OnRep_Health(float OldValue);
	void OnRep_EngineState(EVehicleEngineState OldValue);
	void NetMulticast_UpdateMassProperties();
	void NetMulticast_StopEngineStalling();
	void NetMulticast_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters);
	float GetWaterImmersionDepthSlow();
	float GetWaterImmersionDepth();
	class AItem* GetItemContainer();
	bool CanBeInteractedWith();
};


// Class ConZ.ConZVehicle4WMountSlot
// 0x0060 (0x0150 - 0x00F0)
class UConZVehicle4WMountSlot : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FName                                       _socketName;                                              // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _mountAudioEvent;                                         // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _mountPriority;                                           // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	TArray<struct FMountSlotEntryPoint>                _entryPoints;                                             // 0x0110(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               _unmountAudioEvent;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isReachableFromSky;                                      // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMotionIntensity                                   _mountingMotionIntensity;                                 // 0x0129(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMotionIntensity                                   _unmountingMotionIntensity;                               // 0x012A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x012B(0x0001) MISSED OFFSET
	struct FVector                                     _mounteeCenterOfMassOffset;                               // 0x012C(0x000C) (Edit, IsPlainOldData)
	float                                              _minEffectiveMounteeMass;                                 // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxEffectiveMounteeMass;                                 // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UObject*                                     _mountee;                                                 // 0x0140(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _canMounteeBeAttackedByMelee;                             // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicle4WMountSlot");
		return ptr;
	}

};


// Class ConZ.ConZVehicle4WDriverMountSlot
// 0x0020 (0x0170 - 0x0150)
class UConZVehicle4WDriverMountSlot : public UConZVehicle4WMountSlot
{
public:
	class UBlendSpace*                                 _forwardIdleAnimation;                                    // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _forwardSteeringAnimation;                                // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 _reverseIdleAnimation;                                    // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _reverseSteeringAnimation;                                // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicle4WDriverMountSlot");
		return ptr;
	}

};


// Class ConZ.ConZVehicle4WPassengerMountSlot
// 0x0008 (0x0158 - 0x0150)
class UConZVehicle4WPassengerMountSlot : public UConZVehicle4WMountSlot
{
public:
	class UBlendSpace*                                 _idleAnimation;                                           // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicle4WPassengerMountSlot");
		return ptr;
	}

};


// Class ConZ.ConZVehicleAnimInstance
// 0x0020 (0x0980 - 0x0960)
class UConZVehicleAnimInstance : public UDcxVehicleAnimInstance
{
public:
	float                                              EngineRpmInterpSpeed;                                     // 0x0960(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // 0x0964(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpeedKph;                                                 // 0x0968(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSteeringWheelSteerAngle;                               // 0x096C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SteeringWheelSteerAngleInterpSpeed;                       // 0x0970(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentSteeringWheelSteerAngle;                           // 0x0974(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0978(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicleAnimInstance");
		return ptr;
	}

};


// Class ConZ.ConZVehicleDriveComponent4W
// 0x0010 (0x0428 - 0x0418)
class UConZVehicleDriveComponent4W : public UDcxVehicleDriveComponent4W
{
public:
	float                                              _maxArtificialBrakingForce;                               // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _speedLimiterMaxSpeed;                                    // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _speedLimiterMaxBrakingForce;                             // 0x0420(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _speedLimiterInfluenceCoefficient;                        // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicleDriveComponent4W");
		return ptr;
	}


	void SetSpeedLimiterMaxSpeed(float Value);
	float GetSpeedLimiterMaxSpeed();
	float GetEngineLoad();
};


// Class ConZ.ConZVehicleSpringArmComponent
// 0x0050 (0x0310 - 0x02C0)
class UConZVehicleSpringArmComponent : public USpringArmComponent
{
public:
	float                                              _ownerAccelerationDirectionInterpSpeed;                   // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _maxCameraOffset;                                         // 0x02C4(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     _cameraOffsetInterpSpeed;                                 // 0x02D0(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x34];                                      // 0x02DC(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicleSpringArmComponent");
		return ptr;
	}

};


// Class ConZ.ConZVehicleTire
// 0x0028 (0x00F8 - 0x00D0)
class UConZVehicleTire : public UDcxVehicleTire
{
public:
	struct FConZVehicleTireParticleData                ParticleTrail;                                            // 0x00D0(0x0014) (Edit)
	struct FConZVehicleTireParticleData                ParticleWave;                                             // 0x00E4(0x0014) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZVehicleTire");
		return ptr;
	}

};


// Class ConZ.ConZWaterVolume
// 0x0008 (0x0378 - 0x0370)
class AConZWaterVolume : public APhysicsVolume
{
public:
	class AOceanManager*                               Ocean;                                                    // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZWaterVolume");
		return ptr;
	}

};


// Class ConZ.ConZWorldBoundsVolume
// 0x0000 (0x0360 - 0x0360)
class AConZWorldBoundsVolume : public AVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZWorldBoundsVolume");
		return ptr;
	}

};


// Class ConZ.ConZWorldSettings
// 0x0100 (0x0620 - 0x0520)
class AConZWorldSettings : public AWorldSettings
{
public:
	bool                                               SerializeInstances;                                       // 0x0520(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0521(0x0007) MISSED OFFSET
	class AWeatherController*                          WeatherController;                                        // 0x0528(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AWetnessManager*                             WetnessManager;                                           // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AGameEventManager*                           GameEventManager;                                         // 0x0538(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AWorldEventManager*                          WorldEventManager;                                        // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ABuildingManager*                            BuildingManager;                                          // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class ARadioStation*>                       RadioStations;                                            // 0x0550(0x0010) (Edit, ZeroConstructor)
	struct FItemSpawningSettings                       ItemSpawningSettings;                                     // 0x0560(0x0058) (Edit)
	class AVolume*                                     IslandBoundsVolume;                                       // 0x05B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseVirtualizationSystem;                                  // 0x05C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseDoorVirtualizationSystem;                              // 0x05C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x05C2(0x0002) MISSED OFFSET
	struct FBox2D                                      WorldBounds;                                              // 0x05C4(0x0014) (Edit)
	struct FGameplayTag                                HeightMapGameplayTag;                                     // 0x05D8(0x0008) (Edit)
	struct FGameplayTag                                MapPropertiesGameplayTag;                                 // 0x05E0(0x0008) (Edit)
	unsigned char                                      UnknownData02[0x38];                                      // 0x05E8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZWorldSettings");
		return ptr;
	}

};


// Class ConZ.CookingSkill
// 0x0000 (0x00A0 - 0x00A0)
class UCookingSkill : public UIntelligenceSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CookingSkill");
		return ptr;
	}

};


// Class ConZ.CopperDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UCopperDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CopperDeficiency");
		return ptr;
	}

};


// Class ConZ.Corpse
// 0x01D8 (0x0500 - 0x0328)
class ACorpse : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	class USkeletalMeshComponent*                      RagdollMeshComponent;                                     // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                  // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemRepresentation;                                       // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               IterativeChopping;                                        // 0x0358(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0359(0x0007) MISSED OFFSET
	struct FName                                       MainBoneName;                                             // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	struct FCorpseSkeletalMeshRepData                  RagdollMeshData;                                          // 0x0370(0x0070) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	TArray<struct FCorpseStaticMeshRepData>            StaticMeshData;                                           // 0x03E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	TArray<struct FCorpseSkeletalMeshRepData>          SkeletalMeshData;                                         // 0x03F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	struct FCorpsePoseData                             PoseData;                                                 // 0x0400(0x0080) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	TArray<class AItem*>                               inventory;                                                // 0x0480(0x0010) (Net, ZeroConstructor)
	float                                              SearchTime;                                               // 0x0490(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PhysicsPauseDistance;                                     // 0x0494(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartSearchAudioEvent;                                    // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopSearchAudioEvent;                                     // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoDestructTime;                                         // 0x04A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoDestructRadius;                                       // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              Attachements;                                             // 0x04B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	TArray<struct FName>                               AttachementSockets;                                       // 0x04C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData03[0x18];                                      // 0x04D0(0x0018) MISSED OFFSET
	class AConZCharacter*                              _sourceCharacter;                                         // 0x04E8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x04F0(0x0008) MISSED OFFSET
	bool                                               _atRest;                                                  // 0x04F8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x04F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Corpse");
		return ptr;
	}


	void OnRep_SourceCharacter();
	void OnRep_PoseData();
	void OnRep_Inventory();
	void OnRep_AtRest();
	void Multicast_ClonePoseLocally(class AConZCharacter* sourceCharacter);
	void CopyFromCharacter(class AConZCharacter* sourceCharacter);
	void ApplyAttachements();
};


// Class ConZ.CorpseInterface
// 0x0000 (0x0028 - 0x0028)
class UCorpseInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CorpseInterface");
		return ptr;
	}

};


// Class ConZ.Crab
// 0x0020 (0x0B00 - 0x0AE0)
class ACrab : public AAnimal
{
public:
	class UAnimationAsset*                             IdleAnimation2;                                           // 0x0AE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             WalkLeftAnimation;                                        // 0x0AE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             WalkRightAnimation;                                       // 0x0AF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0AF8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Crab");
		return ptr;
	}

};


// Class ConZ.CrabAIController
// 0x0070 (0x04A8 - 0x0438)
class ACrabAIController : public AAIController
{
public:
	float                                              MinIdle1Time;                                             // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxIdle1Time;                                             // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinIdle2Time;                                             // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxIdle2Time;                                             // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinWalkTime;                                              // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkTime;                                              // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRadius;                                                // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0458(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CrabAIController");
		return ptr;
	}

};


// Class ConZ.CraftableItem
// 0x00F0 (0x0120 - 0x0030)
class UCraftableItem : public UDataAsset
{
public:
	ECraftingItemCategory                              ItemCategory;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ItemOrder;                                                // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FCraftingPair>                       CraftedItems;                                             // 0x0038(0x0010) (Edit, ZeroConstructor)
	EInteractionType                                   Interaction;                                              // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FText                                       InteractionCaption;                                       // 0x0050(0x0018) (Edit)
	TArray<struct FCraftingItem>                       MandatoryItems;                                           // 0x0068(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCraftingItem>                       OptionalItems;                                            // 0x0078(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCraftingItem>                       ToolsNeeded;                                              // 0x0088(0x0010) (Edit, ZeroConstructor)
	bool                                               AutoCalculation;                                          // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	class UClass*                                      Skill;                                                    // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCraftingSkillLevelData                     NoSkillLevelData;                                         // 0x00A8(0x0014) (Edit)
	struct FCraftingSkillLevelData                     BasicLevelData;                                           // 0x00BC(0x0014) (Edit)
	struct FCraftingSkillLevelData                     MediumLevelData;                                          // 0x00D0(0x0014) (Edit)
	struct FCraftingSkillLevelData                     AdvancedLevelData;                                        // 0x00E4(0x0014) (Edit)
	class UAnimMontage*                                CustomCraftingMontage;                                    // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartCraftingAudioEvent;                                  // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopCraftingAudioEvent;                                   // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyForSupporterPack;                                     // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0111(0x0003) MISSED OFFSET
	float                                              MatBaseOutlineOffset;                                     // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MatThinness;                                              // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               MatIsTwoSided;                                            // 0x011C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x011D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftableItem");
		return ptr;
	}

};


// Class ConZ.PlaceableCraftableItem
// 0x0060 (0x0180 - 0x0120)
class UPlaceableCraftableItem : public UCraftableItem
{
public:
	float                                              MaxPlacementAngle;                                        // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AdjustRotation;                                           // 0x0124(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	float                                              GroundOffsetWhilePlacing;                                 // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceFromGroundWhilePlacing;                        // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreFloatingCheckWhilePlacing;                          // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	struct FVector                                     PlacementLocationOffset;                                  // 0x0134(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BoundsExtensionWhilePlacing;                              // 0x0140(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     PlacementTracesBoundsExtension;                           // 0x014C(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     FloatingTracesBoundsExtension;                            // 0x0158(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     FloatingTracesCenterOffset;                               // 0x0164(0x000C) (Edit, IsPlainOldData)
	float                                              MaxHeightAdjustmentWhilePlacing;                          // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinHeightAdjustmentWhilePlacing;                          // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseMeshCollisionForPlacement;                             // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanPlaceInEnemyFlagArea;                                  // 0x0179(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPlacementAlgorithm                                PlacementAlgorithm;                                       // 0x017A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShowDirectionIndicator;                                   // 0x017B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x017C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableCraftableItem");
		return ptr;
	}

};


// Class ConZ.FortificationCraftableItem
// 0x0040 (0x01C0 - 0x0180)
class UFortificationCraftableItem : public UPlaceableCraftableItem
{
public:
	class UClass*                                      FortificationClass;                                       // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Icon;                                                     // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       Caption;                                                  // 0x0190(0x0018) (Edit)
	struct FText                                       Description;                                              // 0x01A8(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FortificationCraftableItem");
		return ptr;
	}

};


// Class ConZ.BaseBuildingBlockCraftableItem
// 0x0040 (0x01C0 - 0x0180)
class UBaseBuildingBlockCraftableItem : public UPlaceableCraftableItem
{
public:
	class UClass*                                      BaseBlockClass;                                           // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Icon;                                                     // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       Caption;                                                  // 0x0190(0x0018) (Edit)
	struct FText                                       Description;                                              // 0x01A8(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.BaseBuildingBlockCraftableItem");
		return ptr;
	}

};


// Class ConZ.CraftingAvailableItemWidget
// 0x0028 (0x0248 - 0x0220)
class UCraftingAvailableItemWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnClicked;                                                // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               _isSelected;                                              // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               _isOptional;                                              // 0x0231(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EOptionalState                                     _optionalState;                                           // 0x0232(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0233(0x0005) MISSED OFFSET
	class AItem*                                       _item;                                                    // 0x0238(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _clickSound;                                              // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingAvailableItemWidget");
		return ptr;
	}


	void SetOptionalState(EOptionalState State);
	void SetIsSelected(bool isSelected);
	void SetIsOptional(bool isOptional);
	bool IsAvailable();
	void Init(class AItem* Item);
	EOptionalState GetOptionalState();
	bool GetIsSelected();
	bool GetIsOptional();
	void ClickedDelegate__DelegateSignature(class UCraftingAvailableItemWidget* Widget, class AItem* Item);
};


// Class ConZ.CraftingComponentWidget
// 0x0028 (0x0248 - 0x0220)
class UCraftingComponentWidget : public UDesignableUserWidget
{
public:
	class UItemClassWidget*                            ItemWidget;                                               // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               _isTool;                                                  // 0x0228(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0229(0x0007) MISSED OFFSET
	class UClass*                                      _itemClass;                                               // 0x0230(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               _isAvailable;                                             // 0x0238(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0239(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingComponentWidget");
		return ptr;
	}


	void SetSatisfiedAndRequiredCount(int Satisfied, int Required);
	void SetRequiredCount(int count);
	void SetOrderNumber(int orderNumber);
	void SetIsTool(bool IsTool);
	void SetIsOptional(bool isOptional);
	void SetIsAvailable(bool IsAvailable);
	bool GetIsAvailable();
	void CreateTooltip();
};


// Class ConZ.CraftingDatabase
// 0x00C0 (0x00F0 - 0x0030)
class UCraftingDatabase : public UDataAsset
{
public:
	TArray<class UCraftableItem*>                      CraftableItems;                                           // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FString>                             AssetPaths;                                               // 0x0040(0x0010) (Edit, ZeroConstructor)
	class UCraftingItemTag*                            CookableTag;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCraftingItemTag*                            SmokableTag;                                              // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCraftingItemTag*                            OpenItemTag;                                              // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCraftingItemTag*                            LightFireTag;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCraftingItemTag*                            ConservedFoodTag;                                         // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemGroup*                                  IngredientsGroup;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             IngredientsGroupPaths;                                    // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<struct FString>                             IngredientsExcludePaths;                                  // 0x0090(0x0010) (Edit, ZeroConstructor)
	TMap<class UCraftingItemTag*, struct FItemClassesArray> _itemsByTags;                                             // 0x00A0(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingDatabase");
		return ptr;
	}

};


// Class ConZ.CraftingInfoWidget
// 0x00F0 (0x0310 - 0x0220)
class UCraftingInfoWidget : public UDesignableUserWidget
{
public:
	class UInspectedItemWidget*                        ItemWidget;                                               // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  ComponentsGridPanel;                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  CraftingGridPanel;                                        // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ComponentsMinimizableWidget;                              // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 CraftingMinimizableWidget;                                // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      _itemClass;                                               // 0x0248(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0250(0x0050) MISSED OFFSET
	TArray<class UPreviousNextSwitchWidget*>           _switchWidgets;                                           // 0x02A0(0x0010) (ExportObject, ZeroConstructor)
	TWeakObjectPtr<class UPrisonerInventoryComponent>  _inventoryComponent;                                      // 0x02B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FCraftingRecipe                             _craftingRecipe;                                          // 0x02B8(0x0038)
	unsigned char                                      UnknownData01[0x20];                                      // 0x02F0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingInfoWidget");
		return ptr;
	}


	void SwapIngredient(int widgetIndex, int orderIndex);
	void SetCaptionAndDescription(const struct FText& Caption, const struct FText& Description);
	void Init(class AItem* itemCDO);
	void Close();
};


// Class ConZ.CraftingItemTag
// 0x0000 (0x0030 - 0x0030)
class UCraftingItemTag : public UBaseItemTag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingItemTag");
		return ptr;
	}

};


// Class ConZ.CraftingObjective
// 0x0018 (0x0450 - 0x0438)
class ACraftingObjective : public ARequirementObjective
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0438(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.CraftingObjective._targetItems
	unsigned char                                      UnknownData01[0x8];                                       // 0x0448(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingObjective");
		return ptr;
	}

};


// Class ConZ.CraftingPanelWidget
// 0x02A0 (0x04C0 - 0x0220)
class UCraftingPanelWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    RecipeItemClicked;                                        // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UCraftingInfoWidget*                         _craftingInfo;                                            // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _inventoryBox;                                            // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _vicinityBox;                                             // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _toolsAndWeaponsBox;                                      // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _toolsAndWeaponsSubBox1;                                  // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _toolsAndWeaponsSubBox2;                                  // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _toolsAndWeaponsSubBox3;                                  // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _toolsAndWeaponsSubBox4;                                  // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _toolsAndWeaponsSubBox5;                                  // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer1;                             // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer2;                             // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer3;                             // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer4;                             // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer5;                             // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _itemsBox;                                                // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _itemsSubBox1;                                            // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _itemsSubBox2;                                            // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _itemsSubBox3;                                            // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _itemsSubBox4;                                            // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _itemsSubBox5;                                            // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ItemsSubContainer1;                                       // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ItemsSubContainer2;                                       // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ItemsSubContainer3;                                       // 0x02E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ItemsSubContainer4;                                       // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ItemsSubContainer5;                                       // 0x02F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _foodBox;                                                 // 0x02F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _foodSubBox1;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _foodSubBox2;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _foodSubBox3;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _foodSubBox4;                                             // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _foodSubBox5;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 FoodSubContainer1;                                        // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 FoodSubContainer2;                                        // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 FoodSubContainer3;                                        // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 FoodSubContainer4;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 FoodSubContainer5;                                        // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _placeablesBox;                                           // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _placeablesSubBox1;                                       // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _placeablesSubBox2;                                       // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _placeablesSubBox3;                                       // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _placeablesSubBox4;                                       // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _placeablesSubBox5;                                       // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 PlaceablesSubContainer1;                                  // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 PlaceablesSubContainer2;                                  // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 PlaceablesSubContainer3;                                  // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 PlaceablesSubContainer4;                                  // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 PlaceablesSubContainer5;                                  // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _basebuildingBox;                                         // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _basebuildingSubBox1;                                     // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _basebuildingSubBox2;                                     // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _basebuildingSubBox3;                                     // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _basebuildingSubBox4;                                     // 0x03C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _basebuildingSubBox5;                                     // 0x03D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 BaseBuildingSubContainer1;                                // 0x03D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 BaseBuildingSubContainer2;                                // 0x03E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 BaseBuildingSubContainer3;                                // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 BaseBuildingSubContainer4;                                // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 BaseBuildingSubContainer5;                                // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _inventoryScrollBox;                                      // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _vicinityScrollBox;                                       // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _toolsAndWeaponsScrollBox;                                // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _itemsScrollBox;                                          // 0x0418(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _foodScrollBox;                                           // 0x0420(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _placeablesScrollBox;                                     // 0x0428(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   _inventoryScaleBox;                                       // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   _vicinityScaleBox;                                        // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   _toolsAndWeaponsScaleBox;                                 // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   _itemsScaleBox;                                           // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   _foodScaleBox;                                            // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   _placeablesScaleBox;                                      // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UCraftingRecipeWidget>        _selectedRecipeWidget;                                    // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPlacedPlaceableWidget*                      _placedPlaceableWidget;                                   // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0470(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingPanelWidget");
		return ptr;
	}


	void UpdateAvailableComponents();
	void ShowPlaceableCraftingConfirmationForCraftingIndex(int Index);
	void RecipeItemClicked__DelegateSignature(class UCraftableItem* CraftableItem);
	void OnRecipeClicked(class UCraftingRecipeWidget* Widget);
	void OnPlaceableCraftingConfirmationConfirmed(int Index);
	void OnAdditionalIngredientSelected(class UCraftingAvailableItemWidget* Widget, class AItem* Item);
	void HandlePrisonerChange(class APrisoner* Prisoner);
	void Craft();
	bool CanCraft();
};


// Class ConZ.CraftingRecipeWidget
// 0x0050 (0x0270 - 0x0220)
class UCraftingRecipeWidget : public UDesignableUserWidget
{
public:
	class UItemClassWidget*                            ItemWidget;                                               // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                RecipeID;                                                 // 0x0228(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x022C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRecipeSelected;                                         // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               _isGrayedOut;                                             // 0x0240(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0241(0x0007) MISSED OFFSET
	class UImage*                                      _itemImage;                                               // 0x0248(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _additionalText;                                          // 0x0250(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCraftableItem*                              _craftableItem;                                           // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	bool                                               _isExaminable;                                            // 0x0268(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ERecipeAvailabilityState                           _availabilityState;                                       // 0x0269(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x026A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftingRecipeWidget");
		return ptr;
	}


	void SetTooltipFromClass(class UClass* ItemClass);
	void SetTooltipFromCaptionAndDescription(const struct FText& Caption, const struct FText& Description);
	void SetIsSelected(bool isSelected);
	void SetIsGrayedOut(bool isGrayedOut);
	void SetAvailabilityState(ERecipeAvailabilityState State);
	void RecipeSelectedDelegate__DelegateSignature(class UCraftingRecipeWidget* Widget);
	ERecipeAvailabilityState GetAvailabilityState();
};


// Class ConZ.CraftItemAction
// 0x0098 (0x0140 - 0x00A8)
class UCraftItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x00A8(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CraftItemAction");
		return ptr;
	}

};


// Class ConZ.CTFBase
// 0x0030 (0x0358 - 0x0328)
class ACTFBase : public AActor
{
public:
	class USphereComponent*                            SphereComponent;                                          // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstance*>                   TeamMaterials;                                            // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class ACTFGameEvent*                               _gameEvent;                                               // 0x0348(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                _team;                                                    // 0x0350(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _radius;                                                  // 0x0354(0x0004) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CTFBase");
		return ptr;
	}


	void SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_Team();
	void OnRep_Radius();
};


// Class ConZ.CTFFlag
// 0x00B8 (0x03E0 - 0x0328)
class ACTFFlag : public AActor
{
public:
	class USphereComponent*                            SphereComponent;                                          // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      FlagMesh;                                                 // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstance*>                   TeamMaterials;                                            // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FName                                       AttachSocketName;                                         // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ACTFGameEvent*                               _gameEvent;                                               // 0x0350(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                _team;                                                    // 0x0358(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	class APrisoner*                                   _carrier;                                                 // 0x0360(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	float                                              _resetProgress;                                           // 0x0370(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0374(0x000C) MISSED OFFSET
	struct FTransform                                  _baseTransform;                                           // 0x0380(0x0030) (Net, IsPlainOldData)
	struct FTransform                                  _flagTransform;                                           // 0x03B0(0x0030) (Net, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CTFFlag");
		return ptr;
	}


	void SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_Team();
	void OnRep_FlagTransform();
};


// Class ConZ.CTFFlagStand
// 0x0020 (0x0348 - 0x0328)
class ACTFFlagStand : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        Light;                                                    // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FLinearColor                                _lightColor;                                              // 0x0338(0x0010) (Net, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CTFFlagStand");
		return ptr;
	}


	void OnRep_LightColor();
};


// Class ConZ.GameEventBase
// 0x0358 (0x0680 - 0x0328)
class AGameEventBase : public AActor
{
public:
	struct FText                                       EventName;                                                // 0x0328(0x0018) (Edit, BlueprintVisible)
	class UClass*                                      ParticipantStatsClass;                                    // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RoundInfoWidgetClass;                                     // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeamHeaderWidgetClass;                                    // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StatWidgetClass;                                          // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MiniStatWidgetClass;                                      // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TransportClass;                                           // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               TimesUpAnnouncement;                                      // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamWonRoundAnnouncement;                             // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamWonRoundAnnouncement;                              // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RoundDrawAnnouncement;                                    // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamWonEventAnnouncement;                             // 0x0390(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamWonEventAnnouncement;                              // 0x0398(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UAkAudioEvent*                               EventDrawAnnouncement;                                    // 0x03A0(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UAkAudioEvent*                               Time30sAnnouncement;                                      // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               Time15sAnnouncement;                                      // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               Time10sCountdownAnnouncement;                             // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               TensionMusicStart;                                        // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               TensionMusicStop;                                         // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EGameEventState                                    _state;                                                   // 0x03D0(0x0001) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03D1(0x0003) MISSED OFFSET
	int                                                _activeParticipantCount;                                  // 0x03D4(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                _numberOfTeams;                                           // 0x03D8(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	TArray<int>                                        _teamMemberCount;                                         // 0x03E0(0x0010) (Edit, Net, ZeroConstructor, EditConst)
	TArray<int>                                        _teamScores;                                              // 0x03F0(0x0010) (Edit, Net, ZeroConstructor, EditConst)
	TArray<int>                                        _roundWinningTeam;                                        // 0x0400(0x0010) (Edit, Net, ZeroConstructor, EditConst)
	int                                                _round;                                                   // 0x0410(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              _roundTimeLeft;                                           // 0x0414(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _cancelTimeLeft;                                          // 0x0418(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1C];                                      // 0x041C(0x001C) MISSED OFFSET
	class AGameEventLocationMarker*                    _marker;                                                  // 0x0438(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AGameEventBorder*                            _border;                                                  // 0x0440(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AGameEventManager*                           _manager;                                                 // 0x0448(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameEventParticipantInfo>           _participantInfo;                                         // 0x0450(0x0010) (Net, ZeroConstructor)
	struct FGameEventParameters                        _parameters;                                              // 0x0460(0x0188) (Net)
	class UGameEventCardWidget*                        _cardWidget;                                              // 0x05E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGameEventScoreboardWidget*                  _scoreboardWidget;                                        // 0x05F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGameEventScoreboardWidget*                  _miniScoreboardWidget;                                    // 0x05F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<int>                                        _rankings;                                                // 0x0600(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData03[0x40];                                      // 0x0610(0x0040) MISSED OFFSET
	class UAkComponent*                                _lastAnnouncement;                                        // 0x0650(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAkComponent*                                _lastCountdownAnnouncement;                               // 0x0658(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0660(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventBase");
		return ptr;
	}


	void UpdateTeamMemberCount();
	void UpdateRanking(int Index);
	void SetTeamScore(int TeamIndex, float Score);
	void SetParticipantTeam(class APrisoner* Prisoner, int TeamIndex);
	void SetParameters(const struct FGameEventParameters& parameters);
	void SetNumberOfTeams(int Value);
	bool ScheduleEvent();
	void SavePrisonerState(class APrisoner* Prisoner);
	bool SameTeam(class APrisoner* prisonerA, class APrisoner* prisonerB);
	void RestorePrisonerState(class APrisoner* Prisoner);
	void ResetGameEventArea();
	void RegisterParticipant(class APrisoner* Prisoner, int preferredTeam);
	void PresentSpawnScreen(class APrisoner* Prisoner, bool Force);
	void ParticipantExit(class APrisoner* Prisoner);
	void ParticipantEnter(class APrisoner* Prisoner);
	void OnRep_Rankings();
	void OnRep_ParticipantInfo();
	void Multicast_StopMusic(class UAkAudioEvent* StopAudioEvent);
	void Multicast_StopCountdownAnnouncement();
	void Multicast_ShowScoreboardForEveryone();
	void Multicast_ShowEventNotification(EGameEventNotificationType Type, const struct FString& auxString);
	void Multicast_PlayMusic(class UAkAudioEvent* StartAudioEvent);
	void Multicast_PlayCountdownAnnouncement(class UAkAudioEvent* Sound);
	void Multicast_PlayAnnouncementToTeam(int TeamIndex, class UAkAudioEvent* Sound);
	void Multicast_PlayAnnouncementToParticipant(class APrisoner* Prisoner, class UAkAudioEvent* Sound);
	void Multicast_PlayAnnouncementToAllParticipants(class UAkAudioEvent* Sound);
	void Multicast_HideScoreboardForEveryone();
	void KickParticipant(class APrisoner* Prisoner);
	bool IsTeamFull(int TeamIndex);
	bool IsParticipating(class APrisoner* Prisoner);
	void InitEvent(class AGameEventLocationMarker* marker, class AGameEventManager* manager);
	TArray<int> GetWinningTeamsPerRound();
	float GetTeamScore(int TeamIndex);
	int GetTeamMemberCount(int TeamIndex);
	float GetStatusTime();
	struct FRotator GetSpawnRotationForLocation(const struct FVector& Location);
	class UGameEventScoreboardWidget* GetScoreboardWidget();
	float GetRoundTimeLeft();
	void GetPossibleLoadout(class APrisoner* Prisoner, TArray<class UItemSelection*>* primaryWeapons, TArray<class UItemSelection*>* secondaryWeapons, TArray<class UItemSelection*>* tertiaryWeapons, TArray<class UItemSelection*>* outfits, TArray<class UItemSelection*>* support, TArray<class UItemSelection*>* Gear);
	int GetParticipantTeam(class APrisoner* Prisoner);
	struct FVector GetParticipantJoinLocation(class APrisoner* Prisoner);
	TArray<struct FGameEventParticipantInfo> GetParticipantInfo();
	int GetParticipantAtRank(int Rank);
	struct FGameEventParameters GetParameters();
	int GetNumberOfTeams();
	int GetNumberOfParticipants();
	int GetNumberOfActiveParticipants();
	class UGameEventScoreboardWidget* GetMiniScoreboardWidget();
	float GetMaxDurationLeft();
	class AGameEventLocationMarker* GetMarker();
	EGameEventState GetEventState();
	struct FDbIntegerId GetDatabaseEventId();
	struct FDbIntegerId GetCurrentRoundDatabaseId();
	int GetCurrentRound();
	class UGameEventCardWidget* GetCardWidget();
	float GetCancelTimeLeft();
	class AGameEventBorder* GetBorder();
	void ForceParticipantStatsRep(int Index);
	int FindParticipantIndex(class APrisoner* Prisoner);
	void EquipParticipantLoadout(class APrisoner* Prisoner);
	int DeclareWinningTeam();
	void ConvertScoreToFame(class APrisoner* Prisoner);
	void ClearTeamScores();
	struct FVector ChooseSpawnLocation(class APrisoner* Prisoner);
	void CheckParticipatingPrisoners();
	bool CanStart();
	bool CanSchedule();
	bool CanJoin(class APrisoner* Prisoner, int preferredTeam);
	void CancelEvent();
	void CallInParticipant(class APrisoner* Prisoner);
	void AwardParticipant(int Index, const struct FGameEventRewardPoints& reward);
	int AssignParticipantTeam(class APrisoner* Prisoner);
};


// Class ConZ.GameEventParticipantStats
// 0x0020 (0x0048 - 0x0028)
class UGameEventParticipantStats : public UObject
{
public:
	float                                              Score;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                EnemyKills;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                TeamKills;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Deaths;                                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Suicides;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Assists;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Headshots;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventParticipantStats");
		return ptr;
	}

};


// Class ConZ.CTFParticipantStats
// 0x0010 (0x0058 - 0x0048)
class UCTFParticipantStats : public UGameEventParticipantStats
{
public:
	int                                                Pickups;                                                  // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Captures;                                                 // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Returns;                                                  // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CTFParticipantStats");
		return ptr;
	}

};


// Class ConZ.CTFGameEvent
// 0x0128 (0x07A8 - 0x0680)
class ACTFGameEvent : public AGameEventBase
{
public:
	class UClass*                                      FlagClass;                                                // 0x0680(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CaptureBaseClass;                                         // 0x0688(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FlagStandClass;                                           // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  FlagIconTexture;                                          // 0x0698(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  FlagAccentTexture;                                        // 0x06A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  BaseIconTexture;                                          // 0x06A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  BaseAccentTexture;                                        // 0x06B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  EmptyBaseIconTexture;                                     // 0x06B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  EmptyBaseAccentTexture;                                   // 0x06C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TeamColorA;                                               // 0x06C8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                TeamColorB;                                               // 0x06D8(0x0010) (Edit, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamPickedUpFlagAnnouncement;                         // 0x06E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamCapturedFlagAnnouncement;                         // 0x06F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamFlagDroppedAnnouncement;                          // 0x06F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamFlagReturnedAnnouncement;                         // 0x0700(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamPickedUpFlagAnnouncement;                          // 0x0708(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamCapturedFlagAnnouncement;                          // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamFlagDroppedAnnouncement;                           // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamFlagReturnedAnnouncement;                          // 0x0720(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCTFParameters                              _CTFParameters;                                           // 0x0728(0x0030) (Net)
	class ACTFFlag*                                    _flagA;                                                   // 0x0758(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ACTFFlag*                                    _flagB;                                                   // 0x0760(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ACTFBase*                                    _baseA;                                                   // 0x0768(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ACTFBase*                                    _baseB;                                                   // 0x0770(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0778(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CTFGameEvent");
		return ptr;
	}


	void SetCTFParameters(const struct FCTFParameters& Params);
	void OnParticipantDied(class APrisoner* victim, const struct FDamageEvent& DamageEvent, class AController* eventInstigator, class AActor* causer);
	class ACTFFlag* GetFlagB();
	class ACTFFlag* GetFlagA();
	struct FCTFParameters GetCTFParameters();
};


// Class ConZ.GameEventLocationMarker
// 0x01F8 (0x0520 - 0x0328)
class AGameEventLocationMarker : public AActor
{
public:
	struct FText                                       LocationName;                                             // 0x0328(0x0018) (Edit, BlueprintVisible)
	class UTexture2D*                                  LocationImage;                                            // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LocationImageGrayscale;                                   // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               EligibleForRandomPick;                                    // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET
	class UClass*                                      GameEventClass;                                           // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameEventParameters                        GameEventParameters;                                      // 0x0360(0x0188) (Edit, BlueprintVisible)
	class UClass*                                      BorderClass;                                              // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AreaCenterOffset;                                         // 0x04F0(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Radius;                                                   // 0x04FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSpawnArea>                          SpawnAreas;                                               // 0x0500(0x0010) (Edit, ZeroConstructor)
	class USphereComponent*                            Sphere;                                                   // 0x0510(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBillboardComponent*                         Sprite;                                                   // 0x0518(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventLocationMarker");
		return ptr;
	}


	struct FVector GetAreaCenter();
	class AGameEventBase* CreateGameEvent();
	class AGameEventBorder* CreateBorder();
};


// Class ConZ.CTFLocationMarker
// 0x00C0 (0x05E0 - 0x0520)
class ACTFLocationMarker : public AGameEventLocationMarker
{
public:
	struct FCTFParameters                              CTFParameters;                                            // 0x0520(0x0030) (Edit, BlueprintVisible)
	struct FVector                                     CaptureOffsetA;                                           // 0x0550(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     CaptureOffsetB;                                           // 0x055C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              CaptureRadiusA;                                           // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CaptureRadiusB;                                           // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  FlagOffsetA;                                              // 0x0570(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FTransform                                  FlagOffsetB;                                              // 0x05A0(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	class UStaticMeshComponent*                        FlagAPreviewMesh;                                         // 0x05D0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        FlagBPreviewMesh;                                         // 0x05D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CTFLocationMarker");
		return ptr;
	}

};


// Class ConZ.CutObjectAction
// 0x0038 (0x00E0 - 0x00A8)
class UCutObjectAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00A8(0x0028) MISSED OFFSET
	TArray<class AItem*>                               _selectedTools;                                           // 0x00D0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CutObjectAction");
		return ptr;
	}

};


// Class ConZ.CuttingObjective
// 0x0030 (0x0468 - 0x0438)
class ACuttingObjective : public ARequirementObjective
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0438(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.CuttingObjective._targetMeshes
	bool                                               _specificItem;                                            // 0x0448(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0449(0x0007) MISSED OFFSET
	class UClass*                                      _itemToFound;                                             // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _itemAmount;                                              // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x045C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CuttingObjective");
		return ptr;
	}

};


// Class ConZ.CyclosporiasisPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UCyclosporiasisPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CyclosporiasisPoisoning");
		return ptr;
	}

};


// Class ConZ.CystitisDisease
// 0x0028 (0x01D8 - 0x01B0)
class UCystitisDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x01B0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.CystitisDisease");
		return ptr;
	}

};


// Class ConZ.DamageDirectionIndicator
// 0x0048 (0x0070 - 0x0028)
class UDamageDirectionIndicator : public UObject
{
public:
	bool                                               visible;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class UTexture*                                    Texture;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OpacityMultiplier;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultDelayDuration;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultSustainDuration;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultReleaseDuration;                                   // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x004C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DamageDirectionIndicator");
		return ptr;
	}

};


// Class ConZ.DamageOverTimeDealer
// 0x0050 (0x0378 - 0x0328)
class ADamageOverTimeDealer : public AActor
{
public:
	TArray<struct FDamageOverTimeUpdateGroup>          _updateGroups;                                            // 0x0328(0x0010) (Edit, ZeroConstructor)
	int                                                _actorLimitPerTick;                                       // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	float                                              _timeDilation;                                            // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x34];                                      // 0x0344(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DamageOverTimeDealer");
		return ptr;
	}

};


// Class ConZ.TrapItem
// 0x00C8 (0x0930 - 0x0868)
class ATrapItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	float                                              AutoDestroyTimeWhenArmed;                                 // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DestroyAfterTriggered;                                    // 0x0874(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0875(0x0003) MISSED OFFSET
	float                                              DestroyDelay;                                             // 0x0878(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TriggerForwardVector;                                     // 0x087C(0x000C) (Edit, IsPlainOldData)
	float                                              RagdollDuration;                                          // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanBeBurried;                                             // 0x088C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               MustBeArmed;                                              // 0x088D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreRadialDamage;                                       // 0x088E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               HasFixedTrigger;                                          // 0x088F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDamageForTrigger;                                      // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0894(0x000C) MISSED OFFSET
	struct FTransform                                  TriggerVisualTransform;                                   // 0x08A0(0x0030) (Edit, IsPlainOldData)
	float                                              MaxTriggerAngle;                                          // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x08D4(0x0001) MISSED OFFSET
	bool                                               _isDestroyed;                                             // 0x08D5(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x22];                                      // 0x08D6(0x0022) MISSED OFFSET
	bool                                               _isBuried;                                                // 0x08F8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isArmed;                                                 // 0x08F9(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	ETrapTriggerType                                   _currentTrigger;                                          // 0x08FA(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x08FB(0x0005) MISSED OFFSET
	struct FDbIntegerId                                _lastTriggerOwner;                                        // 0x0900(0x0008) (Net)
	float                                              _quality;                                                 // 0x0908(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x090C(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        _burriedMesh;                                             // 0x0910(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialBillboardComponent*                 _spriteMarkerBillboard;                                   // 0x0918(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      _minigameClass;                                           // 0x0920(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _minigameToolTag;                                         // 0x0928(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TrapItem");
		return ptr;
	}


	void OnTriggerEvent(const struct FTriggeredEventData& eventData);
	void OnTrapDestroyTimer();
	void OnRep_LastTriggerOwner();
	void OnRep_IsDestroyed();
	void OnRep_IsBurried();
	void OnRep_IsArmed();
	void OnRep_CurrentTrigger();
	void OnLocalPrisonerSpawned(class APrisoner* Prisoner);
	void OnActorDestroyTimer();
	void NetMulticast_TriggerTrap(const struct FTrapTriggerParams& Params);
	bool IsBuried();
	bool IsArmed();
	void BP_OnTriggered();
	void BP_OnDisarmed();
	void BP_OnArmed();
};


// Class ConZ.DamagingTrapItem
// 0x0010 (0x0940 - 0x0930)
class ADamagingTrapItem : public ATrapItem
{
public:
	float                                              _initialDamageAmount;                                     // 0x0930(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _damagePerSecond;                                         // 0x0934(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _triggerSound;                                            // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DamagingTrapItem");
		return ptr;
	}

};


// Class ConZ.DataSingleton
// 0x05A8 (0x05D0 - 0x0028)
class UDataSingleton : public UObject
{
public:
	TArray<struct FProjectileImpulseMultiplier>        ImpulseMultipliers;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FDamageMultipliers>                  DamageMultipliers;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCanvasIcon                                 CrosshairIconUp;                                          // 0x0048(0x0018) (Edit)
	struct FCanvasIcon                                 CrosshairIconDown;                                        // 0x0060(0x0018) (Edit)
	struct FCanvasIcon                                 CrosshairIconLeft;                                        // 0x0078(0x0018) (Edit)
	struct FCanvasIcon                                 CrosshairIconRight;                                       // 0x0090(0x0018) (Edit)
	struct FCanvasIcon                                 CrosshairIconCenter;                                      // 0x00A8(0x0018) (Edit)
	struct FCanvasIcon                                 CrosshairBlockedIcon;                                     // 0x00C0(0x0018) (Edit)
	struct FCanvasIcon                                 BowSpreadCircle;                                          // 0x00D8(0x0018) (Edit)
	class UTexture2D*                                  SingleFireIcon;                                           // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AutoFireIcon;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpreadBase;                                         // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FWeaponSpreadData                           WeaponSpreadData[0x9];                                    // 0x0104(0x0040) (Edit)
	float                                              BowArrowDeviationDegreesAngleByStep;                      // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FWeaponViewKickData                         WeaponViewKickData[0x9];                                  // 0x0348(0x0018) (Edit)
	struct FWeaponMalfunctionChances                   WeaponMalfunctionChances;                                 // 0x0420(0x0028) (Edit)
	float                                              UpperBoundStaminaAmountToDrain;                           // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowerBoundWeaponWeightForStaminaDrain;                    // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpperBoundWeaponWeightForStaminaDrain;                    // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0454(0x0004) MISSED OFFSET
	struct FCanvasIcon                                 InteractIcon;                                             // 0x0458(0x0018) (Edit)
	struct FCanvasIcon                                 BondageIcon;                                              // 0x0470(0x0018) (Edit)
	class UInputDataAsset*                             DefaultInputData;                                         // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDerivedWidgetsData*                         Widgets;                                                  // 0x0490(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PlaceablePrimaryMatValid;                                 // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PlaceablePrimaryMatInvalid;                               // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PlaceablePrimaryMatFriendlyFlag;                          // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PlaceableOutlineMat;                                      // 0x04B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PlaceableDepthMat;                                        // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PlaceableMaterialRadiusSphere;                            // 0x04C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          WidgetMaterial;                                           // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBaseItemTag*                                DivingMaskItemTag;                                        // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBaseItemTag*                                ToolBoxItemTag;                                           // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBaseItemTag*                                MushroomItemTag;                                          // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBaseItemTag*                                AlcoholItemTag;                                           // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBaseItemTag*                                SoapItemTag;                                              // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AnimalSkinItemClass;                                      // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTrapData*                                   TrapData;                                                 // 0x0500(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0508(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.DataSingleton.AssetsHiddenFromAdminCommands
	class UMissionDataGroup*                           MissonDataGroup;                                          // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogueData*                               DialogueData;                                             // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UNetworkDataIdAsset*                         NetworkDataIdAsset;                                       // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWashClothesData*                            WashClothesData;                                          // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBuryData*                                   BuryData;                                                 // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UEmblemData*                                 SquadEmblemData;                                          // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 VoiceSoundClass;                                          // 0x0588(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ItemTetrisMaterial;                                       // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalSurfacesEffectsData*                PhysicalSurfaceEffectsData;                               // 0x0598(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ChestLockedIcon;                                          // 0x05A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ChestUnlockedIcon;                                        // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ChestLockingSound;                                        // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noiseLevelValues[0x6];                                   // 0x05B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DataSingleton");
		return ptr;
	}

};


// Class ConZ.DbConnection
// 0x0028 (0x0050 - 0x0028)
class UDbConnection : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DbConnection");
		return ptr;
	}


	bool Open(EDbConnectionOpenMode Mode);
	bool IsOpen();
	EDbConnectionOpenMode GetOpenMode();
	bool Close();
};


// Class ConZ.DeadlyNightshadePoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UDeadlyNightshadePoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DeadlyNightshadePoisoning");
		return ptr;
	}

};


// Class ConZ.DeathmatchParticipantStats
// 0x0010 (0x0058 - 0x0048)
class UDeathmatchParticipantStats : public UGameEventParticipantStats
{
public:
	float                                              LongestHeadshot;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                MeleeKills;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              LongestLife;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DeathmatchParticipantStats");
		return ptr;
	}

};


// Class ConZ.DeathmatchGameEvent
// 0x0020 (0x06A0 - 0x0680)
class ADeathmatchGameEvent : public AGameEventBase
{
public:
	struct FDeathmatchParameters                       _deathmatchParameters;                                    // 0x0680(0x0014) (Net)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0694(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DeathmatchGameEvent");
		return ptr;
	}


	void SetDeathmatchParameters(const struct FDeathmatchParameters& Params);
	void RestrictGameEventArea();
	struct FDeathmatchParameters GetDeathmatchParameters();
};


// Class ConZ.DeathmatchLocationMarker
// 0x0028 (0x0548 - 0x0520)
class ADeathmatchLocationMarker : public AGameEventLocationMarker
{
public:
	struct FDeathmatchParameters                       DeathmatchParameters;                                     // 0x0520(0x0014) (Edit, BlueprintVisible)
	struct FVector                                     FocusOffset;                                              // 0x0534(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              MinimalRadius;                                            // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0544(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DeathmatchLocationMarker");
		return ptr;
	}

};


// Class ConZ.Decayable
// 0x0000 (0x0028 - 0x0028)
class UDecayable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Decayable");
		return ptr;
	}


	float GetDamageOverTimeUpdateFrequency();
	void ApplyDamageOverTime(float DeltaTime);
};


// Class ConZ.DedicatedServerRequest
// 0x00C0 (0x00E8 - 0x0028)
class UDedicatedServerRequest : public UObject
{
public:
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0028(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DedicatedServerRequest");
		return ptr;
	}

};


// Class ConZ.DedicatedServerResponse
// 0x00A8 (0x00D0 - 0x0028)
class UDedicatedServerResponse : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET
	class UDbConnection*                               _dbConnection;                                            // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0060(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DedicatedServerResponse");
		return ptr;
	}

};


// Class ConZ.Deer
// 0x0050 (0x0B30 - 0x0AE0)
class ADeer : public AAnimal
{
public:
	float                                              HindBaseScale;                                            // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HindScaleVariance;                                        // 0x0AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMale;                                                    // 0x0AE8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0AE9(0x0007) MISSED OFFSET
	class USkeletalMesh*                               SkeletalMeshes[0x2];                                      // 0x0AF0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 AntlerMeshes[0x4];                                        // 0x0B00(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        Antlers;                                                  // 0x0B20(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	uint32_t                                           _hartHind;                                                // 0x0B28(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0B2C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Deer");
		return ptr;
	}


	void OnRep_HartHind();
};


// Class ConZ.Deer2
// 0x0060 (0x0CC0 - 0x0C60)
class ADeer2 : public AComplexAnimal2
{
public:
	float                                              HartBaseScale;                                            // 0x0C60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HartScaleVariance;                                        // 0x0C64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HindBaseScale;                                            // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HindScaleVariance;                                        // 0x0C6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMale;                                                    // 0x0C70(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0C71(0x0007) MISSED OFFSET
	class USkeletalMesh*                               SkeletalMeshes[0x2];                                      // 0x0C78(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 AntlerMeshes[0x4];                                        // 0x0C88(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        Antlers;                                                  // 0x0CA8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	uint32_t                                           _hartHind;                                                // 0x0CB0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0CB4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Deer2");
		return ptr;
	}


	void OnRep_HartHind();
};


// Class ConZ.DeerAIController
// 0x0000 (0x04C8 - 0x04C8)
class ADeerAIController : public AAnimalAIController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DeerAIController");
		return ptr;
	}

};


// Class ConZ.DefusingCuttingToolItemTag
// 0x0010 (0x0040 - 0x0030)
class UDefusingCuttingToolItemTag : public UBaseItemTag
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Montage;                                                  // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DefusingCuttingToolItemTag");
		return ptr;
	}

};


// Class ConZ.DehydrationSickness
// 0x0008 (0x01B8 - 0x01B0)
class UDehydrationSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DehydrationSickness");
		return ptr;
	}

};


// Class ConZ.DexteritySkill
// 0x0000 (0x00A0 - 0x00A0)
class UDexteritySkill : public USkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DexteritySkill");
		return ptr;
	}

};


// Class ConZ.DemolitionSkill
// 0x00C8 (0x0168 - 0x00A0)
class UDemolitionSkill : public UDexteritySkill
{
public:
	struct FDemolitionSkillParametersPerSkillLevel     NoSkillParameters;                                        // 0x00A0(0x0028) (Edit)
	struct FDemolitionSkillParametersPerSkillLevel     BasicSkillParameters;                                     // 0x00C8(0x0028) (Edit)
	struct FDemolitionSkillParametersPerSkillLevel     MediumSkillParameters;                                    // 0x00F0(0x0028) (Edit)
	struct FDemolitionSkillParametersPerSkillLevel     AdvancedSkillParameters;                                  // 0x0118(0x0028) (Edit)
	struct FDemolitionSkillParametersPerSkillLevel     AboveAdvancedSkillParameters;                             // 0x0140(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DemolitionSkill");
		return ptr;
	}

};


// Class ConZ.DerivedWidgetsData
// 0x0268 (0x0298 - 0x0030)
class UDerivedWidgetsData : public UDataAsset
{
public:
	class UClass*                                      CraftingPanel;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingInfo;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingSectionContainer;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftableItem;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingIngredient;                                       // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingPossibleItem;                                     // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StripedFiller;                                            // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AvailableItem;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WorldCraftingMarker;                                      // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LoadingScreen;                                            // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InteractionWidgetClass;                                   // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InteractionContainerWidgetClass;                          // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemWidgetClass;                                          // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventoryWidgetClass;                                     // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventorySlotWidgetClass;                                 // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WarningWidgetClass;                                       // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HudWidgetClass;                                           // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LoadingWidgetClass;                                       // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LoadingIconWidgetClass;                                   // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpawnScreenWidgetClass;                                   // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WaypointScreenWidgetClass;                                // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HoverPanelWidgetClass;                                    // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActionProgressWidgetClass;                                // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemSelectionWidgetClass;                                 // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ExamineWidgetClass;                                       // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HandsInventoryWidgetClass;                                // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GenericItemInventoryWidgetClass;                          // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventoryContainersWidgetClass;                           // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CombinedInventoryWidgetClass;                             // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeamInvitationWidgetClass;                                // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingInfoWidgetClass;                                  // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingComponentWidgetClass;                             // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraftingRecipeWidgetClass;                                // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      EmptySlotWidgetClass;                                     // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeamInfoWidgetClass;                                      // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeammateNameWidgetClass;                                  // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PreviousNextSwitchWidgetClass;                            // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VicinityItemContainerWidgetClass;                         // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      QuickAccessItemWidget;                                    // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ChangeTextWidgetClass;                                    // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemStatusWidgetClass;                                    // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HealthWidgetClass;                                        // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GameEventPanelWidgetClass;                                // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GameEventCardWidgetClass;                                 // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GameEventScoreboardWidgetClass;                           // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GameEventMiniScoreboardWidgetClass;                       // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CircularMenuWidgetClass;                                  // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CircularMenuSegmentWidgetClass;                           // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LockpickingWidgetClass;                                   // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DoorUpgradeWidgetClass;                                   // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      UpgradeWidgetClass;                                       // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventoryContainerWidget2Test;                            // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventoryItemWidget2Test;                                 // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemInventoryWidget2;                                     // 0x01D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventoryPanelSideLayerWidget;                            // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<EWidgetType, class UClass*>                   Widgets;                                                  // 0x01E8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      ObjectivesWidgetClass;                                    // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionPromptClass;                                       // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionResultClass;                                       // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionItemClass;                                         // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ObjectiveItemClass;                                       // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionRewardClass;                                       // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RewardItemWidgetClass;                                    // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StatisticsListRow;                                        // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FTooltipPanelData>                   ItemTooltipPanels;                                        // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      MalfunctionsContainerClass;                               // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlaceableElementWidgetClass;                              // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DerivedWidgetsData");
		return ptr;
	}

};


// Class ConZ.DialogueContainerWidget
// 0x0020 (0x0228 - 0x0208)
class UDialogueContainerWidget : public UUserWidget
{
public:
	class USubtitleWidget*                             _subtitleWidget;                                          // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _avatarImageOverlay;                                      // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _actionText;                                              // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DialogueContainerWidget");
		return ptr;
	}


	void StartAvatarAnimation(EDialogAnimationState AnimationState);
	class UWidgetAnimation* GetShowAvatarAnimation();
	class UWidgetAnimation* GetHideAvatarAnimation();
};


// Class ConZ.DialogueData
// 0x0050 (0x0080 - 0x0030)
class UDialogueData : public UDataAsset
{
public:
	TMap<EDialogEvent, struct FDialogInfoContainer>    Dialogs;                                                  // 0x0030(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DialogueData");
		return ptr;
	}

};


// Class ConZ.DiarrheaSickness
// 0x0018 (0x01C8 - 0x01B0)
class UDiarrheaSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x01B0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DiarrheaSickness");
		return ptr;
	}

};


// Class ConZ.DigestionItem
// 0x0168 (0x0190 - 0x0028)
class UDigestionItem : public UObject
{
public:
	unsigned char                                      UnknownData00[0x168];                                     // 0x0028(0x0168) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DigestionItem");
		return ptr;
	}


	float GetWeight();
	float GetVolume();
	bool GetShouldProcess();
	float GetRemainingWeight();
	float GetRemainingWater();
	float GetRemainingVolume();
	int GetID();
	struct FString GetCaption();
};


// Class ConZ.DistantLandscape
// 0x0018 (0x0340 - 0x0328)
class ADistantLandscape : public AActor
{
public:
	TArray<struct FDistantLevel>                       AllLevels;                                                // 0x0328(0x0010) (Edit, ZeroConstructor)
	float                                              UpdateInterval;                                           // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DistantLandscape");
		return ptr;
	}

};


// Class ConZ.PriceCategory
// 0x0008 (0x0038 - 0x0030)
class UPriceCategory : public UDataAsset
{
public:
	float                                              Price;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PriceCategory");
		return ptr;
	}

};


// Class ConZ.Door
// 0x0120 (0x0448 - 0x0328)
class ADoor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	struct FName                                       ControlName;                                              // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsElectric;                                               // 0x0340(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0341(0x0003) MISSED OFFSET
	float                                              PowerConsumption;                                         // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              Mesh;                                                     // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnOpened;                                                 // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	class USceneComponent*                             _rootComponent;                                           // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0370(0x0001) MISSED OFFSET
	bool                                               CanOpenOnBothSides;                                       // 0x0371(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0372(0x0002) MISSED OFFSET
	float                                              _health;                                                  // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _breakingImpulse;                                         // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _openingDuration;                                         // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               _canOpen;                                                 // 0x0380(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0381(0x0007) MISSED OFFSET
	class UAkAudioEvent*                               _openingSoundCue;                                         // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _openedSoundCue;                                          // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _closingSoundCue;                                         // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _closedSoundCue;                                          // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _noiseLoudness;                                           // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               _isJammed;                                                // 0x03AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	float                                              _jammedOpenPercent;                                       // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x14];                                      // 0x03B4(0x0014) MISSED OFFSET
	struct FString                                     _lockPassword;                                            // 0x03C8(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData08[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET
	EDoorStateFlags                                    _stateFlags;                                              // 0x03E0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x03E1(0x0007) MISSED OFFSET
	class UPriceCategory*                              _priceCategory;                                           // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              _locks;                                                   // 0x03F0(0x0010) (Edit, Net, ZeroConstructor)
	struct FDbIntegerId                                _owningUserProfileId;                                     // 0x0400(0x0008) (Net)
	class UDoorUpgradeWidget*                          _upgradeWidget;                                           // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData10[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	struct FDoorRepData                                _doorRepData;                                             // 0x0418(0x0020)
	unsigned char                                      UnknownData11[0x10];                                      // 0x0438(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Door");
		return ptr;
	}


	void OnRep_StateFlags(EDoorStateFlags Previous);
	void OnRep_OwningUserProfileId();
	void OnRep_Locks();
	void OnRep_FractureLocation();
	void OnOpened__DelegateSignature();
	void OnAudioStopped();
	bool IsOpen();
	bool IsLocked();
	bool HasPower();
	void ChangeOpenState(bool shouldOpen);
};


// Class ConZ.UpgradeWidget
// 0x0050 (0x0270 - 0x0220)
class UUpgradeWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      _upgradeClass;                                            // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      _itemIcon;                                                // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _backgroundImage;                                         // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _priceText;                                               // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                _regularColour;                                           // 0x0240(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _unavailableColour;                                       // 0x0250(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _availableColour;                                         // 0x0260(0x0010) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UpgradeWidget");
		return ptr;
	}

};


// Class ConZ.UpgradeSlotWidget
// 0x0078 (0x0298 - 0x0220)
class UUpgradeSlotWidget : public UDesignableUserWidget
{
public:
	class UVerticalBox*                                _buyableUpgradesBox;                                      // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _itemIcon;                                                // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _backgroundImage;                                         // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _addImage;                                                // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                _regularColour;                                           // 0x0240(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _dropUnavailableColour;                                   // 0x0250(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _dropAvailableColour;                                     // 0x0260(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0270(0x0008) MISSED OFFSET
	TArray<class UBaseItemTag*>                        _acceptedTags;                                            // 0x0278(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              _buyableUpgrades;                                         // 0x0288(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UpgradeSlotWidget");
		return ptr;
	}

};


// Class ConZ.DoorUpgradeWidget
// 0x0008 (0x02C0 - 0x02B8)
class UDoorUpgradeWidget : public UWaypointWidget
{
public:
	class ADoor*                                       _door;                                                    // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoorUpgradeWidget");
		return ptr;
	}

};


// Class ConZ.DoorVirtualizationManager
// 0x0120 (0x0448 - 0x0328)
class ADoorVirtualizationManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x120];                                     // 0x0328(0x0120) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoorVirtualizationManager");
		return ptr;
	}

};


// Class ConZ.DoubleDoor
// 0x0020 (0x0468 - 0x0448)
class ADoubleDoor : public ADoor
{
public:
	class UMeshComponent*                              Mesh1;                                                    // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              _health1;                                                 // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0454(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoubleDoor");
		return ptr;
	}


	void OnRep_FractureLocation1();
};


// Class ConZ.DoubleRegularDoorStatic
// 0x0030 (0x0498 - 0x0468)
class ADoubleRegularDoorStatic : public ADoubleDoor
{
public:
	struct FRotator                                    _openRotation0;                                           // 0x0468(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _openRotation1;                                           // 0x0474(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _closedRotation0;                                         // 0x0480(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _closedRotation1;                                         // 0x048C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoubleRegularDoorStatic");
		return ptr;
	}

};


// Class ConZ.DoubleRegularDoorDestructible
// 0x0030 (0x0498 - 0x0468)
class ADoubleRegularDoorDestructible : public ADoubleDoor
{
public:
	struct FRotator                                    _openRotation0;                                           // 0x0468(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _openRotation1;                                           // 0x0474(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _closedRotation0;                                         // 0x0480(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _closedRotation1;                                         // 0x048C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoubleRegularDoorDestructible");
		return ptr;
	}

};


// Class ConZ.DoubleSlidingDoorStatic
// 0x0020 (0x0488 - 0x0468)
class ADoubleSlidingDoorStatic : public ADoubleDoor
{
public:
	class USceneComponent*                             ClosedPositionComponent0;                                 // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ClosedPositionComponent1;                                 // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             OpenPositionComponent0;                                   // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             OpenPositionComponent1;                                   // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoubleSlidingDoorStatic");
		return ptr;
	}

};


// Class ConZ.DoubleSlidingDoorDestructible
// 0x0020 (0x0488 - 0x0468)
class ADoubleSlidingDoorDestructible : public ADoubleDoor
{
public:
	class USceneComponent*                             ClosedPositionComponent0;                                 // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ClosedPositionComponent1;                                 // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             OpenPositionComponent0;                                   // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             OpenPositionComponent1;                                   // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DoubleSlidingDoorDestructible");
		return ptr;
	}

};


// Class ConZ.FoodItem
// 0x0140 (0x09A8 - 0x0868)
class AFoodItem : public AItem
{
public:
	float                                              Volume;                                                   // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Energy;                                                   // 0x086C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Water;                                                    // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EatingTime;                                               // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EDigestionGroup                                    DigestionGroup;                                           // 0x0878(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0879(0x0003) MISSED OFFSET
	float                                              Fat;                                                      // 0x087C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SaturatedFat;                                             // 0x0880(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Sodium;                                                   // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Carbs;                                                    // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Fiber;                                                    // 0x088C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Sugar;                                                    // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Proteins;                                                 // 0x0894(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Alcohol;                                                  // 0x0898(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_A;                                                // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B1;                                               // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B2;                                               // 0x08A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B3;                                               // 0x08A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B4;                                               // 0x08AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B5;                                               // 0x08B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B6;                                               // 0x08B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B9;                                               // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_B12;                                              // 0x08BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_C;                                                // 0x08C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_D;                                                // 0x08C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_E;                                                // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Vitamin_K;                                                // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Calcium;                                                  // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Iron;                                                     // 0x08D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Magnesium;                                                // 0x08D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Phosphorus;                                               // 0x08DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Potassium;                                                // 0x08E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Zinc;                                                     // 0x08E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Copper;                                                   // 0x08E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Manganese;                                                // 0x08EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Selenium;                                                 // 0x08F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Cookable;                                                 // 0x08F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x08F5(0x0003) MISSED OFFSET
	float                                              CookingTime;                                              // 0x08F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinCookingTemperature;                                    // 0x08FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxCookingTemperature;                                    // 0x0900(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinCookingSpeed;                                          // 0x0904(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxCookingSpeed;                                          // 0x0908(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThermalConductivityFactor;                                // 0x090C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              QualitySensitivityFactor;                                 // 0x0910(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FreezingTemperature;                                      // 0x0914(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RoomTemperature;                                          // 0x0918(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShelfLife;                                                // 0x091C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpoilageRateCooked;                                       // 0x0920(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpoilageRateFrozen;                                       // 0x0924(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsConsumable;                                             // 0x0928(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanCheckTaste;                                            // 0x0929(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x092A(0x0006) MISSED OFFSET
	class UParticleSystemComponent*                    SteamComponent;                                           // 0x0930(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             SteamParticles;                                           // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    SmokeComponent;                                           // 0x0940(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             SmokeParticles;                                           // 0x0948(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 ItemOpenedMesh;                                           // 0x0950(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 ItemEmptyMesh;                                            // 0x0958(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartEatingAudioEvent;                                    // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopEatingAudioEvent;                                     // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartCookingAudioEvent;                                   // 0x0970(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopCookingAudioEvent;                                    // 0x0978(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _caloriesBonus;                                           // 0x0980(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _catchSicknessModifier;                                   // 0x0984(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _itemOpened;                                              // 0x0988(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0989(0x0003) MISSED OFFSET
	float                                              _temperature;                                             // 0x098C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _environmentTemperature;                                  // 0x0990(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isCooking;                                               // 0x0994(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0995(0x0003) MISSED OFFSET
	float                                              _cookedAmount;                                            // 0x0998(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x099C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FoodItem");
		return ptr;
	}


	void OnRep_Temperature();
	void OnRep_ItemOpened();
	void OnRep_IsCooking();
	void OnAudioComponentExpired();
	bool IsCooking();
	float GetVolume();
	float GetThermalConductivityFactor();
	float GetTemperature();
	float GetEnvironmentTemperature();
	float GetCookingAmount();
};


// Class ConZ.DrinkItem
// 0x0008 (0x09B0 - 0x09A8)
class ADrinkItem : public AFoodItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x09A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DrinkItem");
		return ptr;
	}

};


// Class ConZ.DrinkWaterAssetData
// 0x0018 (0x0048 - 0x0030)
class UDrinkWaterAssetData : public UInteractionAssetData
{
public:
	float                                              QuantityPerDrink;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              salinity;                                                 // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartDrinkingAudioEvent;                                  // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopDrinkingAudioEvent;                                   // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DrinkWaterAssetData");
		return ptr;
	}

};


// Class ConZ.DrivingSkill
// 0x0348 (0x03E8 - 0x00A0)
class UDrivingSkill : public UDexteritySkill
{
public:
	struct FDrivingSkillExperienceAwards               NoSkillExperienceAwards;                                  // 0x00A0(0x0008) (Edit)
	struct FDrivingSkillExperienceAwards               BasicSkillExperienceAwards;                               // 0x00A8(0x0008) (Edit)
	struct FDrivingSkillExperienceAwards               MediumSkillExperienceAwards;                              // 0x00B0(0x0008) (Edit)
	struct FDrivingSkillExperienceAwards               AdvancedSkillExperienceAwards;                            // 0x00B8(0x0008) (Edit)
	struct FDrivingSkillExperienceAwards               AboveAdvancedSkillExperienceAwards;                       // 0x00C0(0x0008) (Edit)
	struct FDrivingSkillParametersPerSkillLevel        NoSkillParameters;                                        // 0x00C8(0x00A0) (Edit)
	struct FDrivingSkillParametersPerSkillLevel        BasicSkillParameters;                                     // 0x0168(0x00A0) (Edit)
	struct FDrivingSkillParametersPerSkillLevel        MediumSkillParameters;                                    // 0x0208(0x00A0) (Edit)
	struct FDrivingSkillParametersPerSkillLevel        AdvancedSkillParameters;                                  // 0x02A8(0x00A0) (Edit)
	struct FDrivingSkillParametersPerSkillLevel        AboveAdvancedSkillParameters;                             // 0x0348(0x00A0) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DrivingSkill");
		return ptr;
	}

};


// Class ConZ.Drone
// 0x0220 (0x0B50 - 0x0930)
class ADrone : public AConZCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0930(0x0008) MISSED OFFSET
	TArray<float>                                      SpeedSteps;                                               // 0x0938(0x0010) (Edit, ZeroConstructor)
	float                                              MovementInertiaPlayer;                                    // 0x0948(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementInertiaAI;                                        // 0x094C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementRotationSpeedExpFactor;                           // 0x0950(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineParticlesChangeSpeedExpFactor;                      // 0x0954(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 EngineVolumeFromSpeed;                                    // 0x0958(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementBreathingInterval;                                // 0x0960(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementBreathingIntensity;                               // 0x0964(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScanBeamOpeningSpeed;                                     // 0x0968(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScanBeamScanningSpeed;                                    // 0x096C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScanFaceHalfHeight;                                       // 0x0970(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0974(0x0004) MISSED OFFSET
	class UParticleSystem*                             SelfDestructParticles;                                    // 0x0978(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EngineAudioEvent;                                         // 0x0980(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EngineStopAudioEvent;                                     // 0x0988(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SelfDestructAudioEvent;                                   // 0x0990(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0998(0x0030) MISSED OFFSET
	class UMaterialInterface*                          _nightVisionMaterial;                                     // 0x09C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      _currentSpeedStep;                                        // 0x09D0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x09D1(0x0003) MISSED OFFSET
	float                                              _movementInertia;                                         // 0x09D4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xA0];                                      // 0x09D8(0x00A0) MISSED OFFSET
	float                                              _health;                                                  // 0x0A78(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1D];                                      // 0x0A7C(0x001D) MISSED OFFSET
	bool                                               _silentMode;                                              // 0x0A99(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x9A];                                      // 0x0A9A(0x009A) MISSED OFFSET
	float                                              _interactionDistance;                                     // 0x0B34(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UActionProgressWidget*                       _progressWidget;                                          // 0x0B38(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0B40(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Drone");
		return ptr;
	}


	void Server_TeleportToNextOrPreviousPlayer(bool Next);
	void Server_SetSilentMode(bool Value);
	void Server_SetCurrentSpeedStep(int step);
	void Server_OpenDoor(class ADoor* Door);
	void Server_DestroyBaseElement(const struct FVector& Location);
	void Server_CloseDoor(class ADoor* Door);
	void SelfDestruct();
	void OnSilentModeChanged_BP(bool Value);
	void OnRep_SilentMode();
	void OnRep_CurrentSpeedStep();
	void OnProgressWidgetFinished();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void NetMulticast_SpawnDestroyedEffects();
	void NetMulticast_PlaySoundOnClients(EDroneSound SoundToPlay, bool Force);
};


// Class ConZ.DroneAIController
// 0x0358 (0x0790 - 0x0438)
class ADroneAIController : public AAIController
{
public:
	float                                              FollowingDuration;                                        // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FollowingHeight;                                          // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FollowingDistance;                                        // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceForFollowingAtHeight;                          // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProximityAccelScale;                                      // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProximityZPriority;                                       // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinimumNavigationProximity;                               // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DroneCruisingHeight;                                      // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x338];                                     // 0x0458(0x0338) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DroneAIController");
		return ptr;
	}


	void SensingComponent_OnHearNoise(class APawn* NoiseInstigator, const struct FVector& Location, float Volume);
	void NavigationResultHandler(const struct FDoNNavigationQueryData& QueryData);
	void FollowCharacter(class ACharacter* characterToFollow);
	void FindWayTo(const struct FVector& Destination);
	void DynamicCollisionListener(const struct FDonNavigationDynamicCollisionPayload& CollisionData);
};


// Class ConZ.DroneCameraActor
// 0x0000 (0x0880 - 0x0880)
class ADroneCameraActor : public ACameraActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DroneCameraActor");
		return ptr;
	}

};


// Class ConZ.DroneSoundComponent
// 0x0048 (0x0160 - 0x0118)
class UDroneSoundComponent : public UCharacterSoundComponent
{
public:
	class USoundCue*                                   IdleSound;                                                // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               IdleAudioEvent;                                           // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AngrySound;                                               // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AngryAudioEvent;                                          // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AttackSound;                                              // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AttackAudioEvent;                                         // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   KillSound;                                                // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               KillAudioEvent;                                           // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSilenceTimeout;                                        // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSilenceTimeout;                                        // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DroneSoundComponent");
		return ptr;
	}

};


// Class ConZ.DroneTargetData
// 0x0008 (0x0030 - 0x0028)
class UDroneTargetData : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DroneTargetData");
		return ptr;
	}

};


// Class ConZ.DropdownMenuSelectionWidget
// 0x0038 (0x0240 - 0x0208)
class UDropdownMenuSelectionWidget : public UUserWidget
{
public:
	struct FScriptDelegate                             OnClicked;                                                // 0x0208(0x0014) (Edit, ZeroConstructor, InstancedReference)
	struct FScriptDelegate                             OnUpdated;                                                // 0x0218(0x0014) (Edit, ZeroConstructor, InstancedReference)
	bool                                               selected;                                                 // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	int                                                SelectionIndex;                                           // 0x022C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               option;                                                   // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class UDropdownMenuWidget*                         _dropdownMenu;                                            // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropdownMenuSelectionWidget");
		return ptr;
	}


	void Update();
	void SetMenu(class UDropdownMenuWidget* DropdownMenu);
	void SelectRandom();
	void Select(int Index);
	void OnDropdownSelectionDelegate__DelegateSignature(class UDropdownMenuSelectionWidget* Widget);
	class UDropdownMenuWidget* GetMenu();
	void Click();
};


// Class ConZ.DropdownMenuWidget
// 0x0020 (0x0228 - 0x0208)
class UDropdownMenuWidget : public UUserWidget
{
public:
	struct FScriptDelegate                             OnUpdate;                                                 // 0x0208(0x0014) (Edit, ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET
	class UNamedSlot*                                  _panelSlot;                                               // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropdownMenuWidget");
		return ptr;
	}


	void Update();
	void SetSelectedElementIndex(int Index);
	void Open();
	void OnDropdownMenuUpdate__DelegateSignature();
	bool IsOpen();
	void InitOptions();
	int GetSelectedElementIndex();
	class UDropdownMenuSelectionWidget* GetSelectedElement();
	int GetOptionCount();
	void Close(bool collapse);
};


// Class ConZ.DropZoneDroppable
// 0x0060 (0x0388 - 0x0328)
class ADropZoneDroppable : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAkAudioEvent*                               LandSound;                                                // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ADropZoneGameEvent*                          _gameEvent;                                               // 0x0338(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	class UParticleSystemComponent*                    _flareParticles0;                                         // 0x0348(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _flareParticles1;                                         // 0x0350(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _flareParticles2;                                         // 0x0358(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	struct FVector                                     _endLocation;                                             // 0x0368(0x000C) (Net, IsPlainOldData)
	float                                              _fallingSpeed;                                            // 0x0374(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _flareParticlesEnabled;                                   // 0x0378(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0379(0x0003) MISSED OFFSET
	int                                                _flareParticlesTeam;                                      // 0x037C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0380(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneDroppable");
		return ptr;
	}


	void SetGameEvent(class ADropZoneGameEvent* gameEvent);
	void OnRep_FlareParticlesTeam();
	void OnRep_FlareParticlesEnabled();
	class ADropZoneGameEvent* GetGameEvent();
};


// Class ConZ.DropZoneCargo
// 0x0010 (0x0398 - 0x0388)
class ADropZoneCargo : public ADropZoneDroppable
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class UChildActorComponent*                        Slot;                                                     // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneCargo");
		return ptr;
	}

};


// Class ConZ.DropZoneCrate
// 0x0010 (0x0398 - 0x0388)
class ADropZoneCrate : public ADropZoneDroppable
{
public:
	class UClass*                                      KeyClass;                                                 // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _hasKey;                                                  // 0x0390(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneCrate");
		return ptr;
	}


	void OnRep_HasKey();
};


// Class ConZ.DropZoneEquipmentTable
// 0x0018 (0x0340 - 0x0328)
class ADropZoneEquipmentTable : public AActor
{
public:
	TArray<class AItem*>                               _trackedItems;                                            // 0x0328(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0338(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneEquipmentTable");
		return ptr;
	}


	void UntrackItem(class AItem* Item);
	void TrackItem(class AItem* Item);
	void OnTrackedItemDestroyed(class AActor* Actor);
	void EndCleaningItems();
	void BeginCleaningItems();
};


// Class ConZ.DropZoneParticipantStats
// 0x0008 (0x0050 - 0x0048)
class UDropZoneParticipantStats : public UGameEventParticipantStats
{
public:
	int                                                Activations;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneParticipantStats");
		return ptr;
	}

};


// Class ConZ.DropZoneGameEvent
// 0x0158 (0x07D8 - 0x0680)
class ADropZoneGameEvent : public AGameEventBase
{
public:
	class UClass*                                      TableAClass;                                              // 0x0680(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TableBClass;                                              // 0x0688(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CrateClass;                                               // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CargoClass;                                               // 0x0698(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               IntroAnnouncement;                                        // 0x06A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               LocateTheKeyAnnouncement;                                 // 0x06A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamFoundKeyAnnouncement;                             // 0x06B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamUnlockedAnnouncement;                             // 0x06B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               BlueTeamStolenAnnouncement;                               // 0x06C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamFoundKeyAnnouncement;                              // 0x06C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamUnlockedAnnouncement;                              // 0x06D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               RedTeamStolenAnnouncement;                                // 0x06D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               CargoDropAnnouncement;                                    // 0x06E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               CargoLandedAnnouncement;                                  // 0x06E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  KeyIcon;                                                  // 0x06F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  CargoIcon;                                                // 0x06F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FriendlyColor;                                            // 0x0700(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0710(0x0010) (Edit, IsPlainOldData)
	struct FDropZoneParameters                         _dropZoneParameters;                                      // 0x0720(0x002C) (Net)
	unsigned char                                      UnknownData00[0xC];                                       // 0x074C(0x000C) MISSED OFFSET
	EDropZoneGameEventPhase                            _phase;                                                   // 0x0758(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0759(0x0003) MISSED OFFSET
	int                                                _capturingTeam;                                           // 0x075C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _phaseTimeLeft;                                           // 0x0760(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _captureProgress;                                         // 0x0764(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0768(0x0008) MISSED OFFSET
	class AGameEventBorder*                            _barrierA;                                                // 0x0770(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AGameEventBorder*                            _barrierB;                                                // 0x0778(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ADropZoneEquipmentTable*                     _tableA;                                                  // 0x0780(0x0008) (ZeroConstructor, IsPlainOldData)
	class ADropZoneEquipmentTable*                     _tableB;                                                  // 0x0788(0x0008) (ZeroConstructor, IsPlainOldData)
	class ADropZoneCrate*                              _crateA;                                                  // 0x0790(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ADropZoneCrate*                              _crateB;                                                  // 0x0798(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ADropZoneKey*                                _key;                                                     // 0x07A0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class APrisoner*                                   _keyCarrier;                                              // 0x07A8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      _topmostKeyOwner;                                         // 0x07B0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ADropZoneCargo*                              _cargo;                                                   // 0x07B8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ADropZoneSlot*                               _slot;                                                    // 0x07C0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x07C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneGameEvent");
		return ptr;
	}


	void SetDropZoneParameters(const struct FDropZoneParameters& Params);
	void OnRep_CapturingTeam();
	class ADropZoneSlot* GetSlot();
	float GetPhaseTimeLeft();
	EDropZoneGameEventPhase GetPhase();
	class APrisoner* GetKeyCarrier();
	class ADropZoneKey* GetKey();
	struct FDropZoneParameters GetDropZoneParameters();
	class ADropZoneCrate* GetCrateB();
	class ADropZoneCrate* GetCrateA();
	class ADropZoneCargo* GetCargo();
	int GetCapturingTeam();
	float GetCaptureProgress();
};


// Class ConZ.DropZoneKey
// 0x0010 (0x0878 - 0x0868)
class ADropZoneKey : public AItem
{
public:
	class USphereComponent*                            SphereComponent;                                          // 0x0868(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class ADropZoneGameEvent*                          _gameEvent;                                               // 0x0870(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneKey");
		return ptr;
	}


	void SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SetGameEvent(class ADropZoneGameEvent* gameEvent);
	class ADropZoneGameEvent* GetGameEvent();
};


// Class ConZ.DropZoneLocationMarker
// 0x0100 (0x0620 - 0x0520)
class ADropZoneLocationMarker : public AGameEventLocationMarker
{
public:
	struct FDropZoneParameters                         DropZoneParameters;                                       // 0x0520(0x002C) (Edit, BlueprintVisible)
	struct FVector                                     SpawnOffsetA;                                             // 0x054C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     SpawnOffsetB;                                             // 0x0558(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SpawnRadiusA;                                             // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpawnRadiusB;                                             // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x056C(0x0004) MISSED OFFSET
	struct FTransform                                  CargoDropOffset;                                          // 0x0570(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FTransform                                  CrateDropOffsetA;                                         // 0x05A0(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FTransform                                  CrateDropOffsetB;                                         // 0x05D0(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	class UStaticMeshComponent*                        CrateAPreviewMesh;                                        // 0x0600(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        CrateBPreviewMesh;                                        // 0x0608(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        CargoPreviewMesh;                                         // 0x0610(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0618(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneLocationMarker");
		return ptr;
	}

};


// Class ConZ.DropZoneSlot
// 0x0040 (0x0368 - 0x0328)
class ADropZoneSlot : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              ActivationDuration;                                       // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	class UStaticMesh*                                 UnlockedMesh;                                             // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ActivateSound;                                            // 0x0350(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ADropZoneGameEvent*                          _gameEvent;                                               // 0x0358(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0360(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DropZoneSlot");
		return ptr;
	}


	void SetGameEvent(class ADropZoneGameEvent* gameEvent);
	void Server_Activate(class APrisoner* Prisoner);
	float GetOpeningDuration();
	class ADropZoneGameEvent* GetGameEvent();
};


// Class ConZ.DrunkennessSickness
// 0x0010 (0x01C0 - 0x01B0)
class UDrunkennessSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DrunkennessSickness");
		return ptr;
	}

};


// Class ConZ.DysenteryDisease
// 0x0008 (0x01B8 - 0x01B0)
class UDysenteryDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.DysenteryDisease");
		return ptr;
	}

};


// Class ConZ.ElectricalNetwork
// 0x0020 (0x0370 - 0x0350)
class AElectricalNetwork : public AElectricalDevice
{
public:
	TArray<class ADoor*>                               AttachedDoors;                                            // 0x0350(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AElectricalDevice*>                   AttachedDevices;                                          // 0x0360(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ElectricalNetwork");
		return ptr;
	}

};


// Class ConZ.ElectricDoorAssetData
// 0x0000 (0x0028 - 0x0028)
class UElectricDoorAssetData : public UAssetUserData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ElectricDoorAssetData");
		return ptr;
	}

};


// Class ConZ.ElectricFence
// 0x0010 (0x0360 - 0x0350)
class AElectricFence : public AElectricalDevice
{
public:
	TArray<class AStaticMeshActor*>                    StaticParts;                                              // 0x0350(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ElectricFence");
		return ptr;
	}

};


// Class ConZ.ElectricFenceAssetData
// 0x0008 (0x0030 - 0x0028)
class UElectricFenceAssetData : public UAssetUserData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ElectricFenceAssetData");
		return ptr;
	}

};


// Class ConZ.EmblemData
// 0x0030 (0x0060 - 0x0030)
class UEmblemData : public UDataAsset
{
public:
	TArray<class UTexture2D*>                          BackgroundTextures;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UTexture2D*>                          SymbolTextures;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLinearColor>                        ColorPalette;                                             // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EmblemData");
		return ptr;
	}

};


// Class ConZ.EnduranceSkill
// 0x0028 (0x00E0 - 0x00B8)
class UEnduranceSkill : public UConstitutionSkill
{
public:
	struct FEnduranceSkillParametersPerSkillLevel      NoSkillParameters;                                        // 0x00B8(0x0008) (Edit)
	struct FEnduranceSkillParametersPerSkillLevel      BasicSkillParameters;                                     // 0x00C0(0x0008) (Edit)
	struct FEnduranceSkillParametersPerSkillLevel      MediumSkillParameters;                                    // 0x00C8(0x0008) (Edit)
	struct FEnduranceSkillParametersPerSkillLevel      AdvancedSkillParameters;                                  // 0x00D0(0x0008) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EnduranceSkill");
		return ptr;
	}

};


// Class ConZ.EnergyDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UEnergyDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EnergyDeficiency");
		return ptr;
	}

};


// Class ConZ.EngineeringSkill
// 0x0078 (0x0118 - 0x00A0)
class UEngineeringSkill : public UIntelligenceSkill
{
public:
	struct FEngineeringSkillExperienceAwards           NoSkillExperienceAwards;                                  // 0x00A0(0x0004) (Edit)
	struct FEngineeringSkillExperienceAwards           BasicSkillExperienceAwards;                               // 0x00A4(0x0004) (Edit)
	struct FEngineeringSkillExperienceAwards           MediumSkillExperienceAwards;                              // 0x00A8(0x0004) (Edit)
	struct FEngineeringSkillExperienceAwards           AdvancedSkillExperienceAwards;                            // 0x00AC(0x0004) (Edit)
	struct FEngineeringSkillExperienceAwards           AboveAdvancedSkillExperienceAwards;                       // 0x00B0(0x0004) (Edit)
	struct FEngineeringSkillParametersPerSkillLevel    NoSkillParameters;                                        // 0x00B4(0x0014) (Edit)
	struct FEngineeringSkillParametersPerSkillLevel    BasicSkillParameters;                                     // 0x00C8(0x0014) (Edit)
	struct FEngineeringSkillParametersPerSkillLevel    MediumSkillParameters;                                    // 0x00DC(0x0014) (Edit)
	struct FEngineeringSkillParametersPerSkillLevel    AdvancedSkillParameters;                                  // 0x00F0(0x0014) (Edit)
	struct FEngineeringSkillParametersPerSkillLevel    AboveAdvancedSkillParameters;                             // 0x0104(0x0014) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EngineeringSkill");
		return ptr;
	}

};


// Class ConZ.EnvironmentDescriptionComponent
// 0x0010 (0x0600 - 0x05F0)
class UEnvironmentDescriptionComponent : public UStaticMeshComponent
{
public:
	EEnvironmentClass                                  EnvironmentClass;                                         // 0x05F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsUnderground;                                            // 0x05F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x05F2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EnvironmentDescriptionComponent");
		return ptr;
	}

};


// Class ConZ.ObtainItemObjective
// 0x0048 (0x0480 - 0x0438)
class AObtainItemObjective : public ARequirementObjective
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0438(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.ObtainItemObjective._targetItems
	bool                                               _itemInHands;                                             // 0x0448(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _itemInHolster;                                           // 0x0449(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _itemInInventory;                                         // 0x044A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x35];                                      // 0x044B(0x0035) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ObtainItemObjective");
		return ptr;
	}

};


// Class ConZ.EquipItemObjective
// 0x0008 (0x0488 - 0x0480)
class AEquipItemObjective : public AObtainItemObjective
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0480(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EquipItemObjective");
		return ptr;
	}

};


// Class ConZ.EquipmentItem
// 0x0018 (0x0880 - 0x0868)
class AEquipmentItem : public AItem
{
public:
	uint32_t                                           MinRange;                                                 // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxRange;                                                 // 0x086C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MinDamage;                                                // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxDamage;                                                // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           AP;                                                       // 0x0878(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x087C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EquipmentItem");
		return ptr;
	}

};


// Class ConZ.EventInsertCartridge
// 0x0010 (0x0098 - 0x0088)
class UEventInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EventInsertCartridge");
		return ptr;
	}

};


// Class ConZ.EventInsertMagazine
// 0x0000 (0x0088 - 0x0088)
class UEventInsertMagazine : public UWeaponActionReloadSequence
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.EventInsertMagazine");
		return ptr;
	}

};


// Class ConZ.ExamineAction
// 0x0000 (0x00A8 - 0x00A8)
class UExamineAction : public UInteractionAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExamineAction");
		return ptr;
	}

};


// Class ConZ.ExamineAssetData
// 0x01F0 (0x0220 - 0x0030)
class UExamineAssetData : public UInteractionAssetData
{
public:
	bool                                               UsePresetBasedSpawning;                                   // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FExamineItemSpawnerData                     ExamineData;                                              // 0x0038(0x00A8) (Edit)
	class UAkAudioEvent*                               StartExamineAudioEvent;                                   // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopExamineAudioEvent;                                    // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ENoiseLevel                                        NoiseLevel;                                               // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	int                                                quantity;                                                 // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinQuantity;                                              // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxQuantity;                                              // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Probability;                                              // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       ItemSpawnTypes;                                           // 0x0108(0x0020) (Edit)
	TArray<class UClass*>                              Items;                                                    // 0x0128(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemGroup*>                          ItemGroups;                                               // 0x0138(0x0010) (Edit, ZeroConstructor)
	TMap<class UItemGroup*, struct FExamineDataPerItemGroup> DataPerItemGroup;                                         // 0x0148(0x0050) (Edit, ZeroConstructor)
	TWeakObjectPtr<class AActor>                       ItemsOwner;                                               // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseItemZone;                                              // 0x01A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseItemRarity;                                            // 0x01A1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x01A2(0x0002) MISSED OFFSET
	float                                              InitialDamage;                                            // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomizeDamage;                                          // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InitialUsage;                                             // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomizeUsage;                                           // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InitialDirtiness;                                         // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomizeDirtiness;                                       // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	TArray<struct FPossibleItemSickness>               PossibleSicknesses;                                       // 0x01C0(0x0010) (Edit, ZeroConstructor)
	bool                                               CanStore;                                                 // 0x01D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanSave;                                                  // 0x01D1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x01D2(0x0006) MISSED OFFSET
	struct FText                                       Title;                                                    // 0x01D8(0x0018) (Edit)
	unsigned char                                      UnknownData06[0x30];                                      // 0x01F0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExamineAssetData");
		return ptr;
	}

};


// Class ConZ.ExamineObjectAction
// 0x0018 (0x00C0 - 0x00A8)
class UExamineObjectAction : public UExamineAction
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00A8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExamineObjectAction");
		return ptr;
	}

};


// Class ConZ.ExaminePrisonerAction
// 0x0008 (0x00B0 - 0x00A8)
class UExaminePrisonerAction : public UExamineAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExaminePrisonerAction");
		return ptr;
	}

};


// Class ConZ.ExecuteInteractionAction
// 0x0098 (0x0140 - 0x00A8)
class UExecuteInteractionAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x00A8(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExecuteInteractionAction");
		return ptr;
	}

};


// Class ConZ.ExplosionDamageType
// 0x0000 (0x0040 - 0x0040)
class UExplosionDamageType : public UDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExplosionDamageType");
		return ptr;
	}

};


// Class ConZ.ExplosiveTrapItem
// 0x00C0 (0x09F0 - 0x0930)
class AExplosiveTrapItem : public ATrapItem
{
public:
	class UAkAudioEvent*                               _triggerSound;                                            // 0x0930(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _detonationSound;                                         // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             _detonationParticles;                                     // 0x0940(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0948(0x0008) MISSED OFFSET
	struct FTransform                                  _detonationParticlesTransform;                            // 0x0950(0x0030) (Edit, IsPlainOldData)
	float                                              _detonationDelay;                                         // 0x0980(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryBaseDamage;                                       // 0x0984(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryMinimumDamage;                                    // 0x0988(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageInnerRadius;                                // 0x098C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageOuterRadius;                                // 0x0990(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _trapForwardVector;                                       // 0x0994(0x000C) (Edit, IsPlainOldData)
	float                                              _primaryDamageMinAngleDeg;                                // 0x09A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageMaxAngleDeg;                                // 0x09A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageChanceMultiplier;                           // 0x09A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageMinChance;                                  // 0x09AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageMaxChance;                                  // 0x09B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageFalloff;                                    // 0x09B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _primaryDamageAngleFalloff;                               // 0x09B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _secondaryBaseDamage;                                     // 0x09BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _secondaryMinimumDamage;                                  // 0x09C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _secondaryDamageInnerRadius;                              // 0x09C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _secondaryDamageOuterRadius;                              // 0x09C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _secondaryDamageFalloff;                                  // 0x09CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionDamagePositionOffset;                           // 0x09D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDamageDescription                          _damageDescription;                                       // 0x09D4(0x0004) (Edit)
	unsigned char                                      UnknownData01[0x18];                                      // 0x09D8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExplosiveTrapItem");
		return ptr;
	}


	void Detonate();
};


// Class ConZ.ExteriorCharacterSpawnerComponent
// 0x0010 (0x0280 - 0x0270)
class UExteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{
public:
	ECharacterSpawnerRange                             Range;                                                    // 0x0270(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0271(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExteriorCharacterSpawnerComponent");
		return ptr;
	}

};


// Class ConZ.FatDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UFatDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FatDeficiency");
		return ptr;
	}

};


// Class ConZ.FeedAnimalAction
// 0x0000 (0x00A8 - 0x00A8)
class UFeedAnimalAction : public UAnimalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FeedAnimalAction");
		return ptr;
	}

};


// Class ConZ.FiberDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UFiberDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FiberDeficiency");
		return ptr;
	}

};


// Class ConZ.FillWaterAction
// 0x0020 (0x00C8 - 0x00A8)
class UFillWaterAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00A8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FillWaterAction");
		return ptr;
	}

};


// Class ConZ.FireItem
// 0x0068 (0x08E8 - 0x0880)
class AFireItem : public AEquipmentItem
{
public:
	float                                              FuelCapacity;                                             // 0x0880(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FuelDuration;                                             // 0x0884(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurningSpeed;                                             // 0x0888(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurningSpeedRain;                                         // 0x088C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FHeatSourceParameters                       HeatSourceParameters;                                     // 0x0890(0x0020) (Edit)
	class UAkAudioEvent*                               StartBurningAudioEvent;                                   // 0x08B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopBurningAudioEvent;                                    // 0x08B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkComponent*                                AudioComponent;                                           // 0x08C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    FireComponent;                                            // 0x08C8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              TouchDamage;                                              // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isBurning;                                               // 0x08D4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x08D5(0x000B) MISSED OFFSET
	int                                                _burningStage;                                            // 0x08E0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x08E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FireItem");
		return ptr;
	}


	void SetBurning(bool burning);
	void OnRep_IsBurning();
	void OnRep_BurningStage();
	struct FDbIntegerId GetSourceId();
	int GetMaxBurningStage();
	int GetBurningStage();
	bool GetBurning();
	void CalculateBurningStage();
};


// Class ConZ.FireplaceItem
// 0x0050 (0x0938 - 0x08E8)
class AFireplaceItem : public AFireItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08E8(0x0008) MISSED OFFSET
	class USceneComponent*                             CookingComponent;                                         // 0x08F0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UStaticMesh*>                         FireplaceMesh;                                            // 0x08F8(0x0010) (Edit, ZeroConstructor)
	int                                                MaterialSwitchIndex;                                      // 0x0908(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x090C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          LitMaterial;                                              // 0x0910(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          UnlitMaterial;                                            // 0x0918(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            SphereCollider;                                           // 0x0920(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FItemSnapMarker>                     _itemSnapMarkers;                                         // 0x0928(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FireplaceItem");
		return ptr;
	}

};


// Class ConZ.FireworksItem
// 0x0020 (0x0888 - 0x0868)
class AFireworksItem : public AItem
{
public:
	bool                                               _isFiring;                                                // 0x0868(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0869(0x0007) MISSED OFFSET
	int                                                _totalShells;                                             // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0874(0x000C) MISSED OFFSET
	float                                              _secondsBetweenLaunches;                                  // 0x0880(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0884(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FireworksItem");
		return ptr;
	}


	void SetIsFiring(bool IsFiring);
	void OnRep_IsFiring();
	void LaunchShell();
	bool IsFiring();
	int GetTotalShells();
	float GetSecondsBetweenLaunches();
	bool CanStartFiring(class APrisoner* Prisoner);
};


// Class ConZ.Fish
// 0x0010 (0x0B00 - 0x0AF0)
class AFish : public AAnimal2
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0AF0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Fish");
		return ptr;
	}

};


// Class ConZ.FishAIController
// 0x0060 (0x0498 - 0x0438)
class AFishAIController : public AAIController
{
public:
	float                                              turnSpeed;                                                // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeImpulse;                                              // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StuckCheckTime;                                           // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeTime;                                                 // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeTurnSpeed;                                            // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeDistance;                                             // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FleeRotationRate;                                         // 0x0450(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x045C(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FishAIController");
		return ptr;
	}


	void UpdatePerception(TArray<class AActor*> actorsPercepted);
};


// Class ConZ.FishSpawner
// 0x0160 (0x0488 - 0x0328)
class AFishSpawner : public AActor
{
public:
	float                                              StartSpawningDistance;                                    // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSpawnAnwayDistance;                                    // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxFishesPerVolume;                                       // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinFishesPerVolume;                                       // 0x0331(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BulkSpawnAtOnceMax;                                       // 0x0332(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      WaterVolumeChecksPerFrame;                                // 0x0333(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UBillboardComponent*                         Sprite;                                                   // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	TMap<class UClass*, struct FFishSpawnInfo>         SpawnInfo;                                                // 0x0340(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              UpVertialExtent;                                          // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DownVertialExtent;                                        // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF0];                                      // 0x0398(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FishSpawner");
		return ptr;
	}


	void UpdateWaterVolumeAssignment();
};


// Class ConZ.FlagAreaVisualizer
// 0x0010 (0x0338 - 0x0328)
class AFlagAreaVisualizer : public AActor
{
public:
	class UStaticMeshComponent*                        _staticMeshComponent;                                     // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FlagAreaVisualizer");
		return ptr;
	}


	void DestroyVisualizer();
};


// Class ConZ.FlareItem
// 0x0098 (0x0900 - 0x0868)
class AFlareItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x1];                                       // 0x0868(0x0001) MISSED OFFSET
	EFlareIgniteState                                  _repState;                                                // 0x0869(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x086A(0x0006) MISSED OFFSET
	struct FName                                       _effectsSocket;                                           // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0878(0x0008) MISSED OFFSET
	class UAkAudioEvent*                               _flareIgnitedAudioEvent;                                  // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _flareExtinguishedAudioEvent;                             // 0x0888(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _particlesLoopStartBlend;                                 // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _particlesLoopDuration;                                   // 0x0894(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             _flareIgnitedParticle;                                    // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             _flareLoopParticle;                                       // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             _flareExtinguishedParticle;                               // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _autoDestroyTimeOnUse;                                    // 0x08B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _flareIgnitedParticlesDuration;                           // 0x08B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _flareExtinguishedParticleDuration;                       // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x08BC(0x000C) MISSED OFFSET
	struct FLinearColor                                _pointLightColor;                                         // 0x08C8(0x0010) (Edit, IsPlainOldData)
	class UMaterialInterface*                          _pointLightFunctionMaterial;                              // 0x08D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x08E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FlareItem");
		return ptr;
	}


	void SwitchPointLight(bool turnOn);
	void SetState(EFlareIgniteState State);
	void RequestPrisonerIgniteFlare(class APrisoner* Prisoner);
	void OnRep_State();
	bool IsBurning();
	void Ignite();
	EFlareIgniteState GetState();
};


// Class ConZ.FlashbangItem
// 0x0018 (0x0880 - 0x0868)
class AFlashbangItem : public AItem
{
public:
	float                                              ExplosionDelay;                                           // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x086C(0x0004) MISSED OFFSET
	class UClass*                                      FlashbangEffectsClass;                                    // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0878(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FlashbangItem");
		return ptr;
	}


	void Multicast_PlayEffects(const struct FVector& zeroBasedFlashbangLocation);
};


// Class ConZ.FlashbangItemEffects
// 0x0050 (0x0378 - 0x0328)
class AFlashbangItemEffects : public AActor
{
public:
	class UParticleSystem*                             ExplosionParticles;                                       // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ExplosionCameraShakeClass;                                // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ExplosionAudioEvent;                                      // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartStunnedSoundEffectsAudioEvent;                       // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopStunnedSoundEffectsAudioEvent;                        // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinFlashbangDurationToStartStunnedSoundEffects;           // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FullFlashDuration;                                        // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlashFadeOutDuration;                                     // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlashRadius;                                              // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlashLineTraceDistance;                                   // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0364(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FlashbangItemEffects");
		return ptr;
	}

};


// Class ConZ.FlockAnimationComponent
// 0x0010 (0x0108 - 0x00F8)
class UFlockAnimationComponent : public UAnimalAnimationComponent
{
public:
	int                                                RunStartIndex;                                            // 0x00F8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              WalkSpeedMultiplied;                                      // 0x00FC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeedMultiplied;                                       // 0x0100(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FlockAnimationComponent");
		return ptr;
	}

};


// Class ConZ.FlockAnimInstance
// 0x0080 (0x0400 - 0x0380)
class UFlockAnimInstance : public UAnimalAnimInstance
{
public:
	bool                                               bIsMoving;                                                // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsInAir;                                                 // 0x0381(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0382(0x0002) MISSED OFFSET
	float                                              Speed;                                                    // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RunThreshold;                                             // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x038C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TurnDelta;                                                // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TurnThreshold;                                            // 0x0394(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayerNearby;                                            // 0x0398(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	float                                              LeftRightAim;                                             // 0x039C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              UpDownAim;                                                // 0x03A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Bolt180Threshold;                                         // 0x03A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TurnDeltaSmoothed;                                        // 0x03A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RequestedSpeed;                                           // 0x03AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TurnRateSmoothed;                                         // 0x03B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RequestedSpeedSmoothed;                                   // 0x03B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TargetTwitchWeight;                                       // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TwitchTimer;                                              // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TwitchWeight;                                             // 0x03C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Bolt90Threshold;                                          // 0x03C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TransitionDelayTimer;                                     // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeed;                                                 // 0x03CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WalkSpeed;                                                // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              SpeedMultiplier;                                          // 0x03D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              TurnAmount;                                               // 0x03D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RunStartIndex;                                            // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x03E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FlockAnimInstance");
		return ptr;
	}


	float GetWalkAnimationSpeed();
	float GetRunAnimationSpeed();
};


// Class ConZ.FogSphere
// 0x0010 (0x0338 - 0x0328)
class AFogSphere : public AActor
{
public:
	bool                                               _shouldExistOnDedicatedServer;                            // 0x0328(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	class UCurveFloat*                                 _densityVersusTimeOfDay;                                  // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FogSphere");
		return ptr;
	}


	void SetFogDensity(float Density);
	void OnTimeOfDayChanged(float timeOfDay);
};


// Class ConZ.FoliageAssetData
// 0x0030 (0x0058 - 0x0028)
class UFoliageAssetData : public UAssetUserData
{
public:
	struct FFoliageGeneralData                         GeneralData;                                              // 0x0028(0x0010) (Edit)
	struct FFoliageEffectsData                         EffectsData;                                              // 0x0038(0x0018) (Edit)
	struct FFoliageAIPerceptionData                    AIPerceptionData;                                         // 0x0050(0x0002) (Edit)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FoliageAssetData");
		return ptr;
	}

};


// Class ConZ.FoliageInstancedBush
// 0x0000 (0x0790 - 0x0790)
class UFoliageInstancedBush : public UFoliageInstancedStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FoliageInstancedBush");
		return ptr;
	}

};


// Class ConZ.FoliageInstancedGrass
// 0x0000 (0x0790 - 0x0790)
class UFoliageInstancedGrass : public UFoliageInstancedStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FoliageInstancedGrass");
		return ptr;
	}

};


// Class ConZ.FoliageInstancedTree
// 0x0000 (0x0790 - 0x0790)
class UFoliageInstancedTree : public UFoliageInstancedStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FoliageInstancedTree");
		return ptr;
	}

};


// Class ConZ.FollowsMouseActor
// 0x0008 (0x0330 - 0x0328)
class AFollowsMouseActor : public AActor
{
public:
	float                                              DistanceFromCamera;                                       // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FollowsMouseActor");
		return ptr;
	}

};


// Class ConZ.FortificationComponent
// 0x0030 (0x0620 - 0x05F0)
class UFortificationComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x05F0(0x0008) MISSED OFFSET
	class UParticleSystem*                             _destructionParticles;                                    // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _destructionAudio;                                        // 0x0600(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ABuilding*                                   _parentBuilding;                                          // 0x0608(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                _markerIndex;                                             // 0x0610(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              _health;                                                  // 0x0614(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0618(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FortificationComponent");
		return ptr;
	}

};


// Class ConZ.FoxglovePoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UFoxglovePoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FoxglovePoisoning");
		return ptr;
	}

};


// Class ConZ.FragGrenadeItem
// 0x0040 (0x08A8 - 0x0868)
class AFragGrenadeItem : public AItem
{
public:
	class UAkAudioEvent*                               ExplosionAudioEvent;                                      // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionDamage;                                         // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionOuterRadius;                                    // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionInnerRadius;                                    // 0x0878(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionFalloff;                                        // 0x087C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionDelay;                                          // 0x0880(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionImpulse_OBSOLETE;                               // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0888(0x0008) MISSED OFFSET
	class UParticleSystem*                             _explosionParticle;                                       // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _explosionCameraShakeClass;                               // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _hearingDamageRadius;                                     // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x08A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FragGrenadeItem");
		return ptr;
	}


	void Multicast_PlayEffects(const struct FVector& ZeroBasedLocation);
};


// Class ConZ.FuelCanister
// 0x0000 (0x0880 - 0x0880)
class AFuelCanister : public AEquipmentItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FuelCanister");
		return ptr;
	}

};


// Class ConZ.FuelPump
// 0x0028 (0x0350 - 0x0328)
class AFuelPump : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              Capacity;                                                 // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _rootComponent;                                           // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FuelPump");
		return ptr;
	}

};


// Class ConZ.FuelTank
// 0x0028 (0x0350 - 0x0328)
class AFuelTank : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              Capacity;                                                 // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _rootComponent;                                           // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.FuelTank");
		return ptr;
	}

};


// Class ConZ.GameEventBorder
// 0x0070 (0x0398 - 0x0328)
class AGameEventBorder : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    Material;                                                 // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UChildActorComponent*                        SoundSpline;                                              // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EGameEventBorderState                              _state;                                                   // 0x0348(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0349(0x0003) MISSED OFFSET
	float                                              _desiredRadius;                                           // 0x034C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0350(0x0004) MISSED OFFSET
	struct FVector                                     _desiredOffset;                                           // 0x0354(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0360(0x000C) MISSED OFFSET
	float                                              _desiredHeat;                                             // 0x036C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0370(0x0004) MISSED OFFSET
	float                                              _radiusChangeSpeed;                                       // 0x0374(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _offsetChangeSpeed;                                       // 0x0378(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _heatChangeSpeed;                                         // 0x037C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _collisionEnabled;                                        // 0x0380(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _blockPawns;                                              // 0x0381(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x16];                                      // 0x0382(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventBorder");
		return ptr;
	}


	void SetEnablePawnCollision(bool Value);
	void OnRep_Collision();
	void Multicast_SetRadius(float Radius);
	void Multicast_SetOffset(const struct FVector& Offset);
	bool IsActive();
	void HeatUpAndChangeArea(float Radius, const struct FVector& focus, float Duration, float heatUpDuration);
	EGameEventBorderState GetState();
	float GetRadius();
	struct FVector GetOffset();
	struct FVector GetBorderCenter();
	void ChangeState(EGameEventBorderState State, float Duration);
	void ChangeArea(float Radius, const struct FVector& focus, float Duration);
};


// Class ConZ.GameEventCardWidget
// 0x0008 (0x0228 - 0x0220)
class UGameEventCardWidget : public UDesignableUserWidget
{
public:
	class AGameEventBase*                              _gameEvent;                                               // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventCardWidget");
		return ptr;
	}


	void UpdateStats();
	class AGameEventBase* GetGameEvent();
	class UGameEventCardWidget* STATIC_Create(class AGameEventBase* gameEvent);
};


// Class ConZ.GameEventInfoWidget
// 0x0000 (0x0220 - 0x0220)
class UGameEventInfoWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventInfoWidget");
		return ptr;
	}


	void UpdateStats(class AGameEventBase* _gameEvent);
};


// Class ConZ.GameEventLeaderboardWidget
// 0x0030 (0x0250 - 0x0220)
class UGameEventLeaderboardWidget : public UDesignableUserWidget
{
public:
	TArray<struct FEventsRankingStatsItem>             TopPlayersStats;                                          // 0x0220(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FEventsRankingStatsItem>             PlayerRankingStats;                                       // 0x0230(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                playerRank;                                               // 0x0240(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0244(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventLeaderboardWidget");
		return ptr;
	}


	void UpdateTopPlayers();
	void UpdatePlayerRanking();
	void RequestTopPlayers(int count, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder);
	void RequestPlayerRanking(int Pad, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder);
	void CancelReqeusts();
};


// Class ConZ.GameEventLoadoutMenuWidget
// 0x0008 (0x0228 - 0x0220)
class UGameEventLoadoutMenuWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventLoadoutMenuWidget");
		return ptr;
	}


	void SetGameEvent(class AGameEventBase* gameEvent);
	class AGameEventBase* GetGameEvent();
	void CreateLoadout(class UClass* primary, class UClass* secondary, class UClass* tertiary, TArray<class UClass*> outfit, TArray<class UClass*> support, class UPrisonerLoadout* loadout);
};


// Class ConZ.GameEventManager
// 0x0040 (0x0368 - 0x0328)
class AGameEventManager : public AActor
{
public:
	int                                                EventHistoryLimit;                                        // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	TArray<class AGameEventBase*>                      _announcedGameEvents;                                     // 0x0330(0x0010) (Net, ZeroConstructor)
	TArray<class AGameEventBase*>                      _currentGameEvents;                                       // 0x0340(0x0010) (Net, ZeroConstructor)
	TArray<class AGameEventBase*>                      _endedGameEvents;                                         // 0x0350(0x0010) (Net, ZeroConstructor)
	class UGameEventPanelWidget*                       _panelWidget;                                             // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventManager");
		return ptr;
	}


	class AGameEventBase* TrySchedulingNextEvent();
	class AGameEventLocationMarker* PickRandomMarker(class UClass* markerType, bool preferUnused, bool forcePick);
	void OnRep_EndedGameEvents();
	void OnRep_CurrentGameEvents();
	void OnRep_AnnouncedGameEvents();
	bool IsEventLocationFree(struct FText* Location);
	class AGameEventBase* GetPrisonerRegisteredGameEvent(class APrisoner* Prisoner);
	class UGameEventPanelWidget* GetPanelWidget();
	TArray<class AGameEventBase*> GetEndedEvents();
	TArray<class AGameEventBase*> GetCurrentEvents();
	TArray<class AGameEventBase*> GetAnnouncedEvents();
	class AGameEventBase* CreateGameEvent(class AGameEventLocationMarker* marker, float StartDelay);
};


// Class ConZ.GameEventPanelWidget
// 0x0008 (0x0228 - 0x0220)
class UGameEventPanelWidget : public UDesignableUserWidget
{
public:
	class AGameEventManager*                           _GEManager;                                               // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventPanelWidget");
		return ptr;
	}


	void UpdateLists();
	void OnUpdate();
	void OnOpened();
	void OnClosed();
	class AGameEventManager* GetGameEventManager();
	void EmptyLists();
	class UGameEventPanelWidget* STATIC_Create(class AGameEventManager* GEManager);
	void AddEndedEvent(class AGameEventBase* gameEvent);
	void AddCurrentEvent(class AGameEventBase* gameEvent);
	void AddAnnouncedEvent(class AGameEventBase* gameEvent);
};


// Class ConZ.GameEventParticipantInfoCardWidget
// 0x0000 (0x0220 - 0x0220)
class UGameEventParticipantInfoCardWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventParticipantInfoCardWidget");
		return ptr;
	}


	void UpdateStats(class APrisoner* Prisoner);
};


// Class ConZ.GameEventParticipantStatsWidget
// 0x0020 (0x0240 - 0x0220)
class UGameEventParticipantStatsWidget : public UDesignableUserWidget
{
public:
	class AGameEventBase*                              _gameEvent;                                               // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                _index;                                                   // 0x0228(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x022C(0x0004) MISSED OFFSET
	class UGameEventScoreboardWidget*                  _scoreboard;                                              // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                _teamIndex;                                               // 0x0238(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x023C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventParticipantStatsWidget");
		return ptr;
	}


	void UpdateStats();
	void UpdateColours();
	void SetTeamIndex(int Index);
	void SetColours(const struct FGameEventTeamColours& colours);
	bool IsValid();
	int GetTeamIndex();
	class UGameEventScoreboardWidget* GetScoreboard();
	int GetIndex();
	class AGameEventBase* GetGameEvent();
	void FillLabels();
};


// Class ConZ.GameEventRoundInfoWidget
// 0x0000 (0x0220 - 0x0220)
class UGameEventRoundInfoWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventRoundInfoWidget");
		return ptr;
	}


	void SetGameEvent(class AGameEventBase* gameEvent);
};


// Class ConZ.GameEventScoreboardWidget
// 0x0038 (0x0258 - 0x0220)
class UGameEventScoreboardWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      RoundInfoWidgetClass;                                     // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeamHeaderWidgetClass;                                    // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StatWidgetClass;                                          // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UGameEventParticipantStatsWidget*>    StatWidgets;                                              // 0x0238(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class AGameEventBase*                              _gameEvent;                                               // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                _selected;                                                // 0x0250(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventScoreboardWidget");
		return ptr;
	}


	void SetSelectedIndex(int Index);
	void OnUpdate();
	void InitializeScoreboard();
	int GetSelectedIndex();
	class UGameEventScoreboardWidget* STATIC_CreateMini(class AGameEventBase* gameEvent, class UClass* statClass, class UClass* teamHeaderClass);
	class UGameEventScoreboardWidget* STATIC_Create(class AGameEventBase* gameEvent, class UClass* roundInfoClass, class UClass* teamHeaderClass, class UClass* statClass);
};


// Class ConZ.GameEventTeamHeaderWidget
// 0x0000 (0x0220 - 0x0220)
class UGameEventTeamHeaderWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventTeamHeaderWidget");
		return ptr;
	}


	void SetGameEvent(class AGameEventBase* gameEvent);
	void ClearWinCounters();
	void AddWinCounter();
};


// Class ConZ.GameEventTransport
// 0x0088 (0x03B0 - 0x0328)
class AGameEventTransport : public AActor
{
public:
	class USphereComponent*                            Sphere;                                                   // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PodMesh;                                                  // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TargetMesh;                                               // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              TravelSpeed;                                              // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TravelHeight;                                             // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoverHeight;                                              // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LargerRadius;                                             // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SmallerRadius;                                            // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EGameEventTransportState                           _state;                                                   // 0x0354(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0355(0x0003) MISSED OFFSET
	struct FVector                                     _lastPosition;                                            // 0x0358(0x000C) (Net, IsPlainOldData)
	struct FVector                                     _targetPosition;                                          // 0x0364(0x000C) (Net, IsPlainOldData)
	float                                              _blend;                                                   // 0x0370(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x0374(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GameEventTransport");
		return ptr;
	}


	void TravelToDestination(const struct FVector& Destination);
	void SkipToDestination();
	void ReserveForPrisoner(class APrisoner* Prisoner);
	void OnRep_TargetPosition();
	void OnRep_LastPosition();
	void OnOrderComplete();
	void LiftOff();
	void LeaveIsland();
	void LandAtLocation(const struct FVector& Destination);
	bool IsInteractable();
	class APrisoner* GetReservedParticipant();
	void CancelOrder();
};


// Class ConZ.GhostTrailComponent
// 0x0000 (0x00F0 - 0x00F0)
class UGhostTrailComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GhostTrailComponent");
		return ptr;
	}


	void SetTrailActive(bool active);
	bool GetTrailActive();
};


// Class ConZ.Gib
// 0x0010 (0x0338 - 0x0328)
class AGib : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              ShrinkFactor;                                             // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseMultiplier;                                        // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Gib");
		return ptr;
	}

};


// Class ConZ.GlobalAnimalSpawner
// 0x00D0 (0x03F8 - 0x0328)
class AGlobalAnimalSpawner : public AActor
{
public:
	TMap<class UClass*, struct FGlobalAnimalSpawnInfo> SpawnInfo;                                                // 0x0328(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<TEnumAsByte<EPhysicalSurface>>              AllowedSurfaces;                                          // 0x0378(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AAnimalSpawner2*>                     AnimalSpawners;                                           // 0x0388(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst)
	class UBillboardComponent*                         Sprite;                                                   // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x58];                                      // 0x03A0(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GlobalAnimalSpawner");
		return ptr;
	}

};


// Class ConZ.GlobalBirdSpawner2
// 0x00E0 (0x0408 - 0x0328)
class AGlobalBirdSpawner2 : public AActor
{
public:
	int                                                MaxSpawnInstances;                                        // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCoastalBirdSpawnPerPlayer;                             // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxContinentalBirdSpawnPerPlayer;                         // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	TArray<class UClass*>                              CoastalBirds;                                             // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UClass*>                              ContinentalBirds;                                         // 0x0348(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              FlyingBirdSpawnAwayDistanceMin;                           // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyingBirdSpawnAwayDistanceMax;                           // 0x035C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundBirdSpawnAwayDistanceMin;                           // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundBirdSpawnAwayDistanceMax;                           // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSpawnInfrontDistance;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	struct FGameplayTag                                BirdSpawnerMask;                                          // 0x0370(0x0008) (Edit, BlueprintVisible)
	struct FVector                                     MapTopLeft;                                               // 0x0378(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     MapBottomRight;                                           // 0x0384(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                BulkSpawn;                                                // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<EPhysicalSurface>>              AllowedSurfaces;                                          // 0x0398(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UBillboardComponent*                         Sprite;                                                   // 0x03A8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET
	TArray<class ABird2*>                              _birds;                                                   // 0x03B8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x40];                                      // 0x03C8(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GlobalBirdSpawner2");
		return ptr;
	}

};


// Class ConZ.GlobalItemSpawner
// 0x0140 (0x0168 - 0x0028)
class UGlobalItemSpawner : public UObject
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0028(0x0080) MISSED OFFSET
	int                                                SpawnProbabilityMultiplier;                               // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RespawnInterval;                                          // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RespawnDistanceSquared;                                   // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RespawnBatch;                                             // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RarityValues[0x6];                                        // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
	unsigned char                                      UnknownData02[0x10];                                      // 0x00D0(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.GlobalItemSpawner._itemClasses
	unsigned char                                      UnknownData03[0x10];                                      // 0x00E8(0x0010) MISSED OFFSET
	TArray<class AItemSpawnerVolume*>                  _spawnerVolumes;                                          // 0x00F8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x60];                                      // 0x0108(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.GlobalItemSpawner");
		return ptr;
	}

};


// Class ConZ.HandgunSkill
// 0x0000 (0x00B0 - 0x00B0)
class UHandgunSkill : public URangedWeaponsSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HandgunSkill");
		return ptr;
	}

};


// Class ConZ.HandPanel3
// 0x0018 (0x0238 - 0x0220)
class UHandPanel3 : public UDesignableUserWidget
{
public:
	class UHandsHolstersWidget2*                       _handInventory;                                           // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHandsHolstersWidget2*                       _holsterInventory0;                                       // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHandsHolstersWidget2*                       _holsterInventory1;                                       // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HandPanel3");
		return ptr;
	}


	class UQuickAccessItemSwitcher3* GetQuickAccessAt(int Index);
};


// Class ConZ.InventoryContainerWidget2
// 0x0000 (0x0220 - 0x0220)
class UInventoryContainerWidget2 : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainerWidget2");
		return ptr;
	}

};


// Class ConZ.HandsHolstersWidget2
// 0x0070 (0x0290 - 0x0220)
class UHandsHolstersWidget2 : public UInventoryContainerWidget2
{
public:
	class UInventoryContainer2D*                       _container;                                               // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryContainerHandsHolsters*            _handsHolstersContainer;                                  // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _nameText;                                                // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventorySlotUserWidget*                    _itemSlotWidget;                                          // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UItemWidget2*                                _itemWidget;                                              // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _inventoryGrid;                                           // 0x0248(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventorySlotUserWidget*                    _attachmentSlotWidget;                                    // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UInventorySlotUserWidget*>            _slotsWidgets;                                            // 0x0258(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UItemWidget2*>                        _attachmentWidgets;                                       // 0x0268(0x0010) (ExportObject, ZeroConstructor)
	EHandsHolstersType                                 _type;                                                    // 0x0278(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0279(0x0007) MISSED OFFSET
	TScriptInterface<class UInventoryNode>             _item;                                                    // 0x0280(0x0030) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HandsHolstersWidget2");
		return ptr;
	}


	void OnAttachmentRemoved(class AWeapon* Weapon, class AWeaponAttachment* Attachment);
	void OnAttachmentAdded(class AWeapon* Weapon, class AWeaponAttachment* Attachment);
	void InitBlueprint(const TScriptInterface<class UInventoryNode>& Item);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
};


// Class ConZ.HasCustomRadialDamageHandler
// 0x0000 (0x0028 - 0x0028)
class UHasCustomRadialDamageHandler : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HasCustomRadialDamageHandler");
		return ptr;
	}

};


// Class ConZ.HasItemSnapMarkersInterface
// 0x0000 (0x0028 - 0x0028)
class UHasItemSnapMarkersInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HasItemSnapMarkersInterface");
		return ptr;
	}


	void GetItemSnapMarkers(const struct FString& Tag, TArray<struct FItemSnapMarker>* Markers);
};


// Class ConZ.HasLadderMarkersInterface
// 0x0000 (0x0028 - 0x0028)
class UHasLadderMarkersInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HasLadderMarkersInterface");
		return ptr;
	}


	void GetLadderMarkers(TArray<struct FLadderMarker>* Result);
};


// Class ConZ.HasOwningUser
// 0x0000 (0x0028 - 0x0028)
class UHasOwningUser : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HasOwningUser");
		return ptr;
	}

};


// Class ConZ.HasProcessViewRotation
// 0x0000 (0x0028 - 0x0028)
class UHasProcessViewRotation : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HasProcessViewRotation");
		return ptr;
	}

};


// Class ConZ.HasWindowMarkersInterface
// 0x0000 (0x0028 - 0x0028)
class UHasWindowMarkersInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HasWindowMarkersInterface");
		return ptr;
	}


	void GetWindowMarkers(TArray<struct FWindowMarker>* Result);
};


// Class ConZ.HealingItem
// 0x0050 (0x0078 - 0x0028)
class UHealingItem : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HealingItem");
		return ptr;
	}


	float GetQuantity();
	int GetID();
	struct FString GetCaption();
};


// Class ConZ.HealthWidget
// 0x0000 (0x02B8 - 0x02B8)
class UHealthWidget : public UWaypointWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HealthWidget");
		return ptr;
	}


	void SetMaxHealthPercentage(float Value);
	void SetHealthPercentage(float Value);
};


// Class ConZ.HeartAttack
// 0x0048 (0x01F8 - 0x01B0)
class UHeartAttack : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x01B0(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HeartAttack");
		return ptr;
	}

};


// Class ConZ.HeartbeatWidget
// 0x00D8 (0x01D8 - 0x0100)
class UHeartbeatWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                    // 0x0100(0x0088) (Edit, BlueprintVisible)
	struct FScriptDelegate                             BrushDelegate;                                            // 0x0188(0x0014) (ZeroConstructor, InstancedReference)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0198(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x01A8(0x0014) (ZeroConstructor, InstancedReference)
	float                                              Thickness;                                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Periods;                                                  // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                   // 0x01D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HeartbeatWidget");
		return ptr;
	}


	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
};


// Class ConZ.HeatSourceManager
// 0x0070 (0x0398 - 0x0328)
class AHeatSourceManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0328(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HeatSourceManager");
		return ptr;
	}


	void SetSourceParameters(const struct FDbIntegerId& ID, const struct FHeatSourceParameters& parameters);
	void SetSourceLocation(const struct FDbIntegerId& ID, const struct FVector& Location);
	void SetFuelDuration(const struct FDbIntegerId& ID, float amount);
	void SetFuelCapacity(const struct FDbIntegerId& ID, float amount);
	bool IsSourceValid(const struct FDbIntegerId& ID);
	bool GetSourceParameters(const struct FDbIntegerId& ID, struct FHeatSourceParameters* parameters);
	struct FVector GetSourceLocation(const struct FDbIntegerId& ID);
	float GetHeatTemperature(const struct FVector& Location);
	float GetFuelDuration(const struct FDbIntegerId& ID);
	float GetFuelCapacity(const struct FDbIntegerId& ID);
};


// Class ConZ.HeatstrokeDisease
// 0x0020 (0x01D0 - 0x01B0)
class UHeatstrokeDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x01B0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HeatstrokeDisease");
		return ptr;
	}

};


// Class ConZ.Helpers
// 0x0000 (0x0028 - 0x0028)
class UHelpers : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Helpers");
		return ptr;
	}


	struct FDateTime STATIC_UtcToLocalDateTime(const struct FDateTime& utc);
	void STATIC_SortSkillsByLevelAndExperience(TArray<class USkill*>* Skills);
	void STATIC_SetComponentNetAddressable(class UActorComponent* Component);
	void STATIC_SendChatLineToAll(class UObject* WorldContextObject, const struct FString& Text);
	struct FSoftObjectPath STATIC_ResolveObjectPathForPIE(class UObject* WorldContext);
	bool STATIC_PasteLocationAndRotationFromClipboard(struct FVector* Location, struct FRotator* Rotation);
	bool STATIC_ParseServerIpAndPort(const struct FString& Text, struct FString* Ip, int* Port);
	struct FRotator STATIC_NormalizeRotator(const struct FRotator& Rotator);
	struct FString STATIC_MakeAuthTokenForUser(class UUser* User, const struct FString& password);
	struct FString STATIC_MakeAuthTokenForCurrentUser(class UObject* WorldContextObject, const struct FString& password);
	struct FString STATIC_MakeAuthToken(const struct FString& UserId, const struct FString& password);
	struct FDateTime STATIC_LocalToUtcDateTime(const struct FDateTime& Local);
	bool STATIC_LineBoxIntersection(const struct FBox& Box, const struct FVector& Start, const struct FVector& End, const struct FVector& startToEnd, struct FVector* HitLocation);
	bool STATIC_IsWorldStreamed(class UObject* WorldContextObject);
	bool STATIC_IsUserDeveloper(const struct FString& UserId);
	bool STATIC_IsPointWithinCircle(const struct FVector2D& Point, const struct FVector2D& circleCenter, float circleRadius);
	bool STATIC_IsDeluxeVersionInstalled();
	struct FVector2D STATIC_GetRandomPointWithinTwoCircles(const struct FVector2D& centerA, float radiusA, const struct FVector2D& centerB, float radiusB);
	struct FVector2D STATIC_GetRandomPointWithinCircle(const struct FVector2D& Center, float Radius);
	class ULineBatchComponent* STATIC_GetLineBatcher(class UObject* WorldContextObject, bool bPersistentLines, float LifeTime, bool bDepthIsForeground);
	struct FString STATIC_GetGameVersion();
	struct FString STATIC_GetEnumeratorName(const struct FString& Name, int Value);
	float STATIC_GetDistanceToClosestPlayerPawnOrSpectator(class UWorld* World, const struct FVector& Location);
	void STATIC_GetDeveloperUsers();
	int STATIC_GetDefaultDedicatedServerResponsePort();
	class UDataSingleton* STATIC_GetDataSingleton();
	class UObject* STATIC_GetClassDefaultObject(class UClass* ObjectClass);
	float STATIC_GetCircleYForX(float X, const struct FVector2D& Center, float Radius, bool Up);
	struct FString STATIC_GetAuthTokenForUser(class UUser* User, const struct FString& ServerIp, int ServerResponsePort);
	struct FString STATIC_GetAuthTokenForCurrentUser(class UObject* WorldContextObject, const struct FString& ServerIp, int ServerResponsePort);
	class UActorComponent* STATIC_GetActorComponentByName(class AActor* Actor, const struct FName& Name);
	struct FVector STATIC_GetActorBoundsCenter(class AActor* Actor, bool onlyCollidingComponents);
	bool STATIC_FindTeleportSpotInArea(class AActor* Actor, float minRadius, float MaxRadius, int numIterationsPerRadius, int numIterationsPerSlice, struct FVector* Location, struct FRotator* Rotation);
	void STATIC_DrawLine(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void STATIC_CopyLocationAndRotationToClipboard(const struct FVector& Location, const struct FRotator& Rotation);
	bool STATIC_AreCirclesIntersecting(const struct FVector2D& centerA, float radiusA, const struct FVector2D& centerB, float radiusB, bool onlyEdge);
	void STATIC_AddChatLine(class UObject* WorldContextObject, const struct FString& Text);
};


// Class ConZ.HemlockPoisoning
// 0x0010 (0x01C0 - 0x01B0)
class UHemlockPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HemlockPoisoning");
		return ptr;
	}

};


// Class ConZ.HepatitisADisease
// 0x0008 (0x01B8 - 0x01B0)
class UHepatitisADisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HepatitisADisease");
		return ptr;
	}

};


// Class ConZ.Highlightable
// 0x0000 (0x0028 - 0x0028)
class UHighlightable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Highlightable");
		return ptr;
	}

};


// Class ConZ.HitReactComponent
// 0x0128 (0x0218 - 0x00F0)
class UHitReactComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00F0(0x0018) MISSED OFFSET
	TArray<class UHitReactMapping*>                    HitReactMappings;                                         // 0x0108(0x0010) (Edit, ZeroConstructor)
	struct FPhysicalHitReactData                       PhysicalHitReactData;                                     // 0x0118(0x0018) (Edit)
	struct FName                                       RagdollConstraintProfileName;                             // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RagdollRestThresholdSingleBodyMax;                        // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RagdollRestThresholdAverageBodyMax;                       // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0140(0x0028) MISSED OFFSET
	struct FName                                       _pelvisBoneName;                                          // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _rootBoneName;                                            // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _getUpFromFaceMontage;                                    // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _getUpFromBackMontage;                                    // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7A];                                      // 0x0188(0x007A) MISSED OFFSET
	ERagdollTransitionState                            _ragdollTransitionState;                                  // 0x0202(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0203(0x0001) MISSED OFFSET
	struct FVector                                     _serverRagollLocation;                                    // 0x0204(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0210(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HitReactComponent");
		return ptr;
	}


	void RecoverFromRagdollImmediately();
	void RecoverFromRagdoll();
	void OnRep_ServerRagdollLocation();
	void OnRep_RagdollTransitionState();
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool interrupted);
	void MoveRagdollMesh(class UPrimitiveComponent* MeshComponent, const struct FVector& currentLocation, const struct FVector& TargetLocation);
	bool IsRagdollAtRest();
	bool IsPlayingGetUpMontage();
	bool IsInRagdoll();
	bool IsCapsuleOverlapped();
	bool IsBlendingRagdoll();
	void GoToRagdoll();
	struct FName GetPelvisBoneName();
	bool CanRecoverFromRagdoll();
	void ApplyPhysicalAnimationData(const struct FPhysicalAnimationDesc& desc);
};


// Class ConZ.HitReactMapping
// 0x03B0 (0x03E0 - 0x0030)
class UHitReactMapping : public UDataAsset
{
public:
	struct FGameplayTagContainer                       HitReactTypes;                                            // 0x0030(0x0020) (Edit)
	float                                              RegainControlMultiplier;                                  // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FHitReactMagnitudeData                      HeadHit;                                                  // 0x0058(0x0120) (Edit)
	struct FHitReactMagnitudeData                      BodyHit;                                                  // 0x0178(0x0120) (Edit)
	struct FHitReactMagnitudeData                      LegsHit;                                                  // 0x0298(0x0120) (Edit)
	struct FHitReactLandingData                        LandingHit;                                               // 0x03B8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HitReactMapping");
		return ptr;
	}

};


// Class ConZ.HookwormsDisease
// 0x0008 (0x01B8 - 0x01B0)
class UHookwormsDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HookwormsDisease");
		return ptr;
	}

};


// Class ConZ.HoverPanelWidget
// 0x0000 (0x0220 - 0x0220)
class UHoverPanelWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HoverPanelWidget");
		return ptr;
	}


	void SetWorldPosition(const struct FVector& Position);
	void SetScreenPosition(const struct FVector2D& Position);
	class UVerticalBox* GetContentBox();
	void ClearPanel();
};


// Class ConZ.HoverWidget
// 0x0000 (0x0220 - 0x0220)
class UHoverWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HoverWidget");
		return ptr;
	}


	void InitFromItem(class AItem* Item);
};


// Class ConZ.HUD_John
// 0x0050 (0x0468 - 0x0418)
class AHUD_John : public AHUD
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0418(0x0008) MISSED OFFSET
	class UFont*                                       NormalFont;                                               // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0428(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HUD_John");
		return ptr;
	}

};


// Class ConZ.HUDNotification
// 0x0000 (0x0030 - 0x0030)
class UHUDNotification : public UConZNotification
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HUDNotification");
		return ptr;
	}

};


// Class ConZ.HUDNotificationDescription
// 0x0018 (0x0058 - 0x0040)
class UHUDNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                  // 0x0040(0x0010) (ZeroConstructor, SaveGame)
	bool                                               beep;                                                     // 0x0050(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HUDNotificationDescription");
		return ptr;
	}

};


// Class ConZ.HudWidget
// 0x0068 (0x0288 - 0x0220)
class UHudWidget : public UDesignableUserWidget
{
public:
	class UQuickAccessBarWidget*                       _quickAccessBar;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVicinityPanel3*                             _vicinityPanel;                                           // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVicinityContainer3*                         _vicinityContainer;                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0238(0x0018) MISSED OFFSET
	class UObjectivesContainerWidget*                  _objectivesContainer;                                     // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionResult*                              _missionResultWidget;                                     // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDialogueContainerWidget*                    _dialogueContainerWidget;                                 // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UJournalPanelWidget*                         _journalPanelWidget;                                      // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USquadPanelWidget*                           _squadPanelWidget;                                        // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHandPanel3*                                 _handPanel;                                               // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScreenSpaceHealthWidget*                    _screenSpaceHealthWidget;                                 // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HudWidget");
		return ptr;
	}


	void UpdateAttributesHistory();
	void ToggleMonitorsVisibility();
	void SwitchTabMode(int Index);
	void ShowWarningMessage(const struct FString& Message, float Duration, const struct FLinearColor& TextColor);
	void ShowTrapsDetectedNotification();
	void ShowNotification(const struct FString& Message, float Duration);
	void ShowLevelUpNotification(class USkill* Skill, ESkillLevel skillLevel);
	void ShowKillFeedNotification(const struct FText& prefix, const struct FText& characterName, const struct FText& suffix, bool ping);
	bool ShouldSerializeWidgetLayout(class UWidget* Widget);
	void SetTabEnabled(ETabMode Tab, bool Value);
	void SetPrisoner(class APrisoner* Prisoner);
	void SetMainCanvasVisibility(bool visible);
	bool SaveLayout();
	void ResetLayout();
	void RemoveTeammateName(const struct FString& Name);
	void OpenChat();
	void OnPrisonerChanged();
	bool LoadLayout();
	bool IsChatOpen();
	class UVicinityPanel3* GetVicinityPanel();
	class UPanelWidget* GetTopLevelPanelWidget();
	class UTabModeSwitcherWidget* GetTabModeSwitcherWidget();
	class USquadPanelWidget* GetSquadPanelWidget();
	class UScreenSpaceHealthWidget* GetScreenSpaceHealthWidget();
	class UPrisonerLifeIndicatorsSprite* GetPrisonerLifeIndicatorsSprite();
	class APrisoner* GetPrisoner();
	class UObjectivesContainerWidget* GetObjectivesContainer();
	class UMissionResult* GetMissionResultWidget();
	bool GetMainCanvasVisibility();
	class UJournalPanelWidget* GetJournalPanelWidget();
	class UInventoryPanelThirdIteration* GetInventoryPanel();
	class UHandPanel3* GetHandPanel();
	class UDialogueContainerWidget* GetDialogueContainerWidget();
	class UCraftingPanelWidget* GetCraftingPanel();
	class UCompassWidget* GetCompassWidget();
	class UChatWidget* GetChatWidget();
	class UBreathingBarLungsWidget* GetBreathingBarLungsWidget();
	class UUserWidget* GetBCURightPanel();
	class UUserWidget* GetBCULeftPanel();
	bool STATIC_DumpStringToFile(const struct FString& stringToDump);
	void CloseChat();
	void ClearTeammateNames();
	void ClearNotifications();
	void ChangeChatType(EChatType chatType);
	void AddWarning(EWarningType warningType, bool playSounds);
	void AddTeammateName(const struct FString& Name);
	void AddMessageToScreen(const struct FText& Text, bool beep, const struct FLinearColor& Color);
	void AddChatLine(const struct FString& string, EChatType chatType);
};


// Class ConZ.HyperthermiaDisease
// 0x0000 (0x01B0 - 0x01B0)
class UHyperthermiaDisease : public UDisease
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HyperthermiaDisease");
		return ptr;
	}

};


// Class ConZ.HypothermiaDisease
// 0x0010 (0x01C0 - 0x01B0)
class UHypothermiaDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HypothermiaDisease");
		return ptr;
	}

};


// Class ConZ.InocybePatouillardiiPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UInocybePatouillardiiPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InocybePatouillardiiPoisoning");
		return ptr;
	}

};


// Class ConZ.InsertCartridge
// 0x0010 (0x0098 - 0x0088)
class UInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InsertCartridge");
		return ptr;
	}

};


// Class ConZ.InsertCartridgeIntoMagazine
// 0x0010 (0x0098 - 0x0088)
class UInsertCartridgeIntoMagazine : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InsertCartridgeIntoMagazine");
		return ptr;
	}

};


// Class ConZ.InsertMagazine
// 0x0000 (0x0088 - 0x0088)
class UInsertMagazine : public UWeaponActionReloadSequence
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InsertMagazine");
		return ptr;
	}

};


// Class ConZ.InsertMagazineInsertCartridge
// 0x0010 (0x0098 - 0x0088)
class UInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InsertMagazineInsertCartridge");
		return ptr;
	}

};


// Class ConZ.InspectedItemWidget
// 0x0018 (0x0238 - 0x0220)
class UInspectedItemWidget : public UDesignableUserWidget
{
public:
	class UItemClassWidget*                            ItemWidget;                                               // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SkillText;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SkillLevelText;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InspectedItemWidget");
		return ptr;
	}


	void SetIsToolForSomething(bool IsTool);
};


// Class ConZ.InstancedStaticMeshActor
// 0x0008 (0x0330 - 0x0328)
class AInstancedStaticMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InstancedStaticMeshActor");
		return ptr;
	}

};


// Class ConZ.InstrumentItem
// 0x01F8 (0x0A60 - 0x0868)
class AInstrumentItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x0868(0x000C) MISSED OFFSET
	int                                                _numberOfOctaves;                                         // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _playInstrumentStartMontageFP;                            // 0x0878(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _playInstrumentStartMontageTP;                            // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _playInstrumentStopMontageFP;                             // 0x0888(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _playInstrumentStopMontageTP;                             // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _playInstrumentIdleAnimationFP;                           // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _playInstrumentPlayingAnimationFP;                        // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _playInstrumentIdleAnimationTP;                           // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _playInstrumentPlayingAnimationTP;                        // 0x08B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _playingPoseHoldTime;                                     // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x08BC(0x0004) MISSED OFFSET
	TArray<class UAkAudioEvent*>                       _noteCStart;                                              // 0x08C0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteCStop;                                               // 0x08D0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteDStart;                                              // 0x08E0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteDStop;                                               // 0x08F0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteDbStart;                                             // 0x0900(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteDbStop;                                              // 0x0910(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteEStart;                                              // 0x0920(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteEStop;                                               // 0x0930(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteEbStart;                                             // 0x0940(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteEbStop;                                              // 0x0950(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteFStart;                                              // 0x0960(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteFStop;                                               // 0x0970(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteGStart;                                              // 0x0980(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteGStop;                                               // 0x0990(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteGbStart;                                             // 0x09A0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteGbStop;                                              // 0x09B0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteAStart;                                              // 0x09C0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteAStop;                                               // 0x09D0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteAbStart;                                             // 0x09E0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteAbStop;                                              // 0x09F0(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteBStart;                                              // 0x0A00(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteBStop;                                               // 0x0A10(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteBbStart;                                             // 0x0A20(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteBbStop;                                              // 0x0A30(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteC2Start;                                             // 0x0A40(0x0010) (Edit, ZeroConstructor)
	TArray<class UAkAudioEvent*>                       _noteC2Stop;                                              // 0x0A50(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InstrumentItem");
		return ptr;
	}

};


// Class ConZ.InteractableInterface
// 0x0000 (0x0028 - 0x0028)
class UInteractableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractableInterface");
		return ptr;
	}


	void OnHovered(class APrisoner* Prisoner);
	bool IsAbleToInteractWithItem(class AItem* Item);
	void InteractWithItem(class APlayerController* PlayerController, class AItem* Item, EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void Interact(class APrisoner* User, EInteractionType interactionType, const struct FInteractionData& InteractionData);
	EInteractionState GetStateForInteractionWithItem(class AItem* Item);
	TArray<struct FInteractionStruct> GetInteractionsWithItem(class UObject* User, class AItem* Item);
	TArray<struct FInteractionStruct> GetInteractions(class UObject* User, class UObject* creator, const struct FInteractionQueryParameters& Params);
	struct FText GetInteractionHint(class UObject* User);
	struct FInteractionStruct GetDefaultInteractionForPrisoner(class APrisoner* Prisoner, const struct FInteractionQueryParameters& Params);
	struct FInteractionStruct GetDefaultInteractionForDrone(class ADrone* Drone, const struct FInteractionQueryParameters& Params);
	bool CanInteract(class APrisoner* User);
};


// Class ConZ.InteractionComponent
// 0x0168 (0x0258 - 0x00F0)
class UInteractionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	float                                              ExamineChanceMultiplier;                                  // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExamineActionDuration;                                    // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExamineReplicationDelay;                                  // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PickupItemActionDuration;                                 // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PickupItemReplicationDelay;                               // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StoreItemActionDuration;                                  // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinLandscapeInteractionDistanceSquared;                   // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SavedGroundSearchLocationsCount;                          // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x011C(0x001C) MISSED OFFSET
	TArray<class UInteractionAction*>                  _actions;                                                 // 0x0138(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0xA8];                                      // 0x0148(0x00A8) MISSED OFFSET
	struct FSpawnedItems                               _replicatedExamineSpawnedItems;                           // 0x01F0(0x0018) (Net)
	struct FSpawnedItems                               _replicatedPickupSpawnedItem;                             // 0x0208(0x0018) (Net)
	unsigned char                                      UnknownData03[0x2C];                                      // 0x0220(0x002C) MISSED OFFSET
	float                                              _drinkAllowedThreshold;                                   // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _reexamineFrequency;                                      // 0x0250(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractionComponent");
		return ptr;
	}


	void UseItemOnServer(class AItem* Item, int usage, float usageWeight, bool Eat);
	void UpdateItemDataOnServer(class AItem* Item);
	void UpdateExistenceOnClient(bool exists);
	void UnspawnExaminedItemsOnServer(bool destroyItems);
	void UnexamineItemOnServer(class AItem* Item);
	void UnexamineItemOnClient(class AItem* Item);
	void UncraftItemOnServer(class AItem* Item);
	void TankFuelOnServer(class AFuelTank* FuelTank, class AFuelCanister* FuelCanister, float quantity);
	void StoreItemsOnServer(class UMeshComponent* MeshComponent, int InstanceIndex, const struct FVector& instanceLocation, TArray<class AItem*> storeItems);
	void StopExamining();
	void PickupItemOnServer(class UMeshComponent* MeshComponent, int InstanceIndex, class UStaticMesh* StaticMesh, const struct FVector& pickupLocation, EPickupItemOperation Operation);
	void PickupItemOnClients(class UMeshComponent* MeshComponent, int InstanceIndex, class UStaticMesh* StaticMesh, const struct FVector& pickupLocation);
	void OperateGeneratorOnServer(class APowerGenerator* generator, bool working);
	void OperateElectricDoorOnServer(class ADoor* Door, bool Open);
	void OperateElectricalDeviceOnServer(class AElectricalDevice* device, bool working);
	void OpenItemOnServer(class AFoodItem* FoodItem, class AItem* openingItem);
	void OnRep_PickupSpawnedItem();
	void OnRep_ExamineSpawnedItems();
	void LockElectricDoorOnServer(class ADoor* Door, bool Lock, const struct FString& password);
	void InteractWithBaseElement(EInteractionType interactionType, const struct FConZBaseInteractionData& baseData, const struct FConZBaseElementInteractionData& elementData);
	void FinishPickupItemOnServer();
	void FinishExaminePrisonerOnServer(class APrisoner* Prisoner);
	void FinishExamineObjectOnServer();
	void FillWaterOnServer(class AItem* Item, float Ratio, float salinity);
	void FillCanisterOnServer(class AFuelPump* FuelPump, class AFuelCanister* FuelCanister, float quantity);
	void ExecuteInteractionOnServer(class AItem* interactionItem, EInteractionType Interaction, const struct FServerCraftableItem& CraftableItem);
	void ExaminePrisonerOnServer(class APrisoner* Prisoner);
	void ExamineObjectOnServer(class UMeshComponent* MeshComponent, int InstanceIndex, const struct FVector& instanceLocation);
	void DestroyItemOnServer(class AItem* Item);
	void DestroyActorOnServer(class AActor* Actor);
	void CutObjectOnServer(class AActor* Actor, TArray<class AItem*> tools, class UMeshComponent* MeshComponent, int InstanceIndex, const struct FVector& Location, bool collectOnly);
	void CutObjectOnClients(class UMeshComponent* MeshComponent, int InstanceIndex);
	void CraftItemOnServer(const struct FServerCraftableItem& CraftableItem);
	void Client_SendGroundSearchLocation(const struct FVector& Location);
	void ChopOnServer(class UObject* choppedObject, TArray<class AItem*> tools);
	void CheckExistenceOnServer(class UMeshComponent* MeshComponent, int InstanceIndex);
};


// Class ConZ.InteractionContainerUserWidget
// 0x0048 (0x0268 - 0x0220)
class UInteractionContainerUserWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0220(0x0018) MISSED OFFSET
	class UVerticalBox*                                _actionContainer;                                         // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0240(0x000C) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       _underlyingInteractableActor;                             // 0x024C(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x0254(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractionContainerUserWidget");
		return ptr;
	}


	void STATIC_RemoveActiveInteractionWidget(class APlayerController* PlayerController);
	void InteractableDestroyed(class AActor* interactable);
};


// Class ConZ.InteractionObject
// 0x0000 (0x0028 - 0x0028)
class UInteractionObject : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractionObject");
		return ptr;
	}

};


// Class ConZ.InteractionUserWidget
// 0x0070 (0x0290 - 0x0220)
class UInteractionUserWidget : public UDesignableUserWidget
{
public:
	class UTextBlock*                                  _actionText;                                              // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     _actionButton;                                            // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0230(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteractionUserWidget");
		return ptr;
	}


	void Interact();
};


// Class ConZ.InteriorCharacterSpawnerComponent
// 0x0000 (0x0270 - 0x0270)
class UInteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteriorCharacterSpawnerComponent");
		return ptr;
	}

};


// Class ConZ.InteriorStaticMeshComponent
// 0x0000 (0x05F0 - 0x05F0)
class UInteriorStaticMeshComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InteriorStaticMeshComponent");
		return ptr;
	}

};


// Class ConZ.IntestinalCryptosporidiosisPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UIntestinalCryptosporidiosisPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.IntestinalCryptosporidiosisPoisoning");
		return ptr;
	}

};


// Class ConZ.InventoryData
// 0x0000 (0x0030 - 0x0030)
class UInventoryData : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryData");
		return ptr;
	}

};


// Class ConZ.InventoryData2D
// 0x0008 (0x0038 - 0x0030)
class UInventoryData2D : public UInventoryData
{
public:
	int                                                SizeX;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryData2D");
		return ptr;
	}

};


// Class ConZ.InventoryPositionData
// 0x0000 (0x0028 - 0x0028)
class UInventoryPositionData : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPositionData");
		return ptr;
	}

};


// Class ConZ.InventoryContainer
// 0x0000 (0x0028 - 0x0028)
class UInventoryContainer : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainer");
		return ptr;
	}

};


// Class ConZ.InventorySizeData
// 0x0000 (0x0028 - 0x0028)
class UInventorySizeData : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventorySizeData");
		return ptr;
	}

};


// Class ConZ.InventorySizeData2D
// 0x0018 (0x0040 - 0x0028)
class UInventorySizeData2D : public UInventorySizeData
{
public:
	int                                                SizeX;                                                    // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<bool>                                       Bitmask;                                                  // 0x0030(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventorySizeData2D");
		return ptr;
	}

};


// Class ConZ.InventoryPositionData2D
// 0x0010 (0x0038 - 0x0028)
class UInventoryPositionData2D : public UInventoryPositionData
{
public:
	int                                                PositionX;                                                // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PositionY;                                                // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      Rotation;                                                 // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsLoading;                                                // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPositionData2D");
		return ptr;
	}

};


// Class ConZ.InventoryContainer2D
// 0x00B8 (0x00E0 - 0x0028)
class UInventoryContainer2D : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FInventoryContainer2DRepData                _data;                                                    // 0x0030(0x0028) (Net)
	struct FInventoryContainer2DRepData                _oldData;                                                 // 0x0058(0x0028)
	TArray<struct FInventoryContainer2DRepData>        _dataPredictionSnapshots;                                 // 0x0080(0x0010) (ZeroConstructor)
	TArray<class UInventoryContainerWidget2*>          _widgets;                                                 // 0x0090(0x0010) (ExportObject, ZeroConstructor)
	TScriptInterface<class UInventoryNode>             _parent;                                                  // 0x00A0(0x0030) (ZeroConstructor, IsPlainOldData)
	class UInventoryContainerWidget2*                  _widget;                                                  // 0x00B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<bool>                                       _grid;                                                    // 0x00B8(0x0010) (ZeroConstructor)
	TArray<bool>                                       _gridDamaged;                                             // 0x00C8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainer2D");
		return ptr;
	}


	void OnRep_Parent();
	void OnRep_Items(TArray<class UObject*> _oldItems);
	void OnRep_Data();
	void OnActorItemDestroyed(class AActor* Actor);
};


// Class ConZ.InventoryContainer2DLight
// 0x0000 (0x00E0 - 0x00E0)
class UInventoryContainer2DLight : public UInventoryContainer2D
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainer2DLight");
		return ptr;
	}

};


// Class ConZ.InventoryPositionDataClothes
// 0x0008 (0x0030 - 0x0028)
class UInventoryPositionDataClothes : public UInventoryPositionData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPositionDataClothes");
		return ptr;
	}

};


// Class ConZ.InventoryContainerClothes
// 0x0068 (0x0090 - 0x0028)
class UInventoryContainerClothes : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UInventoryContainerWidget2*                  _widget;                                                  // 0x0030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0038(0x0010) MISSED OFFSET
	struct FInventoryContainerClothesData              _data;                                                    // 0x0048(0x0020) (Net)
	struct FInventoryContainerClothesData              _oldData;                                                 // 0x0068(0x0020)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0088(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainerClothes");
		return ptr;
	}


	void OnRep_Data();
};


// Class ConZ.InventoryPositionDataHandsHolsters
// 0x0008 (0x0030 - 0x0028)
class UInventoryPositionDataHandsHolsters : public UInventoryPositionData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPositionDataHandsHolsters");
		return ptr;
	}

};


// Class ConZ.InventoryContainerHandsHolsters
// 0x0080 (0x00A8 - 0x0028)
class UInventoryContainerHandsHolsters : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	class UInventoryContainerWidget2*                  _handWidget;                                              // 0x0038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryContainerWidget2*                  _shoulderLeftWidget;                                      // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryContainerWidget2*                  _shoulderRightWidget;                                     // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0050(0x0010) MISSED OFFSET
	struct FInventoryContainerHandsHolstersData        _data;                                                    // 0x0060(0x0020) (Net)
	struct FInventoryContainerHandsHolstersData        _oldData;                                                 // 0x0080(0x0020)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainerHandsHolsters");
		return ptr;
	}


	void OnRep_Data();
};


// Class ConZ.InventoryPositionDataSelection
// 0x0008 (0x0030 - 0x0028)
class UInventoryPositionDataSelection : public UInventoryPositionData
{
public:
	int                                                Position;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPositionDataSelection");
		return ptr;
	}

};


// Class ConZ.InventoryContainerSelection
// 0x0090 (0x00B8 - 0x0028)
class UInventoryContainerSelection : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	int                                                _maxNumOfItems;                                           // 0x0030(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0034(0x0014) MISSED OFFSET
	TArray<class UObject*>                             _itemsRep;                                                // 0x0048(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0058(0x0010) MISSED OFFSET
	class UObject*                                     _parentRep;                                               // 0x0068(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FInventoryContainerSelectionRepData         _data;                                                    // 0x0070(0x0028) (Net)
	TArray<class UInventoryContainerWidget2*>          _widgets;                                                 // 0x0098(0x0010) (ExportObject, ZeroConstructor)
	class UInventoryContainerWidget2*                  _widget;                                                  // 0x00A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainerSelection");
		return ptr;
	}


	void OnRep_Parent();
	void OnRep_Items(TArray<class UObject*> _oldItems);
	void OnRep_Data(const struct FInventoryContainerSelectionRepData& oldData);
	void OnItemDestroyed(class AActor* Actor);
};


// Class ConZ.InventoryItemWidget2Test
// 0x0010 (0x0218 - 0x0208)
class UInventoryItemWidget2Test : public UUserWidget
{
public:
	class UImage*                                      _itemIcon;                                                // 0x0208(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _itemCaption;                                             // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryItemWidget2Test");
		return ptr;
	}

};


// Class ConZ.InventoryContainerWidget2Test
// 0x0078 (0x0298 - 0x0220)
class UInventoryContainerWidget2Test : public UInventoryContainerWidget2
{
public:
	class UImage*                                      _itemIcon;                                                // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _itemCaption;                                             // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                _itemContainer;                                           // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0238(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryContainerWidget2Test");
		return ptr;
	}

};


// Class ConZ.InventoryPanelWidget2Test
// 0x0058 (0x0278 - 0x0220)
class UInventoryPanelWidget2Test : public UInventoryContainerWidget2
{
public:
	class UScrollBox*                                  _itemContainer;                                           // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0228(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPanelWidget2Test");
		return ptr;
	}

};


// Class ConZ.InventoryGridWidget
// 0x0008 (0x0228 - 0x0220)
class UInventoryGridWidget : public UDesignableUserWidget
{
public:
	class UImage*                                      _image;                                                   // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryGridWidget");
		return ptr;
	}

};


// Class ConZ.InventoryItemData
// 0x0000 (0x0030 - 0x0030)
class UInventoryItemData : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryItemData");
		return ptr;
	}

};


// Class ConZ.InventoryItemDataDescription
// 0x0030 (0x0060 - 0x0030)
class UInventoryItemDataDescription : public UInventoryItemData
{
public:
	struct FText                                       Name;                                                     // 0x0030(0x0018) (Edit)
	struct FText                                       Description;                                              // 0x0048(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryItemDataDescription");
		return ptr;
	}

};


// Class ConZ.InventoryItemDataIcon
// 0x0008 (0x0038 - 0x0030)
class UInventoryItemDataIcon : public UInventoryItemData
{
public:
	class UTexture2D*                                  Icon;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryItemDataIcon");
		return ptr;
	}

};


// Class ConZ.InventoryItemData2D
// 0x0008 (0x0038 - 0x0030)
class UInventoryItemData2D : public UInventoryItemData
{
public:
	int                                                SizeX;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryItemData2D");
		return ptr;
	}

};


// Class ConZ.InventoryItem
// 0x0000 (0x0028 - 0x0028)
class UInventoryItem : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryItem");
		return ptr;
	}

};


// Class ConZ.InventoryNode
// 0x0000 (0x0028 - 0x0028)
class UInventoryNode : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryNode");
		return ptr;
	}


	void IncrementUIDisplayStateVersion();
	struct FText GetInventoryNodeName();
	class UTexture2D* GetInventoryNodeIcon();
	struct FText GetInventoryNodeDescription();
	bool CanBeEverDropped();
};


// Class ConZ.InventoryPanelSideLayerWidget
// 0x0008 (0x0228 - 0x0220)
class UInventoryPanelSideLayerWidget : public UDesignableUserWidget
{
public:
	class UItemWidget2*                                _itemWidget;                                              // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPanelSideLayerWidget");
		return ptr;
	}


	void Init(const TScriptInterface<class UInventoryNode>& Item);
};


// Class ConZ.InventoryPanelThirdIteration
// 0x0118 (0x0338 - 0x0220)
class UInventoryPanelThirdIteration : public UDesignableUserWidget
{
public:
	TWeakObjectPtr<class ACharacter>                   _displayedCharacter;                                      // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	class UScrollBox*                                  _inventoriesScrollBox;                                    // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                _nonContainerBox;                                         // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<class UObject*, class UItemInventoryWidget2*> _inventories;                                             // 0x0238(0x0050) (ExportObject, ZeroConstructor)
	TMap<class UObject*, class UInventoryPanelSideLayerWidget*> _sideLayers;                                              // 0x0288(0x0050) (ExportObject, ZeroConstructor)
	TMap<class UObject*, class UItemWidget2*>          _nonContainerItems;                                       // 0x02D8(0x0050) (ExportObject, ZeroConstructor)
	struct FMargin                                     _nonContainerItemsPadding;                                // 0x0328(0x0010) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPanelThirdIteration");
		return ptr;
	}


	void UpdateItemWidgetHighlightings();
	void UpdateContainerForItem(class AItem* Item);
	void SetDisplayedCharacterName(const struct FString& Name);
	void RemoveContainerForItem(class AItem* Item);
	void AddContainerForItem(class AItem* Item);
};


// Class ConZ.InventoryPanelWidget2
// 0x0000 (0x0220 - 0x0220)
class UInventoryPanelWidget2 : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventoryPanelWidget2");
		return ptr;
	}

};


// Class ConZ.InventorySlotUserWidget
// 0x0020 (0x0240 - 0x0220)
class UInventorySlotUserWidget : public UDesignableUserWidget
{
public:
	bool                                               HasItem;                                                  // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	class UImage*                                      ImageWidget;                                              // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USizeBox*                                    SizeBoxWrapper;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBaseItemContainerWidget*                    ParentContainerWidget;                                    // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InventorySlotUserWidget");
		return ptr;
	}


	void OnDraggedItemPreRotated(class UItemWidget2* Widget);
	void OnDraggedItemPostRotated(class UItemWidget2* Widget);
};


// Class ConZ.IronDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UIronDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.IronDeficiency");
		return ptr;
	}

};


// Class ConZ.ItemClassWidget
// 0x0008 (0x0228 - 0x0220)
class UItemClassWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      _itemClass;                                               // 0x0220(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemClassWidget");
		return ptr;
	}


	void InteractWith(class APrisoner* Prisoner);
	void Init(class UClass* ItemClass, class UTexture2D* Texture);
	void Examine();
};


// Class ConZ.ItemDropPlaceholder
// 0x0028 (0x0350 - 0x0328)
class AItemDropPlaceholder : public AActor
{
public:
	class UBoxComponent*                               BoxCollisionComponent;                                    // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	class USceneComponent*                             _rootComponent;                                           // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemDropPlaceholder");
		return ptr;
	}

};


// Class ConZ.ItemGroup
// 0x0010 (0x0040 - 0x0030)
class UItemGroup : public UDataAsset
{
public:
	TArray<class UClass*>                              Items;                                                    // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemGroup");
		return ptr;
	}

};


// Class ConZ.ItemInventoryWidget2
// 0x0068 (0x0288 - 0x0220)
class UItemInventoryWidget2 : public UInventoryContainerWidget2
{
public:
	TScriptInterface<class UInventoryNode>             _item;                                                    // 0x0220(0x0030) (ZeroConstructor, IsPlainOldData)
	class UInventoryContainer2D*                       _container;                                               // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _nameText;                                                // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UItemWidget2*                                _itemWidget;                                              // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _inventoryGrid;                                           // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryGridWidget*                        _inventoryGridWidget;                                     // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                _inventoryCanvas;                                         // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              _contentBox;                                              // 0x0260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCheckBox*                                   _expandToggle;                                            // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UInventorySlotUserWidget*>            _slotsWidgets;                                            // 0x0270(0x0010) (ExportObject, ZeroConstructor)
	bool                                               _canMinimize;                                             // 0x0280(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0281(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemInventoryWidget2");
		return ptr;
	}


	void OnExpandToggleClicked(bool checked);
	void InitBlueprint(const TScriptInterface<class UInventoryNode>& Item);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
	void Blink();
};


// Class ConZ.ItemSelection
// 0x0068 (0x0098 - 0x0030)
class UItemSelection : public UDataAsset
{
public:
	class UClass*                                      MainItem;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              SupportItems;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UClass*>                              Attachments;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UTexture2D*                                  UnselectedIcon;                                           // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SelectedIcon;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DisabledIcon;                                             // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       SelectionName;                                            // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              SizeX;                                                    // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SizeY;                                                    // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TeamIndex;                                                // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSelection");
		return ptr;
	}

};


// Class ConZ.ItemSelectionSlotWidget
// 0x0000 (0x0220 - 0x0220)
class UItemSelectionSlotWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSelectionSlotWidget");
		return ptr;
	}

};


// Class ConZ.ItemSpawnerComponent
// 0x0010 (0x0250 - 0x0240)
class UItemSpawnerComponent : public USceneComponent
{
public:
	TArray<struct FItemSpawnerMarker>                  SpawnerMarkers;                                           // 0x0240(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSpawnerComponent");
		return ptr;
	}

};


// Class ConZ.ItemSpawnerGroup
// 0x0008 (0x0330 - 0x0328)
class AItemSpawnerGroup : public AActor
{
public:
	class UItemSpawnerComponent*                       SpawnerComponent;                                         // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSpawnerGroup");
		return ptr;
	}

};


// Class ConZ.ItemSpawnerVolume
// 0x0020 (0x0380 - 0x0360)
class AItemSpawnerVolume : public AVolume
{
public:
	struct FItemLocation                               zone;                                                     // 0x0360(0x000E) (Edit)
	unsigned char                                      UnknownData00[0x2];                                       // 0x036E(0x0002) MISSED OFFSET
	float                                              ItemHealthMultiplier;                                     // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProbabilityMultiplier;                                    // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExamineProbabilityMultiplier;                             // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x037C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSpawnerVolume");
		return ptr;
	}

};


// Class ConZ.ItemSpawningManager
// 0x1750 (0x1A78 - 0x0328)
class AItemSpawningManager : public AActor
{
public:
	struct FExamineItemSpawnerData                     ExamineItemSpawnerDataForSimulation;                      // 0x0328(0x00A8) (Edit)
	unsigned char                                      UnknownData00[0x1658];                                    // 0x03D0(0x1658) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x03D0(0x0050) UNKNOWN PROPERTY: SetProperty ConZ.ItemSpawningManager._referencedItemClasses

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSpawningManager");
		return ptr;
	}


	void SimulateExamineSpawner(int numIterations);
};


// Class ConZ.ItemSpawnerPreset
// 0x0070 (0x0098 - 0x0028)
class UItemSpawnerPreset : public UObject
{
public:
	struct FItemSpawnerData                            SpawnerData;                                              // 0x0028(0x0070) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemSpawnerPreset");
		return ptr;
	}

};


// Class ConZ.ItemStatusWidget
// 0x0000 (0x02B8 - 0x02B8)
class UItemStatusWidget : public UWaypointWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemStatusWidget");
		return ptr;
	}


	void SetTitleText(const struct FString& Text);
	void SetNameText(const struct FString& Text);
};


// Class ConZ.ItemTooltipTab
// 0x0010 (0x0140 - 0x0130)
class UItemTooltipTab : public UWidgetSwitcher
{
public:
	TArray<class UPanelWidget*>                        _panels;                                                  // 0x0130(0x0010) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemTooltipTab");
		return ptr;
	}

};


// Class ConZ.ItemTooltip
// 0x0048 (0x0268 - 0x0220)
class UItemTooltip : public UDesignableUserWidget
{
public:
	class UItemTooltipPanel*                           _mainPanel;                                               // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UItemTooltipTab*                             _overviewPanels;                                          // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UItemTooltipTab*                             _additionalPanels;                                        // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _pageIndicatorBar;                                        // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _expandHintText;                                          // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  _pageIndicatorGrid;                                       // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0250(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemTooltip");
		return ptr;
	}


	void UpdateVisuals(TArray<struct FInventoryNodeWidgetData> widgetData);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
};


// Class ConZ.ExtendedRichTextBlock
// 0x0000 (0x0360 - 0x0360)
class UExtendedRichTextBlock : public URichTextBlock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ExtendedRichTextBlock");
		return ptr;
	}


	void SetTextStyle(struct FTextBlockStyle* Style);
};


// Class ConZ.ItemTooltipPanelElement
// 0x0008 (0x0228 - 0x0220)
class UItemTooltipPanelElement : public UDesignableUserWidget
{
public:
	struct FName                                       _elementName;                                             // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemTooltipPanelElement");
		return ptr;
	}


	void OnTextDataChanged(const struct FText& Value);
	void OnNumberDataChanged(float Value);
};


// Class ConZ.ItemTooltipPanel
// 0x0050 (0x0270 - 0x0220)
class UItemTooltipPanel : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0220(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemTooltipPanel");
		return ptr;
	}


	void UpdateVisuals(TArray<struct FInventoryNodeWidgetData> widgetData);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
};


// Class ConZ.ItemUserWidget
// 0x0020 (0x0260 - 0x0240)
class UItemUserWidget : public UBaseItemWidget
{
public:
	struct FScriptMulticastDelegate                    OnClicked;                                                // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UUserWidget*                                 _uiBorder;                                                // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               _isSelected;                                              // 0x0258(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isHovered;                                               // 0x0259(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x025A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemUserWidget");
		return ptr;
	}


	void UpdateHighlightStatus();
	void SetItem(class AItem* Item);
	void SetImage(class UTexture2D* Image);
	void OnItemSelectionChanged(bool selected);
	void OnClicked__DelegateSignature(class UItemUserWidget* clickedWidget);
	void MarkAsWeaponWidget();
	void ItemPickedUpStateChanged(class AItem* Item, bool pickedUp);
	void InteractableDestroyed(class AActor* interactable);
	class AItem* GetItem();
	class UItemUserWidget* STATIC_CreateFromItem(class AItem* Item);
	void BlinkItemContainer();
};


// Class ConZ.ItemVirtualizationManager
// 0x0120 (0x0448 - 0x0328)
class AItemVirtualizationManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x120];                                     // 0x0328(0x0120) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemVirtualizationManager");
		return ptr;
	}

};


// Class ConZ.ItemWidget2
// 0x0130 (0x0350 - 0x0220)
class UItemWidget2 : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnRightClicked;                                           // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0230(0x0020) MISSED OFFSET
	TScriptInterface<class UInventoryNode>             _item;                                                    // 0x0250(0x0030) (ZeroConstructor, IsPlainOldData)
	TScriptInterface<class UInventoryContainer>        _container;                                               // 0x0260(0x0030) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      _icon;                                                    // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USizeBox*                                    _iconSizeBox;                                             // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _background;                                              // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUniformGridPanel*                           _backgroundGrid;                                          // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUniformGridPanel*                           _foregroundGrid;                                          // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _selectionOverlay;                                        // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	EInventoryNodeWidgetType                           _widgetType;                                              // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02A1(0x0007) MISSED OFFSET
	TMap<struct FName, float>                          _numberData;                                              // 0x02A8(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               _isVicinityContainer;                                     // 0x02F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02F9(0x0003) MISSED OFFSET
	struct FLinearColor                                _defaultBackgroundColour;                                 // 0x02FC(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _hoveredBackgroundColour;                                 // 0x030C(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _selectedBackgroundColour;                                // 0x031C(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _selectedHoveredBackgroundColour;                         // 0x032C(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x14];                                      // 0x033C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemWidget2");
		return ptr;
	}


	void UpdateVisuals();
	void OnRotated__DelegateSignature(class UItemWidget2* Widget);
	void OnRightClicked__DelegateSignature();
	void OnDropOperation(class UDragDropOperation* Operation);
	void OnDragOperationCancelled(class UDragDropOperation* Operation);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
};


// Class ConZ.ItemWithText
// 0x0058 (0x08C0 - 0x0868)
class AItemWithText : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	int                                                MaxTextCharactersPerRow;                                  // 0x0870(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxTextRows;                                              // 0x0874(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWidgetComponent*                            _textWidgetComponent;                                     // 0x0878(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FString                                     _text;                                                    // 0x0880(0x0010) (Net, ZeroConstructor)
	struct FDbIntegerId                                _owningUserProfileId;                                     // 0x0890(0x0008) (Net)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0898(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ItemWithText");
		return ptr;
	}


	void OnTextAccepted(class APrisoner* User, const struct FText& Text);
	void OnRep_Text();
	void OnLocalPrisonerPanelsClosed_ItemWithText();
};


// Class ConZ.JournalMissionContainer
// 0x00C8 (0x02D0 - 0x0208)
class UJournalMissionContainer : public UUserWidget
{
public:
	class UVerticalBox*                                _missionItemWidgetsContainer;                             // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                _completedMissionItemWidgetsContainer;                    // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _completedMissionsOverlay;                                // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _noContentText;                                           // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0228(0x0008) MISSED OFFSET
	TMap<class UClass*, TWeakObjectPtr<class UMissionItemWidget>> _missionItemWidgets;                                      // 0x0230(0x0050) (ExportObject, ZeroConstructor)
	TMap<class UClass*, TWeakObjectPtr<class UMissionItemWidget>> _completedMissionItemWidgets;                             // 0x0280(0x0050) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.JournalMissionContainer");
		return ptr;
	}

};


// Class ConZ.JournalObjectiveContainer
// 0x00E0 (0x02E8 - 0x0208)
class UJournalObjectiveContainer : public UUserWidget
{
public:
	class UVerticalBox*                                _objectiveContainer;                                      // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              _rewardContainer;                                         // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _headerNameText;                                          // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _missionDescriptionText;                                  // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _missionBanner;                                           // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _noDescriptionText;                                       // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _noRewardsText;                                           // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     _activateMissionButton;                                   // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     _untrackMissionButton;                                    // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     _resetMissionButton;                                      // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     _restartMissionButton;                                    // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _activateButtonOverlay;                                   // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _untrackButtonOverlay;                                    // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _resetButtonOverlay;                                      // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _restartButtonOverlay;                                    // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              _objectiveItemBottomPadding;                              // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _objectiveItemFontSize;                                   // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0288(0x0010) MISSED OFFSET
	TMap<struct FString, TWeakObjectPtr<class UObjectiveItemWidget>> _objectiveItemWidgets;                                    // 0x0298(0x0050) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.JournalObjectiveContainer");
		return ptr;
	}

};


// Class ConZ.JournalPanelWidget
// 0x0090 (0x0298 - 0x0208)
class UJournalPanelWidget : public UUserWidget
{
public:
	class UWidgetSwitcher*                             _journalWidgetSwitcher;                                   // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UJournalMissionContainer*                    _mainStoryContainerWidget;                                // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UJournalMissionContainer*                    _sideStoryContainerWidget;                                // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UJournalMissionContainer*                    _tutorialContainerWidget;                                 // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UJournalObjectiveContainer*                  _objectivesContainerWidget;                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionTabWidget*                           _mainStoryTab;                                            // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionTabWidget*                           _sideStoryTab;                                            // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionTabWidget*                           _tutorialTab;                                             // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _firstTabDivider;                                         // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _secondTabDivider;                                        // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0258(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.JournalPanelWidget");
		return ptr;
	}


	void OnUntrackMissionButton();
	void OnTutorialButtonClicked();
	void OnSideStoryButtonClicked();
	void OnRestartMissionButton();
	void OnResetMissionButton();
	void OnMissionItemExpanded(class UMissionItemWidget* MissionItemWidget);
	void OnMissionItemClicked(class UMissionItemWidget* MissionItemWidget, const struct FMissionData& MissionData);
	void OnMainStoryButtonClicked();
	void OnActivateMissionButton();
};


// Class ConZ.KeyboardIllumination
// 0x0000 (0x0028 - 0x0028)
class UKeyboardIllumination : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.KeyboardIllumination");
		return ptr;
	}


	void STATIC_PrintSCUM(const struct FColor& Color);
	void STATIC_InitIllumination();
	void STATIC_FlashAllKeys(const struct FColor& Color, float Duration, float interval);
	void STATIC_DeInitIllumination();
};


// Class ConZ.KillFeedNotification
// 0x0000 (0x0030 - 0x0030)
class UKillFeedNotification : public UConZNotification
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.KillFeedNotification");
		return ptr;
	}

};


// Class ConZ.KillFeedNotificationDescription
// 0x0038 (0x0078 - 0x0040)
class UKillFeedNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     prefix;                                                   // 0x0040(0x0010) (ZeroConstructor, SaveGame)
	struct FString                                     characterName;                                            // 0x0050(0x0010) (ZeroConstructor, SaveGame)
	struct FString                                     suffix;                                                   // 0x0060(0x0010) (ZeroConstructor, SaveGame)
	bool                                               ping;                                                     // 0x0070(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.KillFeedNotificationDescription");
		return ptr;
	}

};


// Class ConZ.LadderMarkersComponent
// 0x0020 (0x0260 - 0x0240)
class ULadderMarkersComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0240(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LadderMarkersComponent");
		return ptr;
	}

};


// Class ConZ.LadderMarkersRegistry
// 0x0010 (0x0338 - 0x0328)
class ALadderMarkersRegistry : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LadderMarkersRegistry");
		return ptr;
	}

};


// Class ConZ.LadderMarkersReplicator
// 0x0098 (0x03C0 - 0x0328)
class ALadderMarkersReplicator : public AActor
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0328(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LadderMarkersReplicator");
		return ptr;
	}


	void NetMulticast_UnregisterLadderMarker(int dataVersion, const struct FLadderMarker& marker);
	void NetMulticast_RegisterLadderMarker(int dataVersion, const struct FLadderMarker& marker);
};


// Class ConZ.LandingDamageType
// 0x0000 (0x0040 - 0x0040)
class ULandingDamageType : public UDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LandingDamageType");
		return ptr;
	}

};


// Class ConZ.LandingEffects
// 0x0708 (0x0738 - 0x0030)
class ULandingEffects : public UDataAsset
{
public:
	float                                              MinImpactSpeedForLightEffects;                            // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinImpactSpeedForMediumEffects;                           // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinImpactSpeedForHeavyEffects;                            // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               ImpactAudioEvent;                                         // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLandingEffectDataPerPhysicalSurface        Default;                                                  // 0x0048(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        grass;                                                    // 0x0078(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        ForrestGroundCoastal;                                     // 0x00A8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        ForrestGroundContinental;                                 // 0x00D8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Rock;                                                     // 0x0108(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Stone;                                                    // 0x0138(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Gravel;                                                   // 0x0168(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        GravelBeach;                                              // 0x0198(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Pebbles;                                                  // 0x01C8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Snow;                                                     // 0x01F8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Ice;                                                      // 0x0228(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Sand;                                                     // 0x0258(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Asphalt;                                                  // 0x0288(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Dirt;                                                     // 0x02B8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Water;                                                    // 0x02E8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        WaterOcean;                                               // 0x0318(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Cloth;                                                    // 0x0348(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Metal;                                                    // 0x0378(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Aluminium;                                                // 0x03A8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Concrete;                                                 // 0x03D8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Brick;                                                    // 0x0408(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Wood;                                                     // 0x0438(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Plastic;                                                  // 0x0468(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Rubber;                                                   // 0x0498(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Glass;                                                    // 0x04C8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Folliage;                                                 // 0x04F8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Bark;                                                     // 0x0528(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Flesh;                                                    // 0x0558(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        RoofTile;                                                 // 0x0588(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        CeramicsTiles;                                            // 0x05B8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Scrap;                                                    // 0x05E8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Trunk;                                                    // 0x0618(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Leaves;                                                   // 0x0648(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Plaster;                                                  // 0x0678(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        Kevlar;                                                   // 0x06A8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        ForceField;                                               // 0x06D8(0x0030) (Edit, DisableEditOnInstance)
	struct FLandingEffectDataPerPhysicalSurface        NoEffect;                                                 // 0x0708(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LandingEffects");
		return ptr;
	}

};


// Class ConZ.LaserTriggerComponent
// 0x0070 (0x0630 - 0x05C0)
class ULaserTriggerComponent : public UTriggerComponent
{
public:
	class UStaticMeshComponent*                        VisualizationMeshComponent;                               // 0x05C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     _laserDirection;                                          // 0x05C8(0x000C) (Edit, IsPlainOldData)
	float                                              _maxLaserLength;                                          // 0x05D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _laserThickness;                                          // 0x05D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _laserHeight;                                             // 0x05DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 _visualizationMesh;                                       // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x05E8(0x0008) MISSED OFFSET
	struct FTransform                                  _laserMeshTransform;                                      // 0x05F0(0x0030) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0620(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LaserTriggerComponent");
		return ptr;
	}


	void BoxComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BoxComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class ConZ.LearnAnimalAction
// 0x0008 (0x00B0 - 0x00A8)
class ULearnAnimalAction : public UAnimalAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LearnAnimalAction");
		return ptr;
	}

};


// Class ConZ.LeptospirosisDisease
// 0x0010 (0x01C0 - 0x01B0)
class ULeptospirosisDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LeptospirosisDisease");
		return ptr;
	}

};


// Class ConZ.LevelMarkers
// 0x0030 (0x0358 - 0x0328)
class ALevelMarkers : public AActor
{
public:
	TArray<struct FLadderMarker>                       LadderMarkers;                                            // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FWindowMarker>                       WindowMarkers;                                            // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0348(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LevelMarkers");
		return ptr;
	}

};


// Class ConZ.LevelUpNotification
// 0x0000 (0x0030 - 0x0030)
class ULevelUpNotification : public UConZNotification
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LevelUpNotification");
		return ptr;
	}

};


// Class ConZ.LevelUpNotificationDescription
// 0x0010 (0x0050 - 0x0040)
class ULevelUpNotificationDescription : public UNotificationDescription
{
public:
	class UClass*                                      Skill;                                                    // 0x0040(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	ESkillLevel                                        skillLevel;                                               // 0x0048(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LevelUpNotificationDescription");
		return ptr;
	}

};


// Class ConZ.LevelUpNotificationWidget
// 0x0068 (0x0288 - 0x0220)
class ULevelUpNotificationWidget : public UDesignableUserWidget
{
public:
	class UOverlay*                                    _overlay;                                                 // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _backgroundImage;                                         // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _arrowImage;                                              // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _skillLevelText;                                          // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _skillNameText;                                           // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAkAudioEvent*                               _levelUpNotificationAudioEvent;                           // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0250(0x0004) MISSED OFFSET
	float                                              _displayTime;                                             // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _slideInTime;                                             // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _slideOutTime;                                            // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0260(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LevelUpNotificationWidget");
		return ptr;
	}


	void QueueNotification(class USkill* Skill, ESkillLevel skillLevel);
	class UWidgetAnimation* GetLevelUpAnimation();
};


// Class ConZ.LoadingIconWidget
// 0x0000 (0x0220 - 0x0220)
class ULoadingIconWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LoadingIconWidget");
		return ptr;
	}

};


// Class ConZ.LoadingScreen
// 0x0008 (0x0228 - 0x0220)
class ULoadingScreen : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LoadingScreen");
		return ptr;
	}

};


// Class ConZ.LocationMarker
// 0x0000 (0x0328 - 0x0328)
class ALocationMarker : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LocationMarker");
		return ptr;
	}

};


// Class ConZ.LocationObjective
// 0x0050 (0x0478 - 0x0428)
class ALocationObjective : public AObjective
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0428(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ConZ.LocationObjective._locationTrigger
	class UClass*                                      _locationMarkerClass;                                     // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldRemoveObjectiveItem;                               // 0x0458(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class UClass*                                      _objectiveItemToRemove;                                   // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      _locationMarker;                                          // 0x0468(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0470(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LocationObjective");
		return ptr;
	}


	void OnRep_LocationMarker();
	void OnLocationEnter(class AActor* OverlapedActor, class AActor* OtherActor);
};


// Class ConZ.LocationTrigger
// 0x0030 (0x0360 - 0x0330)
class ALocationTrigger : public ATriggerBox
{
public:
	struct FTransform                                  _markerTransform;                                         // 0x0330(0x0030) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LocationTrigger");
		return ptr;
	}

};


// Class ConZ.Lock
// 0x0118 (0x0440 - 0x0328)
class ALock : public AActor
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0328(0x0004) MISSED OFFSET
	float                                              _rotatingTresholdAngle;                                   // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _duration;                                                // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _angleTolerance;                                          // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _pickBreakingMultiplier;                                  // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x033C(0x000C) MISSED OFFSET
	class USceneComponent*                             _rootComponent;                                           // 0x0348(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _outerRing;                                               // 0x0350(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _movableRing;                                             // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _lockpickingSetAnchor;                                    // 0x0360(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _lockpickManipulator;                                     // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _lockpickAnchor;                                          // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _lockpick;                                                // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _tensionToolManipulator;                                  // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _tensionToolAnchor;                                       // 0x0388(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _tensionTool;                                             // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    _captureCam;                                              // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ULockpickingWidget*                          _lockWidget;                                              // 0x03A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x48];                                      // 0x03A8(0x0048) MISSED OFFSET
	class UAkAudioEvent*                               _lockpickingLockTurningStartAudioEvent;                   // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingLockTurningStopAudioEvent;                    // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingLockTensionStartAudioEvent;                   // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingLockTensionStopAudioEvent;                    // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingSuccessAudioEvent;                            // 0x0410(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingFailedAudioEvent;                             // 0x0418(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingLockpickMovementStartAudioEvent;              // 0x0420(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingLockpickMovementStopAudioEvent;               // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingGenericStartAudioEvent;                       // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _lockpickingGenericStopAudioEvent;                        // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Lock");
		return ptr;
	}


	void OnLockpickDestroyed(class AActor* Actor);
};


// Class ConZ.UpgradeItemTag
// 0x0008 (0x0038 - 0x0030)
class UUpgradeItemTag : public UBaseItemTag
{
public:
	int                                                Price;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UpgradeItemTag");
		return ptr;
	}

};


// Class ConZ.LockItemTag
// 0x0008 (0x0040 - 0x0038)
class ULockItemTag : public UUpgradeItemTag
{
public:
	class UClass*                                      LockClass;                                                // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LockItemTag");
		return ptr;
	}

};


// Class ConZ.Lockpickable
// 0x0000 (0x0028 - 0x0028)
class ULockpickable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Lockpickable");
		return ptr;
	}


	void OnLockPicked();
	bool HasLocks();
	class UClass* GetLockClass();
	bool CanInitiateLockpickingFor(class APrisoner* Prisoner);
};


// Class ConZ.LockpickingTensionToolItemTag
// 0x0008 (0x0038 - 0x0030)
class ULockpickingTensionToolItemTag : public UBaseItemTag
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LockpickingTensionToolItemTag");
		return ptr;
	}

};


// Class ConZ.LockpickingWidget
// 0x0028 (0x0248 - 0x0220)
class ULockpickingWidget : public UDesignableUserWidget
{
public:
	TArray<class AItem*>                               _lockpicks;                                               // 0x0220(0x0010) (ZeroConstructor)
	TArray<class AItem*>                               _tensionTools;                                            // 0x0230(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LockpickingWidget");
		return ptr;
	}


	int GetTensionToolCount();
	float GetRemainingTime();
	int GetLockpicksCount();
	float GetDuration();
};


// Class ConZ.LockpickItemTag
// 0x0008 (0x0038 - 0x0030)
class ULockpickItemTag : public UBaseItemTag
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LockpickItemTag");
		return ptr;
	}

};


// Class ConZ.LookoutItem
// 0x0000 (0x0868 - 0x0868)
class ALookoutItem : public AItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.LookoutItem");
		return ptr;
	}

};


// Class ConZ.MagnesiumDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UMagnesiumDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MagnesiumDeficiency");
		return ptr;
	}

};


// Class ConZ.MainMenuGameMode
// 0x0060 (0x0470 - 0x0410)
class AMainMenuGameMode : public AGameMode
{
public:
	class UClass*                                      MainMenuClass;                                            // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UUserWidget>                  _currentWidget;                                           // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0420(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MainMenuGameMode");
		return ptr;
	}


	void UpdatePreviewPrisoner(class APrisoner* Prisoner, class UUserProfile* profile);
	void UITransition(class UClass** newWidget);
};


// Class ConZ.MakeConsciousAction
// 0x0000 (0x00A8 - 0x00A8)
class UMakeConsciousAction : public UMedicalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MakeConsciousAction");
		return ptr;
	}

};


// Class ConZ.MakeUnconsciousAction
// 0x0000 (0x00A8 - 0x00A8)
class UMakeUnconsciousAction : public UMedicalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MakeUnconsciousAction");
		return ptr;
	}

};


// Class ConZ.MalariaDisease
// 0x0030 (0x01E0 - 0x01B0)
class UMalariaDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x01B0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MalariaDisease");
		return ptr;
	}

};


// Class ConZ.MalfunctionsContainerWidget
// 0x0010 (0x0230 - 0x0220)
class UMalfunctionsContainerWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      _malfunctionWidgetClass;                                  // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UVerticalBox*                                _malfunctionsList;                                        // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MalfunctionsContainerWidget");
		return ptr;
	}

};


// Class ConZ.MalfunctionWidget
// 0x0010 (0x0230 - 0x0220)
class UMalfunctionWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	class UTextBlock*                                  _descriptionWidget;                                       // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MalfunctionWidget");
		return ptr;
	}


	void ExecuteAction();
};


// Class ConZ.ManganeseDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UManganeseDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ManganeseDeficiency");
		return ptr;
	}

};


// Class ConZ.MechanoidsManager
// 0x0068 (0x0390 - 0x0328)
class AMechanoidsManager : public AActor
{
public:
	class UClass*                                      DroneSpawnClass;                                          // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DroneSpawnDistance;                                       // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DroneSpawnHeight;                                         // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DroneCheckForNearbyPlayerDistance;                        // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DronePatrolDistanceRange;                                 // 0x033C(0x0008) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x34];                                      // 0x0344(0x0034) MISSED OFFSET
	float                                              _minDroneTargetInitialVisitTime;                          // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxDroneTargetInitialVisitTime;                          // 0x037C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minDroneTargetRevisitTime;                               // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxDroneTargetRevisitTime;                               // 0x0384(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _droneVisitClusterRadius;                                 // 0x0388(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MechanoidsManager");
		return ptr;
	}


	void Drone_OnDestroyed(class AActor* sender);
};


// Class ConZ.MedicalBonusAction
// 0x0010 (0x00B8 - 0x00A8)
class UMedicalBonusAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MedicalBonusAction");
		return ptr;
	}

};


// Class ConZ.MedicalDiagnosisAction
// 0x0008 (0x00B0 - 0x00A8)
class UMedicalDiagnosisAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MedicalDiagnosisAction");
		return ptr;
	}

};


// Class ConZ.MedicalItemTag
// 0x0000 (0x0030 - 0x0030)
class UMedicalItemTag : public UBaseItemTag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MedicalItemTag");
		return ptr;
	}

};


// Class ConZ.MedicalSkill
// 0x0070 (0x0110 - 0x00A0)
class UMedicalSkill : public UIntelligenceSkill
{
public:
	class UMedicalItemTag*                             PatchLightWoundsTag;                                      // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             PatchSevereWoundsTag;                                     // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             ImmobilizeLimbsTag;                                       // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             MendBonesTag;                                             // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             PullToothTag;                                             // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             PerformLocalAnesthesiaTag;                                // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             PerformGeneralAnesthesiaTag;                              // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMedicalItemTag*                             PerformSurgeryTag;                                        // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x00E0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MedicalSkill");
		return ptr;
	}

};


// Class ConZ.MedicationItem
// 0x0008 (0x0870 - 0x0868)
class AMedicationItem : public AItem
{
public:
	EMedicationUsage                                   usage;                                                    // 0x0868(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMedicationType                                    Type;                                                     // 0x0869(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x086A(0x0002) MISSED OFFSET
	float                                              DailyDoses;                                               // 0x086C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MedicationItem");
		return ptr;
	}

};


// Class ConZ.MeleeAttackCollisionCapsule
// 0x0030 (0x05C0 - 0x0590)
class UMeleeAttackCollisionCapsule : public UCapsuleComponent
{
public:
	struct FGameplayTag                                _attachment;                                              // 0x0590(0x0008) (Edit)
	struct FMeleeWeaponDesc                            _weaponDesc;                                              // 0x0598(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeAttackCollisionCapsule");
		return ptr;
	}

};


// Class ConZ.MeleeCombatComponent
// 0x00F0 (0x01E0 - 0x00F0)
class UMeleeCombatComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xF0];                                      // 0x00F0(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeCombatComponent");
		return ptr;
	}


	void ToggleCombatMode();
	void SetIsInCombatMode(bool Value);
	void Server_StartMeleeAttack(const struct FMeleeAction& Action);
	void Server_EnablePendingBlockOrDodge(bool Value);
	void Server_Dodge(const struct FMeleeAction& Action);
	void NetMulticast_ExecuteMeleeAction(const struct FMeleeAction& Action);
	bool IsHoldingBlock();
	bool GetIsInCombatMode();
};


// Class ConZ.MeleeDamageType
// 0x0000 (0x0040 - 0x0040)
class UMeleeDamageType : public UDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeDamageType");
		return ptr;
	}

};


// Class ConZ.MeleeDetectHitCollisionCapsule
// 0x0010 (0x05A0 - 0x0590)
class UMeleeDetectHitCollisionCapsule : public UCapsuleComponent
{
public:
	EDetectHitCollisionType                            DetectHitCollisionType;                                   // 0x0590(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0591(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeDetectHitCollisionCapsule");
		return ptr;
	}

};


// Class ConZ.MeleeInterface
// 0x0000 (0x0028 - 0x0028)
class UMeleeInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeInterface");
		return ptr;
	}


	void OnBeingAttackedByMelee(const struct FAttackedByMeleeData& Data);
	bool CheckMeleeAttackCapsuleCollision(const struct FCheckMeleeAttackCapsuleCollisionData& Data);
	bool CanHoldBlock();
	bool CanBeAttackedByMelee();
};


// Class ConZ.MeleeSkillAnimationsPreset
// 0x04C0 (0x04F0 - 0x0030)
class UMeleeSkillAnimationsPreset : public UDataAsset
{
public:
	struct FMeleeSkillAnimations                       NoSkillAnimations;                                        // 0x0030(0x0098) (Edit)
	struct FMeleeSkillAnimations                       BasicSkillAnimations;                                     // 0x00C8(0x0098) (Edit)
	struct FMeleeSkillAnimations                       MediumSkillAnimations;                                    // 0x0160(0x0098) (Edit)
	struct FMeleeSkillAnimations                       AdvancedSkillAnimations;                                  // 0x01F8(0x0098) (Edit)
	struct FMeleeSkillParametersPerSkillLevel          NoSkillParameters;                                        // 0x0290(0x0098) (Edit)
	struct FMeleeSkillParametersPerSkillLevel          BasicSkillParameters;                                     // 0x0328(0x0098) (Edit)
	struct FMeleeSkillParametersPerSkillLevel          MediumSkillParameters;                                    // 0x03C0(0x0098) (Edit)
	struct FMeleeSkillParametersPerSkillLevel          AdvancedSkillParameters;                                  // 0x0458(0x0098) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeSkillAnimationsPreset");
		return ptr;
	}

};


// Class ConZ.MeleeWeaponItemTag
// 0x0008 (0x0038 - 0x0030)
class UMeleeWeaponItemTag : public UBaseItemTag
{
public:
	float                                              CombatAnimationPlayRateModifier;                          // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StrengthBelowWhichCombatPerformanceBeginsToDrop;          // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeWeaponItemTag");
		return ptr;
	}

};


// Class ConZ.MeleeWeaponsSkill
// 0x0000 (0x00F8 - 0x00F8)
class UMeleeWeaponsSkill : public UMeleeSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeleeWeaponsSkill");
		return ptr;
	}

};


// Class ConZ.MeningitisDisease
// 0x0000 (0x01B0 - 0x01B0)
class UMeningitisDisease : public UDisease
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MeningitisDisease");
		return ptr;
	}

};


// Class ConZ.MenuHelpers
// 0x0038 (0x0068 - 0x0030)
class UMenuHelpers : public UDataAsset
{
public:
	class UClass*                                      MainMenuClass;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ServerBrowserClass;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OptionsClass;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AdvancedOptionsClass;                                     // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CharacterCreationClass;                                   // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CharacterSelectionClass;                                  // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CharacterCreationSecondIterationClass;                    // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MenuHelpers");
		return ptr;
	}

};


// Class ConZ.MenuPlayerController
// 0x0000 (0x0678 - 0x0678)
class AMenuPlayerController : public APlayerController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MenuPlayerController");
		return ptr;
	}


	void InputComponent_MouseReleased();
	void InputComponent_MousePressed();
};


// Class ConZ.Mission
// 0x0248 (0x0570 - 0x0328)
class AMission : public AActor
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x0328(0x0090) MISSED OFFSET
	class AObjective*                                  _activeObjective;                                         // 0x03B8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              _missionObjectiveClasses;                                 // 0x03C0(0x0010) (Edit, ZeroConstructor)
	TMap<struct FString, class AObjective*>            _missionObjectiveAssets;                                  // 0x03D0(0x0050) (ZeroConstructor)
	TArray<class AObjective*>                          _missionObjectives;                                       // 0x0420(0x0010) (Net, ZeroConstructor)
	struct FText                                       _missionName;                                             // 0x0430(0x0018) (Edit)
	struct FText                                       _missionCategory;                                         // 0x0448(0x0018) (Edit)
	struct FText                                       _missionDescription;                                      // 0x0460(0x0018) (Edit)
	EMissionType                                       _missionType;                                             // 0x0478(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	int                                                _missionOrdinalNumber;                                    // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EMissionState                                      _missionState;                                            // 0x0480(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EFaction                                           _missionFaction;                                          // 0x0481(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0482(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x0482(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ConZ.Mission._missionLevel
	struct FMissionReward                              _missionRewards;                                          // 0x04B0(0x0018) (Edit)
	class UTexture2D*                                  _missionBannerImage;                                      // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x04D0(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.Mission._missionStartingLocations
	int                                                _intendedNumberOfPlayers;                                 // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _missionCooldownTime;                                     // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x04E8(0x0008) MISSED OFFSET
	class UClass*                                      _missionItemSpawnerClass;                                 // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FDialogueInfo>                       _missionIntroDialogues;                                   // 0x04F8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDialogueInfo>                       _missionOutroSuccessDialogues;                            // 0x0508(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDialogueInfo>                       _missionOutroFailDialogues;                               // 0x0518(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDialogueInfo>                       _missionOutroBelatedDialogues;                            // 0x0528(0x0010) (Edit, ZeroConstructor)
	bool                                               _canInterruptDialogue;                                    // 0x0538(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x37];                                      // 0x0539(0x0037) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Mission");
		return ptr;
	}


	void Server_NotifyObjectiveWidgetInitialized();
	void Server_NotifyObjectivesFinished();
	void Server_NotifyObjectiveDone(class AObjective* Objective, EObjectiveState ObjectiveState);
	void OnRep_MissionStateChanged();
	void OnRep_MissionObjectives();
	void OnRep_ActiveObjectiveChanged();
	void OnMissionUnavailable();
	void OnMissionStarted();
	void OnMissionLevelLoaded();
	void OnMissionFailed();
	void OnMissionCompleted();
	void OnMissionBelated();
	void OnMissionAvailable();
};


// Class ConZ.MissionContainerWidget
// 0x0028 (0x0230 - 0x0208)
class UMissionContainerWidget : public UUserWidget
{
public:
	class USizeBox*                                    _missionObjectivesSizeBox;                                // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _missionName;                                             // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                _objectivesWidgets;                                       // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0220(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionContainerWidget");
		return ptr;
	}


	void StartObjectiveAnimation(EObjectiveAnimationState AnimationState);
	class UWidgetAnimation* GetStartObjectiveAnimation();
	class UWidgetAnimation* GetCompleteObjectiveAnimation();
};


// Class ConZ.MissionDataGroup
// 0x0130 (0x0160 - 0x0030)
class UMissionDataGroup : public UDataAsset
{
public:
	struct FString                                     MissionRootPath;                                          // 0x0030(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               MissionStartedSound;                                      // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               MissionCompletedSound;                                    // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               MissionFailedSound;                                       // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ObjectiveStartedSound;                                    // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ObjectiveCompletedSound;                                  // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ObjectiveFailedSound;                                     // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, struct FMissionData>           MainStoryMissions;                                        // 0x0070(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<class UClass*, struct FMissionData>           SideStoryMissions;                                        // 0x00C0(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<class UClass*, struct FMissionData>           TutorialMissions;                                         // 0x0110(0x0050) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionDataGroup");
		return ptr;
	}

};


// Class ConZ.MissionDialogueManager
// 0x0038 (0x0360 - 0x0328)
class AMissionDialogueManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x24];                                      // 0x0328(0x0024) MISSED OFFSET
	float                                              _lineDurationModifier;                                    // 0x034C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _delayBetweenDialogues;                                   // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0354(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionDialogueManager");
		return ptr;
	}


	void StopAllDialogue();
	void PlayNextDialogue();
	void OnJournalTabModeOpened(ETabMode tabMode);
	void OnJournalTabModeClosed();
	void AddToQueue(TArray<struct FDialogueInfo> missionDialogue, bool interrupt);
};


// Class ConZ.MissionItemSpawner
// 0x0060 (0x0388 - 0x0328)
class AMissionItemSpawner : public AActor
{
public:
	TArray<struct FMissionItemInfo>                    _missionItemsInfo;                                        // 0x0328(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0338(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionItemSpawner");
		return ptr;
	}

};


// Class ConZ.MissionItemWidget
// 0x01E8 (0x03F0 - 0x0208)
class UMissionItemWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0208(0x0030) MISSED OFFSET
	class UTextBlock*                                  _missionItemName;                                         // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _missionItemCategory;                                     // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _selectionBorder;                                         // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _stateImageIcon;                                          // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     _expandButton;                                            // 0x0258(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _objectiveContentOverlay;                                 // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                _objectiveContainer;                                      // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  _availableMissionIcon;                                    // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _startedMissionIcon;                                      // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _completedMissionIcon;                                    // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _failedMissionIcon;                                       // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                _widgetNormalColor;                                       // 0x0290(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _widgetCompletedColor;                                    // 0x02A0(0x0010) (Edit, IsPlainOldData)
	float                                              _activeTextFontSize;                                      // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _inactiveTextFontSize;                                    // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _expandButtonOpenSound;                                   // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _expandButtonClosedSound;                                 // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC8];                                      // 0x02C8(0x00C8) MISSED OFFSET
	TMap<struct FString, TWeakObjectPtr<class UObjectiveItemWidget>> _objectiveItemWidgets;                                    // 0x0390(0x0050) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData02[0x10];                                      // 0x03E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionItemWidget");
		return ptr;
	}


	void OnExpandButtonClicked();
};


// Class ConZ.MissionLevelManager
// 0x0058 (0x0380 - 0x0328)
class AMissionLevelManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0328(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionLevelManager");
		return ptr;
	}

};


// Class ConZ.MissionManager
// 0x0180 (0x04A8 - 0x0328)
class AMissionManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0328(0x0020) MISSED OFFSET
	TMap<class UClass*, struct FMissionData>           _mainStoryMissions;                                       // 0x0348(0x0050) (ZeroConstructor)
	TMap<class UClass*, struct FMissionData>           _sideStoryMissions;                                       // 0x0398(0x0050) (ZeroConstructor)
	TMap<class UClass*, struct FMissionData>           _tutorialMissions;                                        // 0x03E8(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x1B];                                      // 0x0438(0x001B) MISSED OFFSET
	bool                                               _tutorialEnabled;                                         // 0x0453(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _tutorialDelay;                                           // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class AMission*                                    _activeMainStoryMission;                                  // 0x0460(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AMission*                                    _activeSideStoryMission;                                  // 0x0468(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AMission*                                    _activeTutorialMission;                                   // 0x0470(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AMission*                                    _availableMission;                                        // 0x0478(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	EMissionManagerState                               _missionManagerState;                                     // 0x0480(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x27];                                      // 0x0481(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionManager");
		return ptr;
	}


	void UntrackMission(EMissionType MissionType);
	void SwitchActiveMission(class UClass* missionClass);
	void Server_SendMissionInvitation(class AMissionManager* manager, class AMission* Mission);
	void Server_RewardsAccepted();
	void Server_DestroyCompletedMission(class AMission* Mission);
	void Server_AcceptMissionInvitation(class AMission* Mission, bool accepted);
	void OnRep_MissionManagerStateChanged();
	void OnRep_AvailableMissionChanged();
	void OnRep_ActiveTutorialMissionChanged();
	void OnRep_ActiveSideStoryMissionChanged();
	void OnRep_ActiveMainStoryMissionChanged();
	bool IsMissionInvitationReceived();
	void Client_UpdateMissionsData(class UClass* missionClass, const struct FMissionData& MissionData);
	void Client_StartTutorial();
	void Client_ShowMissionResultWidget(class AMission* Mission, bool completed);
	void Client_SendMissionInvitation(class AMissionManager* manager, class AMission* Mission);
};


// Class ConZ.MissionPrompt
// 0x0018 (0x0220 - 0x0208)
class UMissionPrompt : public UUserWidget
{
public:
	class UTextBlock*                                  _description;                                             // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0210(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionPrompt");
		return ptr;
	}


	void OnYesClicked();
	void OnNoClicked();
};


// Class ConZ.MissionResult
// 0x0020 (0x0228 - 0x0208)
class UMissionResult : public UUserWidget
{
public:
	class UOverlay*                                    _resultTitleOverlay;                                      // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _resultTitleDescription;                                  // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _resultRewardContainerOverlay;                            // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                _resultRewardContainer;                                   // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionResult");
		return ptr;
	}


	void PlayShowMissionResultAnimation();
};


// Class ConZ.MissionRewardWidget
// 0x0010 (0x0218 - 0x0208)
class UMissionRewardWidget : public UUserWidget
{
public:
	class UImage*                                      _rewardImage;                                             // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _rewardAmount;                                            // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionRewardWidget");
		return ptr;
	}

};


// Class ConZ.MissionScheduler
// 0x01C0 (0x04E8 - 0x0328)
class AMissionScheduler : public AActor
{
public:
	bool                                               _missionSchedulerEnabled;                                 // 0x0328(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	TMap<class UClass*, struct FMissionData>           _availableMainStoryMissions;                              // 0x0330(0x0050) (ZeroConstructor)
	TMap<class UClass*, struct FMissionData>           _availableSideStoryMissions;                              // 0x0380(0x0050) (ZeroConstructor)
	TMap<class UClass*, struct FMissionData>           _availableTutorialMissions;                               // 0x03D0(0x0050) (ZeroConstructor)
	float                                              _missionQueuingInterval;                                  // 0x0420(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC4];                                      // 0x0424(0x00C4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionScheduler");
		return ptr;
	}


	void OnLocationEnter(class AActor* OverlapedActor, class AActor* OtherActor);
};


// Class ConZ.MissionTabWidget
// 0x0090 (0x0298 - 0x0208)
class UMissionTabWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0208(0x0018) MISSED OFFSET
	class UTextBlock*                                  _tabNameText;                                             // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _backgroundImage;                                         // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USizeBox*                                    _sizeBox;                                                 // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FText                                       _tabName;                                                 // 0x0238(0x0018) (Edit)
	float                                              _activeTabHeight;                                         // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _inactiveTabHeight;                                       // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _activeFontSize;                                          // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _inactiveFontSize;                                        // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _activeBackgroundTexture;                                 // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  _inactiveBackgroundTexture;                               // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                _activeFontColor;                                         // 0x0270(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _inactiveFontColor;                                       // 0x0280(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0290(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MissionTabWidget");
		return ptr;
	}

};


// Class ConZ.MoundItem
// 0x0050 (0x08B8 - 0x0868)
class AMoundItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	struct FDbIntegerId                                _userProfileId;                                           // 0x0870(0x0008) (Net)
	class UClass*                                      _moundItemClass;                                          // 0x0878(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialBillboardComponent*                 _spriteMarkerBillboard;                                   // 0x0880(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    _distanceBasedDynMat;                                     // 0x0888(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      _surfaceType;                                             // 0x0890(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0891(0x0007) MISSED OFFSET
	int64_t                                            _timeToDecay;                                             // 0x0898(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _minStartFadeDistance;                                    // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxStartFadeDistance;                                    // 0x08A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minEndFadeDistance;                                      // 0x08A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxEndFadeDistance;                                      // 0x08AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _startFadeDistance;                                       // 0x08B0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _endFadeDistance;                                         // 0x08B4(0x0004) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MoundItem");
		return ptr;
	}


	void OnRep_SurfaceType();
	void OnRep_StartFadeDistance();
	void OnRep_OwnerProfileId();
	void OnRep_EndFadeDistance();
};


// Class ConZ.Mountable
// 0x0000 (0x0028 - 0x0028)
class UMountable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Mountable");
		return ptr;
	}


	void GetMountSlots(TArray<TScriptInterface<class UMountSlot>>* Result);
	TScriptInterface<class UMountSlot> ChooseSlotToMount(const TScriptInterface<class UMountee>& Mountee, struct FMountSlotEntryPoint* EntryPoint);
};


// Class ConZ.Mountee
// 0x0000 (0x0028 - 0x0028)
class UMountee : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Mountee");
		return ptr;
	}


	bool Unmount();
	bool Mount(const TScriptInterface<class UMountSlot>& Value);
	struct FTransform GetMounteeTransform();
	float GetMounteeMass();
	TScriptInterface<class UMountSlot> GetMountedSlot();
	bool CanUnmount();
	bool CanMount(const TScriptInterface<class UMountSlot>& Slot);
};


// Class ConZ.MountSlot
// 0x0000 (0x0028 - 0x0028)
class UMountSlot : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.MountSlot");
		return ptr;
	}


	bool IsReachableFromSky();
	void HandleUnmounted();
	void HandleMounted(const TScriptInterface<class UMountee>& Mountee);
	EMotionIntensity GetUnmountingMotionIntensity();
	class UAkAudioEvent* GetUnmountAudioEvent();
	struct FName GetSocketToMount();
	TScriptInterface<class UMountable> GetOwningMountable();
	int GetMountPriority();
	EMotionIntensity GetMountingMotionIntensity();
	struct FVector GetMounteeCenterOfMassOffset();
	TScriptInterface<class UMountee> GetMountee();
	class UAnimSequenceBase* GetMountedAnimation();
	class UAkAudioEvent* GetMountAudioEvent();
	float GetMinEffectiveMounteeMass();
	float GetMaxEffectiveMounteeMass();
	void GetEntryPoints(TArray<struct FMountSlotEntryPoint>* entryPoints);
	class USceneComponent* GetComponentToMount();
	bool CanUnmount();
	bool CanMounteeBeAttackedByMelee();
	bool CanMount(const TScriptInterface<class UMountee>& Mountee);
};


// Class ConZ.NativeWindowsContent
// 0x0008 (0x0228 - 0x0220)
class UNativeWindowsContent : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NativeWindowsContent");
		return ptr;
	}


	void TestText();
	void SetParentWindow(class UUserWidget* _parentWindow);
	class UUserWidget* GetParentWindow();
};


// Class ConZ.NetworkDataIdAsset
// 0x00A0 (0x00D0 - 0x0030)
class UNetworkDataIdAsset : public UDataAsset
{
public:
	TMap<uint32_t, struct FPrimaryAssetId>             IdToAssetMap;                                             // 0x0030(0x0050) (Edit, ZeroConstructor)
	TMap<struct FPrimaryAssetId, uint32_t>             AssetToIdMap;                                             // 0x0080(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NetworkDataIdAsset");
		return ptr;
	}

};


// Class ConZ.NightVisionGogglesItem
// 0x0030 (0x0958 - 0x0928)
class ANightVisionGogglesItem : public AClothesItem
{
public:
	class UStaticMesh*                                 EquippedStaticMeshWhenActivated;                          // 0x0928(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ActivatedSound;                                           // 0x0930(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               DeactivatedSound;                                         // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    ActivatedChanged;                                         // 0x0940(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               _isActivated;                                             // 0x0950(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0951(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NightVisionGogglesItem");
		return ptr;
	}


	void SetActivatedOnServer(bool Value);
	void OnRep_Activated();
	void ActivatedChangedEvent__DelegateSignature(class ANightVisionGogglesItem* sender);
};


// Class ConZ.NotificationsManager
// 0x00A8 (0x03D0 - 0x0328)
class ANotificationsManager : public AActor
{
public:
	TMap<struct FDbIntegerId, class UNotificationDescription*> _queuedNotifications;                                     // 0x0328(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0378(0x0050) MISSED OFFSET
	int64_t                                            _notificationTimeout;                                     // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NotificationsManager");
		return ptr;
	}


	void OnPlayerReadyToPlay(class AConZPlayerController* PlayerController);
	void NetMulticast_RequestNotification(const struct FNotificationDescriptionReplicationHelper& Description);
};


// Class ConZ.NotificationWidget
// 0x0008 (0x0228 - 0x0220)
class UNotificationWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NotificationWidget");
		return ptr;
	}

};


// Class ConZ.NotificationPanelWidget
// 0x0000 (0x0220 - 0x0220)
class UNotificationPanelWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.NotificationPanelWidget");
		return ptr;
	}


	void ShowNotification(class UNotificationWidget* notification);
	void ClearAllNotifications();
};


// Class ConZ.ObjectiveItemWidget
// 0x0078 (0x0280 - 0x0208)
class UObjectiveItemWidget : public UUserWidget
{
public:
	class UTextBlock*                                  _objectiveItemText;                                       // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _bullet;                                                  // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _bulletCompleted;                                         // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                _objectiveActiveColor;                                    // 0x0220(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _objectiveCompletedColor;                                 // 0x0230(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                _objectiveFailedColor;                                    // 0x0240(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0250(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ObjectiveItemWidget");
		return ptr;
	}

};


// Class ConZ.ObjectivesContainerWidget
// 0x0018 (0x0220 - 0x0208)
class UObjectivesContainerWidget : public UUserWidget
{
public:
	class UMissionContainerWidget*                     _mainMissionContainerWidget;                              // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionContainerWidget*                     _sideMissionContainerWidget;                              // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionContainerWidget*                     _tutorialMissionContainerWidget;                          // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ObjectivesContainerWidget");
		return ptr;
	}

};


// Class ConZ.ObjectivesWidget
// 0x0060 (0x0268 - 0x0208)
class UObjectivesWidget : public UUserWidget
{
public:
	class UTextBlock*                                  _objectiveDescription;                                    // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              _amountTracker;                                           // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _currentAmount;                                           // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _totalAmount;                                             // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                activeObjectiveFontColor;                                 // 0x0228(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                inctiveObjectiveFontColor;                                // 0x0238(0x0010) (Edit, IsPlainOldData)
	int                                                activeObjectiveFontSize;                                  // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                inactiveObjectiveFontSize;                                // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0250(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ObjectivesWidget");
		return ptr;
	}

};


// Class ConZ.OpenItemAction
// 0x0010 (0x00B8 - 0x00A8)
class UOpenItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.OpenItemAction");
		return ptr;
	}

};


// Class ConZ.InputDataAsset
// 0x0020 (0x0050 - 0x0030)
class UInputDataAsset : public UDataAsset
{
public:
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                           // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                             // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.InputDataAsset");
		return ptr;
	}

};


// Class ConZ.OptionsWidget
// 0x0020 (0x0240 - 0x0220)
class UOptionsWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0220(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.OptionsWidget");
		return ptr;
	}


	void STATIC_SetRestartNeeded(bool Value);
	void SetMouseSensitivity(EMouseSensitivityMode Mode, float Value);
	void SetInvertMouseY(bool invert);
	void SetFOVMultiplier(float Value);
	void RevertControlChanges();
	void ResetControlsToDefault();
	bool STATIC_IsRestartNeeded();
	struct FString GetResolutionStringFormatted(const struct FString& string);
	float GetMouseSensitivity(EMouseSensitivityMode Mode);
	float GetFOVMultiplier();
	TArray<struct FInputAxisKeyMapping> GetAxisMappings();
	struct FInputAxisKeyMapping GetAxisMappingForAxisName(const struct FName& AxisName, float Scale);
	TArray<struct FInputActionKeyMapping> GetActionMappings();
	struct FInputActionKeyMapping GetActionMappingForActionName(const struct FName& ActionName);
	void ChangeAxisMapping(const struct FName& AxisName, const struct FKey& Key, float Scale);
	void ChangeActionMapping(const struct FName& ActionName, const struct FKey& Key);
	void ApplyControlChanges();
};


// Class ConZ.OverdoseSickness
// 0x0008 (0x01B8 - 0x01B0)
class UOverdoseSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.OverdoseSickness");
		return ptr;
	}

};


// Class ConZ.OvereatingSickness
// 0x0030 (0x01E0 - 0x01B0)
class UOvereatingSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x01B0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.OvereatingSickness");
		return ptr;
	}

};


// Class ConZ.PacifyAnimalAction
// 0x0000 (0x00A8 - 0x00A8)
class UPacifyAnimalAction : public UAnimalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PacifyAnimalAction");
		return ptr;
	}

};


// Class ConZ.PatchWoundsAction
// 0x0010 (0x00B8 - 0x00A8)
class UPatchWoundsAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PatchWoundsAction");
		return ptr;
	}

};


// Class ConZ.PAX_GameEventManager
// 0x0048 (0x03B0 - 0x0368)
class APAX_GameEventManager : public AGameEventManager
{
public:
	class AGameEventLocationMarker*                    EventMarker;                                              // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenEvents;                                        // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ForceJoinOnEventStart;                                    // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0375(0x0003) MISSED OFFSET
	class UClass*                                      ShootingRangeTableClass;                                  // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ADropZoneEquipmentTable*                     ShootingRangeTable;                                       // 0x0380(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShootingRangeTableOffset;                                 // 0x0388(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0394(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PAX_GameEventManager");
		return ptr;
	}


	void ForceUnjoinedParticipantsIntoEvent();
};


// Class ConZ.PerformAnesthesiaAction
// 0x0008 (0x00B0 - 0x00A8)
class UPerformAnesthesiaAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PerformAnesthesiaAction");
		return ptr;
	}

};


// Class ConZ.PerformSurgeryAction
// 0x0000 (0x00A8 - 0x00A8)
class UPerformSurgeryAction : public UMedicalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PerformSurgeryAction");
		return ptr;
	}

};


// Class ConZ.PhosphorusDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UPhosphorusDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PhosphorusDeficiency");
		return ptr;
	}

};


// Class ConZ.PhysicalSurfacesData
// 0x0270 (0x02A0 - 0x0030)
class UPhysicalSurfacesData : public UDataAsset
{
public:
	struct FPhysicalSurfaceData                        Default;                                                  // 0x0030(0x0010) (Edit)
	struct FPhysicalSurfaceData                        grass;                                                    // 0x0040(0x0010) (Edit)
	struct FPhysicalSurfaceData                        ForrestGroundCoastal;                                     // 0x0050(0x0010) (Edit)
	struct FPhysicalSurfaceData                        ForrestGroundContinental;                                 // 0x0060(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Rock;                                                     // 0x0070(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Stone;                                                    // 0x0080(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Gravel;                                                   // 0x0090(0x0010) (Edit)
	struct FPhysicalSurfaceData                        GravelBeach;                                              // 0x00A0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Pebbles;                                                  // 0x00B0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Snow;                                                     // 0x00C0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Ice;                                                      // 0x00D0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Sand;                                                     // 0x00E0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Asphalt;                                                  // 0x00F0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Dirt;                                                     // 0x0100(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Water;                                                    // 0x0110(0x0010) (Edit)
	struct FPhysicalSurfaceData                        WaterOcean;                                               // 0x0120(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Cloth;                                                    // 0x0130(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Metal;                                                    // 0x0140(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Aluminium;                                                // 0x0150(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Concrete;                                                 // 0x0160(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Brick;                                                    // 0x0170(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Wood;                                                     // 0x0180(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Plastic;                                                  // 0x0190(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Rubber;                                                   // 0x01A0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Glass;                                                    // 0x01B0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Foliage;                                                  // 0x01C0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Bark;                                                     // 0x01D0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Flesh;                                                    // 0x01E0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        RoofTile;                                                 // 0x01F0(0x0010) (Edit)
	struct FPhysicalSurfaceData                        CeramicTiles;                                             // 0x0200(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Scrap;                                                    // 0x0210(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Trunk;                                                    // 0x0220(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Leaves;                                                   // 0x0230(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Fruit;                                                    // 0x0240(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Cardboard;                                                // 0x0250(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Plaster;                                                  // 0x0260(0x0010) (Edit)
	struct FPhysicalSurfaceData                        Kevlar;                                                   // 0x0270(0x0010) (Edit)
	struct FPhysicalSurfaceData                        ForceField;                                               // 0x0280(0x0010) (Edit)
	struct FPhysicalSurfaceData                        NoEffect;                                                 // 0x0290(0x0010) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PhysicalSurfacesData");
		return ptr;
	}

};


// Class ConZ.PhysicalSurfacesEffectsData
// 0x04E0 (0x0510 - 0x0030)
class UPhysicalSurfacesEffectsData : public UDataAsset
{
public:
	struct FPhysicalSurfaceEffectsData                 Default;                                                  // 0x0030(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 grass;                                                    // 0x0050(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 ForrestGroundCoastal;                                     // 0x0070(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 ForrestGroundContinental;                                 // 0x0090(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Rock;                                                     // 0x00B0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Stone;                                                    // 0x00D0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Gravel;                                                   // 0x00F0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 GravelBeach;                                              // 0x0110(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Pebbles;                                                  // 0x0130(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Snow;                                                     // 0x0150(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Ice;                                                      // 0x0170(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Sand;                                                     // 0x0190(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Asphalt;                                                  // 0x01B0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Dirt;                                                     // 0x01D0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Water;                                                    // 0x01F0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 WaterOcean;                                               // 0x0210(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Cloth;                                                    // 0x0230(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Metal;                                                    // 0x0250(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Aluminium;                                                // 0x0270(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Concrete;                                                 // 0x0290(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Brick;                                                    // 0x02B0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Wood;                                                     // 0x02D0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Plastic;                                                  // 0x02F0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Rubber;                                                   // 0x0310(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Glass;                                                    // 0x0330(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Foliage;                                                  // 0x0350(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Bark;                                                     // 0x0370(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Flesh;                                                    // 0x0390(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 RoofTile;                                                 // 0x03B0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 CeramicTiles;                                             // 0x03D0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Scrap;                                                    // 0x03F0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Trunk;                                                    // 0x0410(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Leaves;                                                   // 0x0430(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Fruit;                                                    // 0x0450(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Cardboard;                                                // 0x0470(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Plaster;                                                  // 0x0490(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 Kevlar;                                                   // 0x04B0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 ForceField;                                               // 0x04D0(0x0020) (Edit)
	struct FPhysicalSurfaceEffectsData                 NoEffect;                                                 // 0x04F0(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PhysicalSurfacesEffectsData");
		return ptr;
	}

};


// Class ConZ.PickupItemAction
// 0x0000 (0x00A8 - 0x00A8)
class UPickupItemAction : public UInteractionAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PickupItemAction");
		return ptr;
	}

};


// Class ConZ.PickupItemAssetData
// 0x0008 (0x0038 - 0x0030)
class UPickupItemAssetData : public UInteractionAssetData
{
public:
	class UClass*                                      Item;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PickupItemAssetData");
		return ptr;
	}

};


// Class ConZ.PlaceableActor
// 0x01D0 (0x04F8 - 0x0328)
class APlaceableActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	class UTextRenderComponent*                        _debugTextRenderComponent;                                // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _staticMeshComponent;                                     // 0x0340(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _queryStaticMeshComponent;                                // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _directionIndicatorStaticMeshComponent;                   // 0x0350(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHierarchicalInstancedStaticMeshComponent*   _instancedMeshComponent;                                  // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0360(0x0038) MISSED OFFSET
	class UBoxComponent*                               _boxCollisionComponent;                                   // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _cubeMeshComponent;                                       // 0x03A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      _actorTypeToSpawn;                                        // 0x03A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET
	class UClass*                                      _fortificationTypeToSpawn;                                // 0x03B8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FPlaceableIngredient>                _ingredients;                                             // 0x03C0(0x0010) (Net, ZeroConstructor)
	EPlacementState                                    _placementState;                                          // 0x03D0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03D1(0x0003) MISSED OFFSET
	struct FVector                                     _desiredLocation;                                         // 0x03D4(0x000C) (Net, IsPlainOldData)
	struct FRotator                                    _desiredRotation;                                         // 0x03E0(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x03EC(0x0010) MISSED OFFSET
	int                                                _craftingIndex;                                           // 0x03FC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isPlacementAllowed;                                      // 0x0400(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x67];                                      // 0x0401(0x0067) MISSED OFFSET
	class UClass*                                      _baseBuildingBlockToSpawn;                                // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x40];                                      // 0x0470(0x0040) MISSED OFFSET
	struct FVector                                     _secondPlacedPointZero;                                   // 0x04B0(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	TArray<struct FTransform>                          _tilesTransforms;                                         // 0x04C0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData08[0x28];                                      // 0x04D0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActor");
		return ptr;
	}


	void Server_SetDesiredPlacement(const struct FVector& Location, const struct FRotator& Rotation, bool allowed);
	void Server_Place(const struct FVector& Location, const struct FRotator& Rotation, TArray<struct FTransform> tilesTransforms, const struct FVector& secondPlacementPointZero);
	void OnRep_TilesTransforms();
	void OnRep_PlacementState();
	void OnRep_Ingredients();
	void OnRep_CraftingIndex();
};


// Class ConZ.PlaceableActorBaseReplicatedState
// 0x0028 (0x0050 - 0x0028)
class UPlaceableActorBaseReplicatedState : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseReplicatedState");
		return ptr;
	}

};


// Class ConZ.PlaceableActorBase
// 0x0248 (0x0570 - 0x0328)
class APlaceableActorBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	struct FDbIntegerId                                _id;                                                      // 0x0330(0x0008) (Net)
	class UBoxComponent*                               _boxCollisionComponent;                                   // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0340(0x0001) MISSED OFFSET
	bool                                               _isPlacementAllowed;                                      // 0x0341(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0342(0x0002) MISSED OFFSET
	int                                                _craftingIndex;                                           // 0x0344(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _ingredientMultiplier;                                    // 0x0348(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	class USceneComponent*                             _rootComponent;                                           // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _staticMeshComponent_2;                                   // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _staticMeshComponent_3;                                   // 0x0360(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _staticMeshComponent_4;                                   // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _queryStaticMeshComponent;                                // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _directionIndicatorStaticMeshComponent;                   // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    _primaryMaterialAllowed;                                  // 0x0380(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    _primaryMaterialDisallowed;                               // 0x0388(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    _outlineMaterial;                                         // 0x0390(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    _depthMaterial;                                           // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x128];                                     // 0x03A0(0x0128) MISSED OFFSET
	int                                                _numTracesX;                                              // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _numTracesY;                                              // 0x04CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _traceHeightFactor;                                       // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxPlacementAngle;                                       // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _widgetHidingDistance;                                    // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _fullWidgetHidingDistance;                                // 0x04DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _widgetSwitchPeriod;                                      // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _syncPeriod;                                              // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _reachabilityVerticalOffset;                              // 0x04E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _reachabilityMaxDifference;                               // 0x04EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _directionIndicatorSize;                                  // 0x04F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _directionIndicatorOffset;                                // 0x04F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x04F8(0x0008) MISSED OFFSET
	EPlacementBaseState                                _placementState;                                          // 0x0500(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0501(0x0003) MISSED OFFSET
	struct FVector                                     _replicatedLocation;                                      // 0x0504(0x000C) (Net, IsPlainOldData)
	struct FVector                                     _replicatedPlacedLocation;                                // 0x0510(0x000C) (Net, IsPlainOldData)
	struct FRotator                                    _replicatedRotation;                                      // 0x051C(0x000C) (Net, IsPlainOldData)
	TArray<struct FPlaceableIngredient>                _ingredients;                                             // 0x0528(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData07[0x38];                                      // 0x0538(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActorBase");
		return ptr;
	}


	void Server_UpdateState(const struct FPlaceableActorStateReplicationHelper& State);
	void Server_Place(const struct FVector& Location, const struct FRotator& Rotation);
	void OnRep_ReplicatedRotation();
	void OnRep_ReplicatedPlacedLocation();
	void OnRep_ReplicatedLocation();
	void OnRep_PlacementState();
	void OnRep_Ingredients();
	void OnRep_IngredientMultiplier();
	void OnRep_Id();
	void OnRep_CraftingIndex();
};


// Class ConZ.PlaceableActorBaseBuildingReplicatedState
// 0x0010 (0x0060 - 0x0050)
class UPlaceableActorBaseBuildingReplicatedState : public UPlaceableActorBaseReplicatedState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseBuildingReplicatedState");
		return ptr;
	}

};


// Class ConZ.PlaceableActorBaseBuilding
// 0x0080 (0x05F0 - 0x0570)
class APlaceableActorBaseBuilding : public APlaceableActorBase
{
public:
	int                                                _maxNumberOfTiles;                                        // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxHeightDifferenceForTiling;                            // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxTileHeightAdjustionUp;                                // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxTileHeightAdjustionDown;                              // 0x057C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0580(0x0028) MISSED OFFSET
	class UHierarchicalInstancedStaticMeshComponent*   _instancedMeshComponent_2;                                // 0x05A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHierarchicalInstancedStaticMeshComponent*   _instancedMeshComponent_3;                                // 0x05B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHierarchicalInstancedStaticMeshComponent*   _instancedMeshComponent_4;                                // 0x05B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        _flagAreaMeshComponent;                                   // 0x05C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    _primaryMaterialFriendlyFlag;                             // 0x05C8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     _replicatedFirstPointLocation;                            // 0x05D0(0x000C) (Net, IsPlainOldData)
	EPlacementBaseBuildingState                        _placementSubState;                                       // 0x05DC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x13];                                      // 0x05DD(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseBuilding");
		return ptr;
	}


	void OnRep_ReplicatedFirstPointLocation();
	void OnRep_PlacementSubState();
};


// Class ConZ.PlaceableActorFortifications
// 0x0030 (0x05A0 - 0x0570)
class APlaceableActorFortifications : public APlaceableActorBase
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0570(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActorFortifications");
		return ptr;
	}

};


// Class ConZ.PlaceableActorItems
// 0x0008 (0x0578 - 0x0570)
class APlaceableActorItems : public APlaceableActorBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0570(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableActorItems");
		return ptr;
	}

};


// Class ConZ.PlaceableElementWidget
// 0x0010 (0x0230 - 0x0220)
class UPlaceableElementWidget : public UDesignableUserWidget
{
public:
	class UImage*                                      _icon;                                                    // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0228(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlaceableElementWidget");
		return ptr;
	}


	void Init(class APlaceableActorBase* PlaceableActor);
	void DestroyPlaceable();
};


// Class ConZ.PlacedPlaceableWidget
// 0x0058 (0x0278 - 0x0220)
class UPlacedPlaceableWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0220(0x0050) MISSED OFFSET
	class UVerticalBox*                                _container;                                               // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlacedPlaceableWidget");
		return ptr;
	}


	void BP_RemovePlaceable(class UTexture2D* Icon);
	void BP_AddPlaceable(class UTexture2D* Icon);
};


// Class ConZ.PlayableInstrument
// 0x0000 (0x0028 - 0x0028)
class UPlayableInstrument : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlayableInstrument");
		return ptr;
	}

};


// Class ConZ.PlayEffectsWhenParticleCollides
// 0x0008 (0x0030 - 0x0028)
class UPlayEffectsWhenParticleCollides : public UParticleModuleEventSendToGame
{
public:
	class UProjectileImpactEffects*                    ImpactEffects;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlayEffectsWhenParticleCollides");
		return ptr;
	}

};


// Class ConZ.PlayerRpcChannel
// 0x0000 (0x00F0 - 0x00F0)
class UPlayerRpcChannel : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PlayerRpcChannel");
		return ptr;
	}


	void TrapItem_Server_TriggerTrap(class ATrapItem* TrapItem, const struct FTrapTriggerParams& Params);
	void TrapItem_Server_DisarmTrap(class ATrapItem* TrapItem);
	void SurvivalStats_Server_HandlePlayerLogout(class APlayerController* PlayerController);
	void SurvivalStats_Server_HandlePlayerLogin(class APlayerController* PlayerController);
	void Sledge_Server_SendState(class ASledge* Sledge, const struct FRigidBodyState& State, uint32_t controls);
	void Skill_Server_IncreaseExperiencePoints(class APrisoner* Prisoner, class UClass* skillClass, float ExperiencePoints);
	void Server_UntrackMission(EMissionType MissionType);
	void Server_UnsubscribeFromUnachievedAchievements(class APlayerController* PlayerController, TArray<struct FString> achievementsIds);
	void Server_UnlockedAchievement(class APlayerController* PlayerController, const struct FString& AchievementID);
	void Server_SwitchActiveMission(class UClass* missionClass);
	void Server_ResetMission(class UClass* missionClass, EMissionType MissionType, bool restartMission);
	void Server_ReportUnachievedAchievements(class APlayerController* PlayerController, TArray<struct FString> achievementsIds);
	void Server_MakeNoise(class AActor* targetActor, float Loudness, class APawn* Instigator, const struct FVector& ImpactPoint);
	void Notifications_RequestNotification(const struct FNotificationDescriptionReplicationHelper& Description);
	void ItemWithText_Server_RequestStateUpdate(class AItemWithText* Item);
	void ItemWithText_Client_UpdateState(class AItemWithText* Item, const struct FString& OwnerName);
	void InteractWithObjectOnServer(class UObject* interactable, class APrisoner* User, EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void Client_UnlockAchievement(class APlayerController* PlayerController, const struct FString& AchievementID);
	void Client_IncreaseStat(class APlayerController* PlayerController, const struct FString& statId);
	void BaseBuilding_Server_RequestElementStateUpdate(const struct FVector& Location, float areaSize);
	void BaseBuilding_Client_UpdateElementState(const struct FVector& Location, float areaSize, TArray<struct FConZOnDemandElementData> Data);
	void AdminCommands_Client_ListSpawnedVehicles(class APlayerController* Controller, TArray<struct FVehicleSpawnerInfo> spawnerInfos, bool shouldCopyToClientClipboard);
};


// Class ConZ.PotassiumDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UPotassiumDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PotassiumDeficiency");
		return ptr;
	}

};


// Class ConZ.PowerGenerator
// 0x0068 (0x0390 - 0x0328)
class APowerGenerator : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<class ADoor*>                               AttachedDoors;                                            // 0x0330(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AElectricalDevice*>                   AttachedDevices;                                          // 0x0340(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AFuelTank*>                           FuelTanks;                                                // 0x0350(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              IdleFuelConsumption;                                      // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxFuelConsumption;                                       // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxOutputPower;                                           // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             SoundComponent;                                           // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _rootComponent;                                           // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               _canWork;                                                 // 0x0388(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isWorking;                                               // 0x0389(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x038A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PowerGenerator");
		return ptr;
	}


	void OnRep_IsWorking();
};


// Class ConZ.PreviousNextSwitchWidget
// 0x0030 (0x0250 - 0x0220)
class UPreviousNextSwitchWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    IndexChanged;                                             // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UButton*                                     PreviousButton;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     NextButton;                                               // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	int                                                _index;                                                   // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PreviousNextSwitchWidget");
		return ptr;
	}


	void SwitchToPrevious();
	void SwitchToNext();
	void OnSwitchClickedDelegate__DelegateSignature(int widgetArrayIndex, int Index);
};


// Class ConZ.Prisoner
// 0x1A60 (0x2390 - 0x0930)
class APrisoner : public AConZCharacter
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0930(0x0020) MISSED OFFSET
	class UPrisonerLifeComponent*                      LifeComponent;                                            // 0x0950(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrisonerSkillComponent*                     SkillComponent;                                           // 0x0958(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrisonerInventoryComponent*                 InventoryComponent;                                       // 0x0960(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMeleeCombatComponent*                       MeleeCombatComponent;                                     // 0x0968(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHitReactComponent*                          HitReactComponent;                                        // 0x0970(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPhysicalAnimationComponent*                 PhysicalAnimationComponent;                               // 0x0978(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UInteractionComponent*                       InteractionComponent;                                     // 0x0980(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnSensingComponent*                       SensingComponent;                                         // 0x0988(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      FemaleAnimationInstance;                                  // 0x0990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MaleAnimationInstance;                                    // 0x0998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxActorEyesOffsetWhenLeaning;                            // 0x09A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfCrouchStages;                                     // 0x09A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchStagesInterpSpeed;                                  // 0x09A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09AC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 CrouchViewsAdditionalGlobalOffsetZVsCrouchStage;          // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneEyeHeight;                                           // 0x09B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneEyeForwardOffset;                                    // 0x09BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SittingOnGroundEyeHeight;                                 // 0x09C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LyingOnGroundEyeHeight;                                   // 0x09C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RestingOnGroundBackwardOffset;                            // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              DefaultPace;                                              // 0x09CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x09CD(0x0003) MISSED OFFSET
	class UPrisonerMovementSettings*                   MovementSettings;                                         // 0x09D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Fatness;                                                  // 0x09D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Leanness;                                                 // 0x09DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreMovementSettings;                                   // 0x09E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OverrideAimOffset;                                        // 0x09E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x09E2(0x0002) MISSED OFFSET
	struct FRotator                                    AimOffsetOverride;                                        // 0x09E4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              DefaultViewBlendDuration;                                 // 0x09F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x09F4(0x0004) MISSED OFFSET
	class AActor*                                      EyesLookAtTargetOverride;                                 // 0x09F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinEyesRotationYaw;                                       // 0x0A00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxEyesRotationYaw;                                       // 0x0A04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinEyesRotationPitch;                                     // 0x0A08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxEyesRotationPitch;                                     // 0x0A0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MinEyesRotationPitchCurve;                                // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MaxEyesRotationPitchCurve;                                // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EyesRotationSpeed;                                        // 0x0A20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DebugEyesRotation;                                        // 0x0A24(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OverrideEyesRotation;                                     // 0x0A25(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0A26(0x0002) MISSED OFFSET
	float                                              EyesYawDeltaOverride;                                     // 0x0A28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EyesPitchDeltaOverride;                                   // 0x0A2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ColdBreathParticles;                                      // 0x0A30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ColdBreathParticlesAttachPointName;                       // 0x0A38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           StandardUndershirtMaterial;                               // 0x0A40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           DeluxeUndershirtMaterial;                                 // 0x0A48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               JumpAudioEvent;                                           // 0x0A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingImpactSpeedVelocityXYWeight;                       // 0x0A58(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingImpactSpeedVelocityZWeight;                        // 0x0A5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LandingStaminaDrainCurve;                                 // 0x0A60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LandingImpactSpeedModifierCurveForHitReact;               // 0x0A68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LandingImpactSpeedModifierCurveForDamage;                 // 0x0A70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LandingDamageCurve;                                       // 0x0A78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ULandingEffects*                             LandingEffects;                                           // 0x0A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingImpactSpeedForRagdoll;                             // 0x0A88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingMinRagdollDuration;                                // 0x0A8C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingMaxRagdollDuration;                                // 0x0A90(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandingRagdollDurationPerSpeedUnit;                       // 0x0A94(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterParticlesWhenIdle;                                   // 0x0A98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterParticlesWhenIdleInOcean;                            // 0x0AA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterParticlesWhenMoving;                                 // 0x0AA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterParticlesWhenMovingInOcean;                          // 0x0AB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterParticlesWhenDiving;                                 // 0x0AB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       WaterParticlesWhenDivingAttachPointName;                  // 0x0AC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterContactParticles;                                    // 0x0AC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       WaterContactParticlesAttachPointName;                     // 0x0AD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinVelocityZToSpawnWaterContactParticles;                 // 0x0AD8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0ADC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 BuoyancyMultiplierVsGearWeightLimitDeviation;             // 0x0AE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartedDivingAudioEvent;                                  // 0x0AE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StoppedDivingAudioEvent;                                  // 0x0AF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EndDivingOnPlayAudioEvent;                                // 0x0AF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxHeadWaterWeight;                                       // 0x0B00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxUpperBodyWaterWeight;                                  // 0x0B04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxLowerBodyWaterWeight;                                  // 0x0B08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxFeetWaterWeight;                                       // 0x0B0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OutwardsWaterPropagationFactor;                           // 0x0B10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InwardsWaterPropagationRate;                              // 0x0B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OutwardsWaterPropagationRate;                             // 0x0B18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0B1C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 GettingDryRateVsSpeed;                                    // 0x0B20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             SmallBleedingEffect;                                      // 0x0B28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             LargeBleedingEffect;                                      // 0x0B30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             UrineParticles;                                           // 0x0B38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       UrineParticlesAttachPointName;                            // 0x0B40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       UrineParticlesAttachPointSmallestName;                    // 0x0B48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       UrineParticlesAttachPointBiggestName;                     // 0x0B50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       UrineParticlesAttachPointFemaleName;                      // 0x0B58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DetectNearbyFoliageRadius;                                // 0x0B60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinLocationDeltaToUpdateNearbyFoliage;                    // 0x0B64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedToTriggerMovingThroughFoliageEffects;             // 0x0B68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinAngularSpeedToTriggerMovingThroughFoliageEffects;      // 0x0B6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               OpenInventoryAudioEvent;                                  // 0x0B70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               CloseInventoryAudioEvent;                                 // 0x0B78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BulletFlybyDangerCooldown;                                // 0x0B80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadExplodeDamageThreshold;                               // 0x0B84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDangerCooldown;                                      // 0x0B88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDangerRadius;                                        // 0x0B8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDangerAngle;                                         // 0x0B90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsFriendly;                                               // 0x0B94(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0B95(0x0003) MISSED OFFSET
	struct FGameplayTag                                HitReactTypeWhenStanding;                                 // 0x0B98(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                HitReactTypeWhenStandingInCombatMode;                     // 0x0BA0(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                HitReactTypeWhenStandingInCombatModeAndHoldingBlock;      // 0x0BA8(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                HitReactTypeWhenCrouching;                                // 0x0BB0(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                HitReactTypeWhenProne;                                    // 0x0BB8(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                HitReactTypeWhenCaptured;                                 // 0x0BC0(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                MeleeAttackCapsulesAttachmentForItemInLHand;              // 0x0BC8(0x0008) (Edit, BlueprintVisible)
	struct FGameplayTag                                MeleeAttackCapsulesAttachmentForItemInRHand;              // 0x0BD0(0x0008) (Edit, BlueprintVisible)
	struct FPrisonerMeleeAttackTypes                   MeleeAttackTypes;                                         // 0x0BD8(0x0080) (Edit, BlueprintVisible)
	float                                              MeleeTargetMaxDistance;                                   // 0x0C58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeTargetMaxHeightDifference;                           // 0x0C5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MeleeTargetMaxConeHalfAngleVsDistanceToTarget;            // 0x0C60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeSpanAfterWhichMeleeAttacksBecomeInitial;              // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               CanEverBeKnockedOutByMeleeAttack;                         // 0x0C6C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0C6D(0x0003) MISSED OFFSET
	TMap<EDamageMagnitudeType, float>                  MeleeHitRagdollImpulseByDamageMagnitudeType;              // 0x0C70(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              DefaultMeleeHitRagdollImpulse;                            // 0x0CC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ThrowModeActivationDelay;                                 // 0x0CC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ThrowLaunchLocationSocketName;                            // 0x0CC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ThrowingPathBrightnessFromTimeCurve;                      // 0x0CD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IslandBoundsCheckInterval;                                // 0x0CD8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldOverrideCharacterTemplate;                          // 0x0CDC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0CDD(0x0003) MISSED OFFSET
	struct FCharacterTemplate                          CharacterTemplateOverride;                                // 0x0CE0(0x0088) (Edit)
	struct FAttachmentSocket                           LeftHandAttachmentSocket;                                 // 0x0D68(0x0010) (Edit)
	struct FAttachmentSocket                           RightHandAttachmentSocket;                                // 0x0D78(0x0010) (Edit)
	struct FAttachmentSocket                           LeftShoulderHolsterSocket;                                // 0x0D88(0x0010) (Edit)
	struct FAttachmentSocket                           RightShoulderHolsterSocket;                               // 0x0D98(0x0010) (Edit)
	class UPhysicalSurfacesData*                       PhysicalSurfacesData;                                     // 0x0DA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0xA8];                                      // 0x0DB0(0x00A8) MISSED OFFSET
	struct FScriptMulticastDelegate                    TabModeOpened;                                            // 0x0E58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    TabModeClosed;                                            // 0x0E68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PanelsClosed;                                             // 0x0E78(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    HoveredActorChanged;                                      // 0x0E88(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    InteractedWithObject;                                     // 0x0E98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               RespawnOnKill;                                            // 0x0EA8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0EA9(0x0003) MISSED OFFSET
	float                                              IKOffsetLeftFoot;                                         // 0x0EAC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IKOffsetRightFoot;                                        // 0x0EB0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0EB4(0x0004) MISSED OFFSET
	class UClass*                                      _deluxeWristwatchClass;                                   // 0x0EB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EPrisonerBorderCrossingPenalty                     BorderCrossingPenalty;                                    // 0x0EC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0EC1(0x0007) MISSED OFFSET
	class UClass*                                      ScopeWidget;                                              // 0x0EC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlaceableActorItemsClass;                                 // 0x0ED0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlaceableActorFortificationsClass;                        // 0x0ED8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlaceableActorBaseBuildingClass;                          // 0x0EE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxPossiblePlacedBlueprints;                              // 0x0EE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0EEC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    BorderCrossingPenaltyChange;                              // 0x0EF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData16[0x58];                                      // 0x0F00(0x0058) MISSED OFFSET
	class UPrisonerAppearanceDataAsset*                _appearanceDataAsset;                                     // 0x0F58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<EPrisonerBorderCrossingPenalty, float>        _leavingTheIslandPenaltyTimes;                            // 0x0F60(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0FB0(0x0004) MISSED OFFSET
	float                                              _gameEventOutOfBoundsDamage;                              // 0x0FB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           _itemPlacingMaterialAllowed;                              // 0x0FB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           _itemPlacingMaterialDisallowed;                           // 0x0FC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _ikInterpSpeed;                                           // 0x0FC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0FCC(0x0004) MISSED OFFSET
	class UMaterialParameterCollection*                _commonParameterCollection;                               // 0x0FD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x8];                                       // 0x0FD8(0x0008) MISSED OFFSET
	class UUserProfile*                                _userProfile;                                             // 0x0FE0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     _userId;                                                  // 0x0FE8(0x0010) (Net, ZeroConstructor)
	struct FDbIntegerId                                _serverUserProfileId;                                     // 0x0FF8(0x0008) (Net)
	struct FString                                     _userProfileName;                                         // 0x1000(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData20[0xF8];                                      // 0x1010(0x00F8) MISSED OFFSET
	bool                                               _isEnabled;                                               // 0x1108(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x7];                                       // 0x1109(0x0007) MISSED OFFSET
	class UParticleSystemComponent*                    _waterParticlesComponentWhenIdle;                         // 0x1110(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _waterParticlesComponentWhenMoving;                       // 0x1118(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _waterParticlesComponentWhenDiving;                       // 0x1120(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData22[0x14];                                      // 0x1128(0x0014) MISSED OFFSET
	float                                              _targetCrouchStage;                                       // 0x113C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _desiredPace;                                             // 0x1140(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x1];                                       // 0x1141(0x0001) MISSED OFFSET
	bool                                               _freeLookEnabled;                                         // 0x1142(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x25];                                      // 0x1143(0x0025) MISSED OFFSET
	bool                                               _postFreeLookControllerRotationBlendActive;               // 0x1168(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0xF];                                       // 0x1169(0x000F) MISSED OFFSET
	struct FRotator                                    _repAimOffset;                                            // 0x1178(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData26[0xC];                                       // 0x1184(0x000C) MISSED OFFSET
	bool                                               _inDanger;                                                // 0x1190(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x17];                                      // 0x1191(0x0017) MISSED OFFSET
	struct FVector                                     _lastSafeLocation;                                        // 0x11A8(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x11B4(0x0004) MISSED OFFSET
	class APrisonerCorpse*                             _lastCorpse;                                              // 0x11B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class APrisonerCorpse*                             _lastEventCorpse;                                         // 0x11C0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0xC];                                       // 0x11C8(0x000C) MISSED OFFSET
	float                                              _targetLeanAmount;                                        // 0x11D4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x710];                                     // 0x11D8(0x0710) MISSED OFFSET
	class AActor*                                      _meleeTarget;                                             // 0x18E8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x8];                                       // 0x18F0(0x0008) MISSED OFFSET
	class UMeleeSkill*                                 _activeMeleeSkill;                                        // 0x18F8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x10];                                      // 0x1900(0x0010) MISSED OFFSET
	class AActor*                                      _rotationTarget;                                          // 0x1910(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UUnarmedCombatInputRedirector*               _unarmedCombatInputRedirector;                            // 0x1918(0x0008) (ZeroConstructor, IsPlainOldData)
	class USkillEventHandler*                          _skillEventHandler;                                       // 0x1920(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x20];                                      // 0x1928(0x0020) MISSED OFFSET
	struct FName                                       _weaponSocketName;                                        // 0x1948(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _weaponHolsterSocketName;                                 // 0x1950(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AWeapon*                                     _weapon;                                                  // 0x1958(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AItem*                                       _itemInHands;                                             // 0x1960(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData34[0x1C];                                      // 0x1968(0x001C) MISSED OFFSET
	EScopingWithItemInHandsState                       _scopingWithItemInHandsState;                             // 0x1984(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData35[0x2B];                                      // 0x1985(0x002B) MISSED OFFSET
	EWeaponAimingType                                  _weaponAimingType;                                        // 0x19B0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData36[0x7];                                       // 0x19B1(0x0007) MISSED OFFSET
	class UAnimMontage*                                _swapWeapons;                                             // 0x19B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _swapItemsNotWeaponToNotWeapon;                           // 0x19C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _swapItemsWeaponToWeapon;                                 // 0x19C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _swapItemsNotWeaponToWeapon;                              // 0x19D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _swapItemsWeaponToNotWeapon;                              // 0x19D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _equipRifleStanding;                                      // 0x19E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _unequipRifleStanding;                                    // 0x19E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _equipHandgunStanding;                                    // 0x19F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _unequipHadgunStanding;                                   // 0x19F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _urinateMaleMontage;                                      // 0x1A00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _urinateFemaleMontage;                                    // 0x1A08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _urinateMaleForcedMontage;                                // 0x1A10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _urinateFemaleForcedMontage;                              // 0x1A18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _defecateMontage;                                         // 0x1A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _defecateForcedMontage;                                   // 0x1A28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _vomitMontage;                                            // 0x1A30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _vomitForcedMontage;                                      // 0x1A38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _searchObject;                                            // 0x1A40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _searchObjectWhileItemInHands;                            // 0x1A48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _searchObjectWhileWeaponInHands;                          // 0x1A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _searchObjectWhenSwimming;                                // 0x1A58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _searchPrisoner;                                          // 0x1A60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _patchWoundsStanding;                                     // 0x1A68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _patchWoundsCrouching;                                    // 0x1A70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _patchWoundsProne;                                        // 0x1A78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _patchWoundsStandingEnd;                                  // 0x1A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _patchWoundsCrouchingEnd;                                 // 0x1A88(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _patchWoundsProneEnd;                                     // 0x1A90(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _eatGeneric;                                              // 0x1A98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _eatCan;                                                  // 0x1AA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _drinkFromBottleStanding;                                 // 0x1AA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _drinkFromBottleCrouching;                                // 0x1AB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _drinkInteraction;                                        // 0x1AB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _throwMontage;                                            // 0x1AC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _chopTreeStanding;                                        // 0x1AC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _chopTreeStandingEnd;                                     // 0x1AD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _chopLogStanding;                                         // 0x1AD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _chopLogStandingEnd;                                      // 0x1AE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _craftStanding;                                           // 0x1AE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _craftCrouching;                                          // 0x1AF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _craftProne;                                              // 0x1AF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _uncraftStanding;                                         // 0x1B00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _uncraftCrouching;                                        // 0x1B08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _uncraftProne;                                            // 0x1B10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _checkTime;                                               // 0x1B18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _checkTimeWhileItemInHands;                               // 0x1B20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _checkTimeWhileWeaponInHands;                             // 0x1B28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureShowFinger;                                       // 0x1B30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureStandSurrender;                                   // 0x1B38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureWaveHi;                                           // 0x1B40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureYouAreDead;                                       // 0x1B48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureFY;                                               // 0x1B50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gesturePoint;                                            // 0x1B58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureHeart;                                            // 0x1B60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureBallpalm;                                         // 0x1B68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureFacepalm;                                         // 0x1B70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureFingerGun;                                        // 0x1B78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureLaughing;                                         // 0x1B80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureSmellWave;                                        // 0x1B88(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureSquat;                                            // 0x1B90(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureCharge;                                           // 0x1B98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureChargeCombat;                                     // 0x1BA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureFreeze;                                           // 0x1BA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureFreezeCombat;                                     // 0x1BB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureGetDown;                                          // 0x1BB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureGetDownCombat;                                    // 0x1BC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureGetUp;                                            // 0x1BC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureGetUpCombat;                                      // 0x1BD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureHalt;                                             // 0x1BD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureHaltCombat;                                       // 0x1BE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureHurryUp;                                          // 0x1BE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureHurryUpCombat;                                    // 0x1BF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gesturePointMe;                                          // 0x1BF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gesturePointMeCombat;                                    // 0x1C00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gesturePointYou;                                         // 0x1C08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gesturePointYouCombat;                                   // 0x1C10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureRally;                                            // 0x1C18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureRallyCombat;                                      // 0x1C20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureThumbsUp;                                         // 0x1C28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureThumbsUpCombat;                                   // 0x1C30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureThumbsDown;                                       // 0x1C38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureThumbsDownCombat;                                 // 0x1C40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureUnderstandNot;                                    // 0x1C48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureUnderstandNotCombat;                              // 0x1C50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureUnderstandYes;                                    // 0x1C58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _gestureUnderstandYesCombat;                              // 0x1C60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _commitSuicideStanding;                                   // 0x1C68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _commitSuicideCrouching;                                  // 0x1C70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _commitSuicideRareStanding;                               // 0x1C78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _lockpickRegular;                                         // 0x1C80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _whistleMontage;                                          // 0x1C88(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _tuneBowMontage;                                          // 0x1C90(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _repairVehicleMontage;                                    // 0x1C98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _washClothMontage;                                        // 0x1CA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _buryStandingMontage;                                     // 0x1CA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _buryRestStandingMontage;                                 // 0x1CB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _buryResumeStandingMontage;                               // 0x1CB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _buryCrouchingMontage;                                    // 0x1CC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _buryRestCrouchingMontage;                                // 0x1CC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _sitOnGroundStandingStartMontage;                         // 0x1CD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _sitOnGroundStandingEndMontage;                           // 0x1CD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _sitOnGroundCrouchingStartMontage;                        // 0x1CE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _sitOnGroundCrouchingEndMontage;                          // 0x1CE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _layOnGroundStandingStartMontage;                         // 0x1CF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _layOnGroundStandingEndMontage;                           // 0x1CF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _layOnGroundCrouchingStartMontage;                        // 0x1D00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _layOnGroundCrouchingEndMontage;                          // 0x1D08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _sittingOnGroundAnimation;                                // 0x1D10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _lyingOnGroundAnimation;                                  // 0x1D18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _lightFlareMontage;                                       // 0x1D20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _armTrapMontage;                                          // 0x1D28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData37[0xAC];                                      // 0x1D30(0x00AC) MISSED OFFSET
	float                                              _respawnTime;                                             // 0x1DDC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData38[0x20];                                      // 0x1DE0(0x0020) MISSED OFFSET
	int                                                _appearanceIndex;                                         // 0x1E00(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                _tattooIndex;                                             // 0x1E04(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _breastSizeDesired;                                       // 0x1E08(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              _breastSizeModifier;                                      // 0x1E0C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      _breastSizePacked;                                        // 0x1E10(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData39[0x3];                                       // 0x1E11(0x0003) MISSED OFFSET
	float                                              _penisSizeDesired;                                        // 0x1E14(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              _penisSizeModifier;                                       // 0x1E18(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      _penisSizePacked;                                         // 0x1E1C(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData40[0x3];                                       // 0x1E1D(0x0003) MISSED OFFSET
	float                                              _bellyJiggleAmountCached;                                 // 0x1E20(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              _breastJiggleAmountCached;                                // 0x1E24(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData41[0x20];                                      // 0x1E28(0x0020) MISSED OFFSET
	bool                                               _isInCombatMode;                                          // 0x1E48(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData42[0x7];                                       // 0x1E49(0x0007) MISSED OFFSET
	EThrowingMode                                      _throwingMode;                                            // 0x1E50(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0x57];                                      // 0x1E51(0x0057) MISSED OFFSET
	class UCurveFloat*                                 _focusModeZoomEffectCurve;                                // 0x1EA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _focusModeZoomSpeed;                                      // 0x1EB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData44[0xC];                                       // 0x1EB4(0x000C) MISSED OFFSET
	class AItem*                                       _leftShoulderHolsteredItemReplicated;                     // 0x1EC0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData45[0x8];                                       // 0x1EC8(0x0008) MISSED OFFSET
	class AItem*                                       _rightShoulderHolsteredItemReplicated;                    // 0x1ED0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData46[0x38];                                      // 0x1ED8(0x0038) MISSED OFFSET
	TArray<class UCircularMenuSegmentInfo*>            _selfInteractionSegmentInfo;                              // 0x1F10(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData47[0x8];                                       // 0x1F20(0x0008) MISSED OFFSET
	struct FTimerHandle                                _interactDefaultContextMenuTimerHandle;                   // 0x1F28(0x0008)
	TArray<class APrisoner*>                           _examinedBy;                                              // 0x1F30(0x0010) (Net, ZeroConstructor)
	class UMaterialInstanceDynamic*                    _tacticsBlobMaterial;                                     // 0x1F40(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UParticleSystemComponent*>            _bodyPartEffects;                                         // 0x1F48(0x0010) (ExportObject, ZeroConstructor)
	class UBondageComponent*                           _handsBondage;                                            // 0x1F58(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData48[0xC];                                       // 0x1F60(0x000C) MISSED OFFSET
	TWeakObjectPtr<class AItemDropPlaceholder>         _itemDropPlaceholder;                                     // 0x1F6C(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData49[0x4];                                       // 0x1F74(0x0004) MISSED OFFSET
	TWeakObjectPtr<class UObject>                      _currentlyDroppingItem;                                   // 0x1F78(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UCharacterAction*>                    _actionsList;                                             // 0x1F80(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData50[0x30];                                      // 0x1F90(0x0030) MISSED OFFSET
	uint32_t                                           _packedWaterWeight;                                       // 0x1FC0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData51[0x8];                                       // 0x1FC4(0x0008) MISSED OFFSET
	float                                              _wetnessReachableFromSkyChecksInterval;                   // 0x1FCC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData52[0x18];                                      // 0x1FD0(0x0018) MISSED OFFSET
	class AGameEventBase*                              _gameEvent;                                               // 0x1FE8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UPrisonerLoadout*                            _gameEventLoadout;                                        // 0x1FF0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData53[0x10];                                      // 0x1FF8(0x0010) MISSED OFFSET
	struct FPrisonerNearbyFoliageInfo                  _nearbyFoliageInfo;                                       // 0x2008(0x0010)
	struct FPrisonerNearbyFoliageInfo                  _collidingNearbyFoliageInfo;                              // 0x2018(0x0010)
	TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> _replicatedNearbyFoliageInstancesInfo;                    // 0x2028(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData54[0xC8];                                      // 0x2038(0x00C8) MISSED OFFSET
	class UWidgetComponent*                            _nameWidgetComponent;                                     // 0x2100(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                _chipLightColorIndex;                                     // 0x2108(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData55[0x4];                                       // 0x210C(0x0004) MISSED OFFSET
	class UBaseItemTag*                                SaveSpawnLocationTag;                                     // 0x2110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData56[0x1C];                                      // 0x2118(0x001C) MISSED OFFSET
	bool                                               _isDeluxePlayer;                                          // 0x2134(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isTalking;                                               // 0x2135(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData57[0x2];                                       // 0x2136(0x0002) MISSED OFFSET
	float                                              _dedicatedServerHandleFootstepInterval;                   // 0x2138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData58[0x4];                                       // 0x213C(0x0004) MISSED OFFSET
	TWeakObjectPtr<class APrisoner>                    _examinedPrisoner;                                        // 0x2140(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData59[0x18];                                      // 0x2148(0x0018) MISSED OFFSET
	EPlayingInstrumentState                            _playingInstrumentState;                                  // 0x2160(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData60[0x1];                                       // 0x2161(0x0001) MISSED OFFSET
	ECarryingItemState                                 _carryingItemState;                                       // 0x2162(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData61[0xD];                                       // 0x2163(0x000D) MISSED OFFSET
	float                                              _playInstrumentEventNetworkDelay;                         // 0x2170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData62[0x8];                                       // 0x2174(0x0008) MISSED OFFSET
	float                                              _playInstrumentExitStateDuration;                         // 0x217C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData63[0x10];                                      // 0x2180(0x0010) MISSED OFFSET
	float                                              _breastSizeMin;                                           // 0x2190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _breastSizeMax;                                           // 0x2194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _breastSizeDeluxeModifier;                                // 0x2198(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _breastSizeAdminModifier;                                 // 0x219C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _penisLocationLean;                                       // 0x21A0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     _penisLocationFat;                                        // 0x21AC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     _penisHandleLocationLean;                                 // 0x21B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     _penisHandleLocationFat;                                  // 0x21C4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _penisMinSizeHandleZ;                                     // 0x21D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _penisMaxSizeHandleZ;                                     // 0x21D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldShowPenisOverride;                                 // 0x21D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData64[0x3];                                       // 0x21D9(0x0003) MISSED OFFSET
	float                                              _penisSizeMin;                                            // 0x21DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _penisSizeMax;                                            // 0x21E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _penisSizeDeluxeModifier;                                 // 0x21E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _penisSizeAdminModifier;                                  // 0x21E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData65[0x8];                                       // 0x21EC(0x0008) MISSED OFFSET
	float                                              _mountSpeedThreshold;                                     // 0x21F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _unmountSpeedThreshold;                                   // 0x21F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _unmountSpeedThresholdForRagdoll;                         // 0x21FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mountTiltAngleForRagdoll;                                // 0x2200(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData66[0x14];                                      // 0x2204(0x0014) MISSED OFFSET
	struct FPrisonerMountReplication                   _repMount;                                                // 0x2218(0x0010) (Net)
	class UMIDIDeviceController*                       _midiDeviceController;                                    // 0x2228(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData67[0x38];                                      // 0x2230(0x0038) MISSED OFFSET
	float                                              _rareSuicideAnimationChance;                              // 0x2268(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _hasInfiniteAmmo;                                         // 0x226C(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isInGodMode;                                             // 0x226D(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isImmortal;                                              // 0x226E(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData68[0x21];                                      // 0x226F(0x0021) MISSED OFFSET
	float                                              _hairLength;                                              // 0x2290(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              _facialHairLength;                                        // 0x2294(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData69[0xC];                                       // 0x2298(0x000C) MISSED OFFSET
	float                                              _hairGrowthTotalTime;                                     // 0x22A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _facialHairGrowthTotalTime;                               // 0x22A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _hairUpdateRate;                                          // 0x22AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               _enablePerComponentReplicationFrequency;                  // 0x22B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData70[0x3];                                       // 0x22B1(0x0003) MISSED OFFSET
	float                                              _componentsReplicationFrequency[0x5];                     // 0x22B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData71[0x34];                                      // 0x22C8(0x0034) MISSED OFFSET
	float                                              _maxRestingAngle;                                         // 0x22FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData72[0x28];                                      // 0x2300(0x0028) MISSED OFFSET
	struct FGameplayTag                                LegsInjuryTag;                                            // 0x2328(0x0008) (Edit)
	unsigned char                                      UnknownData73[0x56];                                      // 0x2330(0x0056) MISSED OFFSET
	bool                                               _isLimping;                                               // 0x2386(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData74[0x9];                                       // 0x2387(0x0009) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Prisoner");
		return ptr;
	}


	void UpdateZoomEffect(float Fraction);
	void UpdateWristwatchVisibility();
	void UpdateSquadPanel();
	void UpdatePenisVisibility();
	void UpdateHairVisuals();
	void UpdateHairVisibility();
	void UpdateDeluxePlayerStatus();
	void UpdateChipLightColorIndex();
	void UpdateCensoring();
	void TryInteractDefault();
	void ToggleWantsToHoldBlock();
	void ToggleSquadPanel();
	void ToggleJournalPanel();
	void ToggleEventsPanel();
	void ToggleCraftingPanel();
	void Teleport(const struct FPrisonerTeleportRequest& request);
	void TakeItemInHandsOnServer(class AItem* Item);
	void TakeItemInHands(class AItem* Item);
	void TabModeOpened__DelegateSignature(ETabMode tabMode);
	void TabModeClosed__DelegateSignature();
	void StopInteraction();
	void StartSecondaryMeleeAttack();
	void StartPrimaryMeleeAttack();
	void StartMeleeDodge(EDodgeDirectionType Direction);
	void StartMeleeAttack(const struct FGameplayTag& meleeAttackType);
	void StartComboMeleeAttack();
	void ShowSpawnScreen(bool loadoutMenu);
	bool ShouldLookatMeleeTarget();
	bool ShouldIgnoreRotation();
	void SetWristwatchBrightness(float Value);
	void SetWeaponsVisibility(bool visible);
	void SetWeaponOnClient(class AWeapon* Weapon);
	void SetWeaponAimingTypeOnServer(EWeaponAimingType Value);
	void SetThrowingModeOnServer(EThrowingMode Value);
	void SetThrowingMode(EThrowingMode Value);
	void SetTattooIndex(int TattooIndex);
	void SetTargetOnServer(class AActor* Target);
	void SetTargetLeanAmountOnServer(float Value);
	void SetTargetCrouchStage(float Value);
	void SetStrengthOnServer(float Value);
	void SetStrength(float Value);
	void SetStance(EPrisonerStance Value);
	void SetRotationTarget(class AActor* rotationTarget);
	void SetPlayerSoundLevel(float Value);
	void SetPartWaterWeight(EPrisonerWettablePart part, float Value);
	void SetOverrideIsLimping(bool Value);
	void SetNightVisionEnabled(bool Value);
	void SetNameTextVisibilityForAll(bool visible);
	void SetNameTextVisibility(bool visible);
	bool SetMidiDeviceByName(const struct FString& Name);
	bool SetMidiDeviceByIndex(int Index);
	void SetMeleeTargetSelectionMode(EPrisonerMeleeTargetSelectionMode Value);
	void SetMeleeTarget(class AActor* Value);
	void SetItemInHandsOnClient(class AItem* Item);
	void SetIsLimpingOverrideEnabled(bool Value);
	void SetIsInCombatModeOnServer(bool Value);
	void SetIsInCombatMode(bool Value);
	void SetIsEnabled(bool Value);
	void SetIntelligenceOnServer(float Value);
	void SetIntelligence(float Value);
	void SetHairLength(float Value);
	void SetGameEventLoadout(class UClass* primary, TArray<class UClass*> primaryAttachments, class UClass* secondary, TArray<class UClass*> secondaryAttachments, class UClass* tertiary, TArray<class UClass*> tertiaryAttachments, TArray<class UClass*> outfit, TArray<class UClass*> support);
	void SetGameEvent(class AGameEventBase* gameEvent);
	void SetFreeLookEnabledOnServer(bool Value);
	void SetFreeLookEnabled(bool Value);
	void SetFacialHairLength(float Value);
	void SetDexterityOnServer(float Value);
	void SetDexterity(float Value);
	void SetDesiredPaceOnServer(unsigned char Value);
	void SetDesiredPace(EPrisonerMovementPace Value);
	void SetDesiredLeanAmount(float Value);
	void SetCrouchStage(float Value);
	void SetConstitutionOnServer(float Value);
	void SetConstitution(float Value);
	void SetAutoWalk(bool Value);
	void SetAppearanceIndex(int AppearanceIndex);
	void Server_UpdateNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);
	void Server_UnpackAmmoBox(class AAmmunitionBoxItem* Item);
	void Server_Unmount();
	void Server_UnloadAmmoFromMagazine(class AWeaponAttachmentMagazine* magazine);
	void Server_SyncWeaponState(class AWeapon* Weapon, int loadedAmmoCount, int internalMagazineAmmoCount, bool IsChamberOpened);
	void Server_SwapWeaponAttachments(class AWeapon* Weapon, class AWeaponAttachment* oldAttachment, class AWeaponAttachment* newAttachment);
	void Server_StoreAmmoInAmmoBox(class AAmmunitionItem* ammo, class AAmmunitionBoxItem* Box);
	void Server_SplitAmmo(class AAmmunitionItem* ammoitem);
	void Server_SetTargetCrouchStage(float Value);
	void Server_SetScopingWithItemInHandsState(EScopingWithItemInHandsState Value);
	void Server_SetRotationTarget(class AActor* rotationTarget);
	void Server_SetPlayingInstrumentState(EPlayingInstrumentState Value);
	void Server_SetMeleeTarget(class AActor* Value);
	void Server_SetExaminedPrisoner(class APrisoner* Prisoner);
	void Server_SetDangerCooldown(float cooldown, class APrisoner* Prisoner);
	void Server_SetCarryingItemState(ECarryingItemState State);
	void Server_RespawnAtCommonSpawnLocation(EPrisonerCommonSpawnLocation commonSpawnLocation, const struct FName& spawnTag);
	void Server_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value);
	void Server_RemoveInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& Position, class UObject* Target);
	void Server_PropagateFootstepEnhancerSound();
	void Server_OnProjectileArrowStop(const struct FHitResult& HitResult, const struct FProjectileArrowData& ProjectileData, const struct FVector& Location, const struct FRotator& Rotation);
	void Server_Mount(class UObject* Slot);
	void Server_lockpickingEnded(class UObject* Lockpickable, bool succeeded, const struct FConZBaseElementIdentifier& lockpickableBaseElement);
	void Server_LoadAmmoIntoMagazine(class AAmmunitionItem* AmmunitionItem, class AWeaponAttachmentMagazine* magazine, int count);
	void Server_JumpOffLadder();
	void Server_JoinAmmo(class AAmmunitionItem* finalItem, class AAmmunitionItem* initiatingItem);
	void Server_InteractWithLadder(const struct FVector& traceOrigin, const struct FVector& traceDirection);
	void Server_InstrumentStopTone(EPlayableInstrumentTone tone, float timeOffset, int octave);
	void Server_InstrumentPlayTone(EPlayableInstrumentTone tone, float timeOffset, int octave);
	void Server_InstrumentOctaveUp();
	void Server_InstrumentOctaveDown();
	void Server_InitiateCraftedPlacement(int craftableIndex);
	void Server_HandleGearMotion(EMotionIntensity motionIntensity, bool shouldMakeNoise);
	void Server_HandleFootstep(EMotionIntensity motionIntensity, bool shouldMakeNoise);
	void Server_DestroyPlaceable(const struct FDbIntegerId& ID);
	void Server_DamageLockpickingTools(class AItem* lockpick, class AItem* tensionTool);
	void Server_CommitSuicide();
	void Server_ClimbWindow();
	void Server_Climb();
	void Server_ClearDangerCooldown();
	void Server_CharacterActionAck(const struct FCharacterActionAck& ack);
	void Server_AddInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& Position, class UObject* Target);
	void SendSquadInvitationOnServer(class APrisoner* invited);
	void SendSquadInvitationOnClient(class APrisoner* invitor, const struct FString& invitorName);
	void SendMessageToClient(const struct FString& Message, bool beep);
	void RightShoulderHolsterInteract();
	void Revive();
	void RespawnAtCommonSpawnLocation(EPrisonerCommonSpawnLocation commonSpawnLocation, const struct FName& spawnTag);
	void RequestRespawn(const struct FPrisonerTeleportRequest& request);
	void RequestCharacterAction(class UCharacterActionDescription* desc);
	void RemoveWeaponAttachment(class AWeapon* Weapon, class AWeaponAttachment* Attachment);
	void RemoveFromSquadOnServer(const struct FDbIntegerId& UserProfileId);
	void RemoveBondage();
	void RecoverLastSafeLocation();
	void RecoverFromRagdollImmediately();
	void RecoverFromRagdoll();
	void RecalculateJiggleAmount();
	void ReadyToRespawn(bool spawnCorpse, bool ShowSpawnScreen);
	void PromoteSquadMemberOnServer(const struct FDbIntegerId& UserProfileId);
	void ProjectileDealDirectDamageOnServer(const struct FProjectilePointDamageEvent& ProjectilePointDamageEvent, const struct FSkillEventWeaponProjectileHitTarget& SkillEventWeaponProjectileHitTarget);
	void Preset4();
	void Preset3();
	void Preset2();
	void Preset1();
	void PlaceItemInInventoryOrHolster(class AItem* Item);
	void PanelsClosed__DelegateSignature();
	void OpenTabMode(ETabMode Mode);
	void OpenInteractDefaultContextMenu();
	void OnRep_UserProfileName();
	void OnRep_ThrowingMode();
	void OnRep_TattooIndex();
	void OnRep_ScopingWithItemInHandsState();
	void OnRep_RotationTarget();
	void OnRep_RightShoulderHolsteredItem();
	void OnRep_PlayingInstrumentState();
	void OnRep_PenisSizePacked();
	void OnRep_PenisSize();
	void OnRep_PenisModifier();
	void OnRep_PackedWetness(uint32_t oldWetness);
	void OnRep_Mount();
	void OnRep_MeleeTarget();
	void OnRep_LeftShoulderHolsteredItem();
	void OnRep_ItemInHands();
	void OnRep_IsInCombatMode();
	void OnRep_IsEnabled();
	void OnRep_IsDeluxePlayer();
	void OnRep_InDanger();
	void OnRep_HandBondage();
	void OnRep_HairLength();
	void OnRep_GameEvent();
	void OnRep_FreeLookEnabled();
	void OnRep_FacialHairLength();
	void OnRep_DesiredPace();
	void OnRep_ChipLightColorIndex();
	void OnRep_CarryingItemState();
	void OnRep_BreastSizePacked();
	void OnRep_BreastSize();
	void OnRep_BreastModifier();
	void OnRep_AppearanceIndex();
	void OnRep_AimOffset();
	void OnPlaceableDestroyed(class AActor* Actor);
	void OnMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo, float DeltaTime);
	void OnMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void OnMidiEvent(class UMIDIDeviceController* MIDIDeviceController, int Timestamp, EMIDIEventType EventType, int Channel, int ControlID, int Velocity, int RawEventType);
	void OnInteractDefaultContextMenuClosed();
	void OnHearNoise(class APawn* instigatorPawn, const struct FVector& Location, float Volume);
	void OnExaminedPrisonerUnequippedItem(class UPrisonerInventoryComponent* inventory, class AItem* Item);
	void OnExaminedPrisonerEquippedItem(class UPrisonerInventoryComponent* inventory, class AItem* Item);
	void OnEndMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo);
	void OnConcealedModeChanged(bool Value);
	void OnBorderCrossingPenaltyChange(class APrisoner* Prisoner, EPrisonerBorderCrossingPenalty newPenalty);
	void OnBeginMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo);
	void NetMulticast_UpdateNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);
	void NetMulticast_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value, bool ignoreAutonomousProxy);
	void NetMulticast_PostAudioEventOnPrisoner(class UAkAudioEvent* akEvent, bool multiCastToClients);
	void NetMulticast_PlayFootstepEnhancerSound();
	void NetMulticast_InstrumentStopTone(EPlayableInstrumentTone tone, float timeOffset, int octave);
	void NetMulticast_InstrumentPlayTone(EPlayableInstrumentTone tone, float timeOffset, int octave);
	void NetMulticast_InstrumentOctaveUp();
	void NetMulticast_InstrumentOctaveDown();
	void NetMulticast_HandleLanded(const struct FVector& ImpactVelocity, const struct FHitResult& HitResult);
	void NetMulticast_CharacterActionAck(const struct FCharacterActionAck& ack, bool ignoreAutonomousProxy);
	void Multicast_ForceHairUpdate(float hairLength, float facialHairLength);
	void MakeUnconscious();
	void MakeConscious();
	void LifeComponent_StateRemoved(class UPrisonerLifeComponent* sender, EBodyState State);
	void LifeComponent_StateAdded(class UPrisonerLifeComponent* sender, EBodyState State);
	void LeftShoulderHolsterInteract();
	void LeaveSquadOnServer();
	void LeaveCombatMode(bool PlayAnimation, bool overrideAbilityCheck);
	bool IsTeleportInProgress();
	bool IsPostFreeLookControllerRotationBlendActive();
	bool IsNightVisionEnabled();
	bool IsLimping();
	bool IsInteracting();
	bool IsInDanger();
	bool IsInCombatMode();
	bool IsFreeLookEnabled();
	bool IsEnabled();
	bool IsCompletelyInitialized();
	bool IsAutoWalking();
	bool IsAliveInGameEvent();
	bool IsActorMeleeTargetCandidate(class AActor* Actor);
	bool IsActivelyParticipatingInGameEvent();
	void InventoryComponent_ItemUnequipped(class UPrisonerInventoryComponent* sender, class AItem* Item);
	void InventoryComponent_ItemEquipped(class UPrisonerInventoryComponent* sender, class AItem* Item);
	void InteractWithObjectOnServer(class UObject* interactable, EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void InteractedDelegate__DelegateSignature(class APrisoner* sender, class UObject* interactable, EInteractionType interactionType);
	void InitTextMeshFromName(const struct FString& Name);
	void InitFromCharacterTemplate(const struct FCharacterTemplate& CharacterTemplate);
	void IncreaseCrouchStage();
	void HoveredActorChanged__DelegateSignature(class AActor* hoveredActor);
	void HolsterItemOnServer(class AItem* Item, int attachmentSocketHelper);
	void HitReactComponent_StateChanged();
	bool HasItem(class AItem* Item);
	bool HasHandsUp();
	bool HasHandBondage();
	bool HasCurrentMovementEffectOnNearbyFoliage();
	bool HasCharacterAction();
	void GoToRagdoll();
	class UChildActorComponent* GetWristwatchComponent();
	float GetWetness();
	struct FName GetWeaponSocketName();
	struct FName GetWeaponHolsterSocketName();
	class AWeapon* GetWeapon();
	struct FPrisonerWaterMovementParameters GetWaterMovementParameters();
	class UVisionEffectsComponent* GetVisionEffectsComponent();
	struct FString GetUserProfileName();
	class UUserProfile* GetUserProfile();
	struct FString GetUserId();
	class UStaticMeshComponent* GetUpperMouthMeshComponent();
	class USkeletalMeshComponent* GetUpperHeadSkeletalMeshComponent();
	class UStaticMeshComponent* GetUpperHeadMeshComponent();
	class USkeletalMeshComponent* GetTorsoMeshComponent();
	struct FDateTime GetTimeOfDeath();
	int GetTattooIndex();
	float GetTargetCrouchStage();
	class UMaterialInstanceDynamic* GetTacticsBlobMaterial();
	struct FVector2D GetTabMouseMovement();
	ETabMode GetTabMode();
	EPrisonerStance GetStance();
	struct FDbIntegerId GetServerUserProfileId();
	struct FRotator GetSavedSpawnRotation();
	bool GetSavedSpawnLocationActive();
	struct FVector GetSavedSpawnLocation();
	class AActor* GetRotationTarget();
	struct FRotator GetREyeRotationDelta();
	class UStaticMeshComponent* GetREyeMeshComponent();
	class UPrisonerMovementComponent* GetPrisonerMovement();
	class UPrisonerAnimInstance* GetPrisonerAnimInstance();
	float GetPenisSizeNormalized();
	float GetPenisSizeModified();
	class USkeletalMeshComponent* GetPenisMeshComponent();
	float GetPartWetness(EPrisonerWettablePart part);
	float GetPartWaterWeight(EPrisonerWettablePart part);
	bool GetOverrideIsLimping();
	class USkeletalMeshComponent* GetNeckMeshComponent();
	struct FPrisonerNearbyFoliageInfo GetNearbyFoliageInfo();
	EMotionIntensity GetMotionIntensity();
	EPrisonerMeleeTargetSelectionMode GetMeleeTargetSelectionMode();
	class AActor* GetMeleeTarget();
	float GetMaxPartWaterWeight(EPrisonerWettablePart part);
	EPrisonerMovementPace GetMaxAllowedPace();
	class UStaticMeshComponent* GetLowerMouthMeshComponent();
	class UStaticMeshComponent* GetLowerHeadMeshComponent();
	struct FRotator GetLookatMeleeTargetAimOffset();
	struct FRotator GetLEyeRotationDelta();
	class UStaticMeshComponent* GetLEyeMeshComponent();
	class USkeletalMeshComponent* GetLegsMeshComponent();
	class UParticleSystemComponent* GetLeavesComponent();
	float GetLeanAmount();
	struct FVector GetLastSafeLocation();
	class AItem* GetItemInHands();
	bool GetIsLimpingOverrideEnabled();
	bool GetIsInFirstPersonView();
	EHoldBreathState GetHoldBreathState();
	class USkeletalMeshComponent* GetHeadMeshComponent();
	class USkeletalMeshComponent* GetHandsMeshComponent();
	class UBondageComponent* GetHandBondage();
	class USkeletalMeshComponent* GetHairMeshComponent();
	float GetHairLength();
	struct FPrisonerGroundMovementParameters GetGroundMovementParameters();
	class AGameEventBase* GetGameEvent();
	class USkeletalMeshComponent* GetFeetMeshComponent();
	class USkeletalMeshComponent* GetFacialHairMeshComponent();
	float GetFacialHairLength();
	class UStaticMeshComponent* GetEyewearMeshComponent();
	struct FString GetEnumeratorNameENetMode();
	EPrisonerMovementPace GetDesiredPace();
	float GetDesiredLeanAmount();
	int GetCurrentMidiDeviceIndex();
	struct FGameplayTag GetCurrentHitReactType();
	float GetCrouchStage();
	EPrisonerCombatMode GetCombatMode();
	struct FPrisonerNearbyFoliageInfo GetCollidingNearbyFoliageInfo();
	EPrisonerMovementPace GetClampedDesiredPace();
	class UStaticMeshComponent* GetChipMeshComponent();
	class UCharacterAction* GetCharacterAction();
	float GetChanceToKnockoutTargetUsingMeleeAttack(class AActor* Target);
	class UBruisingComponent* GetBruisingComponent();
	float GetBreastSizeModified();
	float GetBreastJiggleAmount();
	class USkeletalMeshComponent* GetBodyArmorMeshComponent();
	float GetBellyJiggleAmount();
	class USkeletalMeshComponent* GetBackpackMeshComponent();
	class USkeletalMeshComponent* GetArmsMeshComponent();
	int GetAppearanceIndex();
	float GetAngularVelocity();
	struct FRotator GetAimOffset();
	EPrisonerMovementPace GetActualPace();
	bool GenitalsExposed();
	bool GameEventFriendlyFireCheck(class APrisoner* Other);
	void ForceDeluxePlayer();
	class AActor* FindNextOrPreviousMeleeTarget(class AActor* Target, bool Next);
	void ExamineItem(class AItem* Item);
	void EquipWeapon(class AWeapon* Weapon);
	void EquippedNightVisionGoggles_ActivatedChanged(class ANightVisionGogglesItem* Item);
	bool EnterCombatMode();
	void DropItemFromHands();
	bool DidGameEventRoundStarted();
	void DiarrheaOnServer();
	void DetonateHead(bool shouldDestroyHeadgear);
	void DestroyPlaceable(const struct FDbIntegerId& ID);
	void DemoteSquadMemberOnServer(const struct FDbIntegerId& UserProfileId);
	void DecreaseCrouchStage();
	void CreateSquadOnServer();
	void ConstructWristwatchChildActor();
	void CommitSuicide();
	bool ClosePanels(bool switchingTabs);
	void Client_ShowSpawnScreen(bool loadoutMenu);
	void Client_SetSavedSpawnLocation(bool active, const struct FVector& Location, const struct FRotator& Rotation);
	void Client_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value, bool cancelExecutingAction);
	void Client_OnTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* eventInstigator, class AActor* DamageCauser);
	void Client_OnNoiseInstigated(float NoiseLevel);
	void Client_LoadAmmoIntoMagazine(class AWeaponAttachmentMagazine* magazine, int count);
	void Client_Interact(class UObject* interactable, EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void Client_HighlightKeyboardOnDamage();
	void Client_FadeOutVision(float Duration);
	void Client_FadeInVision(float Duration);
	void ClearMalfunction(EWeaponMalfunction malfunction);
	void ClearGameEventLoadout();
	void ClearEquipment();
	class AActor* ChooseFirstMeleeTarget();
	void CharacterAction_End(class UCharacterAction* Action);
	void ChangeSquadData(const struct FString& Name, const struct FString& Message, const struct FString& information, const struct FConZSquadEmblem& emblem);
	void CarryItem(class AItem* Item);
	void CapsuleComponent_PhysicsVolumeChanged(class APhysicsVolume* Volume);
	bool CanOpenTabMode(ETabMode Mode);
	bool CanLeaveCombatMode();
	bool CanEnterMeleeCombatMode();
	bool CanEnterCombatMode();
	void CancelInteractableDragging();
	float CalculateAIPerceptionPercentage();
	void BorderCrossingPenaltyChange__DelegateSignature(class APrisoner* sender, EPrisonerBorderCrossingPenalty newPenalty);
	float BCU_GetSpeedModifier();
	float BCU_GetMovementSpeed(EPrisonerMovementPace pace);
	float BCU_GetMeleeDamageBonus();
	float BCU_GetMaxMovementSpeed(EPrisonerMovementPace pace);
	bool AreBreastsExposed();
	void ApplyTattoos();
	void ApplySkinMaterials();
	void ApplyPenisSize();
	void ApplyHeadMesh();
	void ApplyBreastSize();
	void ApplyBodyMeshes();
	void ApplyAppearance();
	void AddWeaponAttachment(class AWeapon* Weapon, class AWeaponAttachment* Attachment);
	void AddToSquadOnServer(const struct FDbIntegerId& squadId);
	void AddHandBondage(class AItem* bondageItem);
	void AcceptSquadInvitationOnServer(class APrisoner* invitor, bool accepted);
};


// Class ConZ.PrisonerAction
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerAction : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerAction");
		return ptr;
	}

};


// Class ConZ.PrisonerActionActivateSlot
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionActivateSlot : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionActivateSlot");
		return ptr;
	}

};


// Class ConZ.PrisonerActionActivateSlotDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionActivateSlotDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionActivateSlotDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionAddWeaponAttachment
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionAddWeaponAttachment : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionAddWeaponAttachment");
		return ptr;
	}

};


// Class ConZ.PrisonerActionAddWeaponAttachmentDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionAddWeaponAttachmentDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionAddWeaponAttachmentDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionArtificialPerspiration
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionArtificialPerspiration : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionArtificialPerspiration");
		return ptr;
	}

};


// Class ConZ.PrisonerActionArtificialPerspirationDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionArtificialPerspirationDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionArtificialPerspirationDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionBuryItem
// 0x0020 (0x00E0 - 0x00C0)
class UPrisonerActionBuryItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00C0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionBuryItem");
		return ptr;
	}

};


// Class ConZ.UPrisonerActionBuryItemDescription
// 0x0060 (0x0090 - 0x0030)
class UUPrisonerActionBuryItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0030(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UPrisonerActionBuryItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionChangeStance
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionChangeStance : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeStance");
		return ptr;
	}

};


// Class ConZ.PrisonerActionChangeStanceDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionChangeStanceDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeStanceDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCheckTime
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionCheckTime : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckTime");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCheckTimeDescription
// 0x0000 (0x0030 - 0x0030)
class UPrisonerActionCheckTimeDescription : public UCharacterActionDescription
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckTimeDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionChopBaseElement
// 0x0000 (0x00C0 - 0x00C0)
class UPrisonerActionChopBaseElement : public UPrisonerAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionChopBaseElement");
		return ptr;
	}

};


// Class ConZ.PrisonerActionChopBaseElementDescription
// 0x0050 (0x0080 - 0x0030)
class UPrisonerActionChopBaseElementDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0030(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionChopBaseElementDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionChopItem
// 0x0008 (0x00C8 - 0x00C0)
class UPrisonerActionChopItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionChopItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionChopItemDescription
// 0x0020 (0x0050 - 0x0030)
class UPrisonerActionChopItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionChopItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionClearWeaponMalfunction
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionClearWeaponMalfunction : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionClearWeaponMalfunction");
		return ptr;
	}

};


// Class ConZ.PrisonerActionClearWeaponMalfunctionDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionClearWeaponMalfunctionDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionClearWeaponMalfunctionDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionClimbOntoLadder
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionClimbOntoLadder : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionClimbOntoLadder");
		return ptr;
	}

};


// Class ConZ.PrisonerActionClimbOntoLadderDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionClimbOntoLadderDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionClimbOntoLadderDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCommandAnimal
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionCommandAnimal : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCommandAnimal");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCommandAnimalDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionCommandAnimalDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCommandAnimalDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCommitSuicide
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionCommitSuicide : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCommitSuicide");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCommitSuicideDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionCommitSuicideDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCommitSuicideDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCraftItem
// 0x0008 (0x00C8 - 0x00C0)
class UPrisonerActionCraftItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCraftItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCraftItemDescription
// 0x0088 (0x00B8 - 0x0030)
class UPrisonerActionCraftItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0030(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCraftItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCutHair
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionCutHair : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCutHair");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCutHairDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionCutHairDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCutHairDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCutObject
// 0x0008 (0x00C8 - 0x00C0)
class UPrisonerActionCutObject : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCutObject");
		return ptr;
	}

};


// Class ConZ.PrisonerActionCutObjectDescription
// 0x0038 (0x0068 - 0x0030)
class UPrisonerActionCutObjectDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0030(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionCutObjectDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionDefecate
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionDefecate : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionDefecate");
		return ptr;
	}

};


// Class ConZ.PrisonerActionDefecateDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionDefecateDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionDefecateDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionDrinkInteraction
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionDrinkInteraction : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionDrinkInteraction");
		return ptr;
	}

};


// Class ConZ.PrisonerActionDrinkInteractionDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionDrinkInteractionDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionDrinkInteractionDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionEatItem
// 0x0018 (0x00C8 - 0x00B0)
class UPrisonerActionEatItem : public UCharacterAction
{
public:
	class UAkAudioEvent*                               _startEatingAudioEvent;                                   // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _stopEatingAudioEvent;                                    // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      _itemClass;                                               // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionEatItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionEatItemDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionEatItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionEatItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionEnterVehicle
// 0x0000 (0x00C0 - 0x00C0)
class UPrisonerActionEnterVehicle : public UPrisonerAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionEnterVehicle");
		return ptr;
	}

};


// Class ConZ.PrisonerActionEnterVehicleDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionEnterVehicleDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionEnterVehicleDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionEquipWeapon
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionEquipWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionEquipWeapon");
		return ptr;
	}

};


// Class ConZ.PrisonerActionEquipWeaponDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionEquipWeaponDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionEquipWeaponDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionExecuteInteraction
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionExecuteInteraction : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionExecuteInteraction");
		return ptr;
	}

};


// Class ConZ.PrisonerActionExecuteInteractionDescription
// 0x0098 (0x00C8 - 0x0030)
class UPrisonerActionExecuteInteractionDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0030(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionExecuteInteractionDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionExitVehicle
// 0x0000 (0x00C0 - 0x00C0)
class UPrisonerActionExitVehicle : public UPrisonerAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionExitVehicle");
		return ptr;
	}

};


// Class ConZ.PrisonerActionExitVehicleDescription
// 0x0000 (0x0030 - 0x0030)
class UPrisonerActionExitVehicleDescription : public UCharacterActionDescription
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionExitVehicleDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionExtinguishFire
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionExtinguishFire : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionExtinguishFire");
		return ptr;
	}

};


// Class ConZ.PrisonerActionExtinguishFireDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionExtinguishFireDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionExtinguishFireDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFeedAnimal
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionFeedAnimal : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFeedAnimal");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFeedAnimalDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionFeedAnimalDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFeedAnimalDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFillFuel
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionFillFuel : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFillFuel");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFillFuelDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionFillFuelDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFillFuelDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFillWater
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionFillWater : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFillWater");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFillWaterDescription
// 0x0020 (0x0050 - 0x0030)
class UPrisonerActionFillWaterDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFillWaterDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFuelFire
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionFuelFire : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFuelFire");
		return ptr;
	}

};


// Class ConZ.PrisonerActionFuelFireDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionFuelFireDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionFuelFireDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionGesture
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionGesture : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionGesture");
		return ptr;
	}

};


// Class ConZ.PrisonerActionGestureDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionGestureDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionGestureDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionIgniteFlare
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionIgniteFlare : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionIgniteFlare");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLightFlareDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionLightFlareDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLightFlareDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionInsertArrow
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionInsertArrow : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionInsertArrow");
		return ptr;
	}

};


// Class ConZ.PrisonerActionInsertArrowDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionInsertArrowDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionInsertArrowDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLearnAnimal
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionLearnAnimal : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLearnAnimal");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLearnAnimalDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionLearnAnimalDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLearnAnimalDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLockpick
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionLockpick : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLockpick");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLockpickDescription
// 0x0030 (0x0060 - 0x0030)
class UPrisonerActionLockpickDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0030(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLockpickDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLootCorpse
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionLootCorpse : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLootCorpse");
		return ptr;
	}

};


// Class ConZ.PrisonerActionLootCorpseDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionLootCorpseDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionLootCorpseDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionMakeConscious
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionMakeConscious : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionMakeConscious");
		return ptr;
	}

};


// Class ConZ.PrisonerActionMakeConsciousDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionMakeConsciousDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionMakeConsciousDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionManipulateTrap
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionManipulateTrap : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionManipulateTrap");
		return ptr;
	}

};


// Class ConZ.PrisonerActionManipulateTrapDescription
// 0x0028 (0x0058 - 0x0030)
class UPrisonerActionManipulateTrapDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionManipulateTrapDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionMedicalDiagnosis
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionMedicalDiagnosis : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionMedicalDiagnosis");
		return ptr;
	}

};


// Class ConZ.PrisonerActionMedicalDiagnosisDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionMedicalDiagnosisDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionMedicalDiagnosisDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionMinigame
// 0x0010 (0x00D0 - 0x00C0)
class UPrisonerActionMinigame : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionMinigame");
		return ptr;
	}

};


// Class ConZ.PrisonerActionMinigameDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionMinigameDescription : public UCharacterActionDescription
{
public:
	class UMinigameConfiguration*                      MinigameConfiguration;                                    // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionMinigameDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionOpenItem
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionOpenItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionOpenItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionOpenItemDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionOpenItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionOpenItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionOperateBondage
// 0x0018 (0x00C8 - 0x00B0)
class UPrisonerActionOperateBondage : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionOperateBondage");
		return ptr;
	}

};


// Class ConZ.PrisonerActionOperateBondageDescription
// 0x0020 (0x0050 - 0x0030)
class UPrisonerActionOperateBondageDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionOperateBondageDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionOperateGenerator
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionOperateGenerator : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionOperateGenerator");
		return ptr;
	}

};


// Class ConZ.PrisonerActionOperateGeneratorDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionOperateGeneratorDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionOperateGeneratorDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPacifyAnimal
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionPacifyAnimal : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPacifyAnimal");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPacifyAnimalDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionPacifyAnimalDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPacifyAnimalDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPatchWounds
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionPatchWounds : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPatchWounds");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPatchWoundsDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionPatchWoundsDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPatchWoundsDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPerformAnesthesia
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionPerformAnesthesia : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPerformAnesthesia");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPerformAnesthesiaDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionPerformAnesthesiaDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPerformAnesthesiaDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPerformSurgery
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionPerformSurgery : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPerformSurgery");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPerformSurgeryDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionPerformSurgeryDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPerformSurgeryDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPullTooth
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionPullTooth : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPullTooth");
		return ptr;
	}

};


// Class ConZ.PrisonerActionPullToothDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionPullToothDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionPullToothDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionReloadWeapon
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionReloadWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionReloadWeapon");
		return ptr;
	}

};


// Class ConZ.PrisonerActionReloadWeaponDescription
// 0x0028 (0x0058 - 0x0030)
class UPrisonerActionReloadWeaponDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionReloadWeaponDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRemoveItemFromHands
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionRemoveItemFromHands : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveItemFromHands");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRemoveItemFromHandsDescription
// 0x0030 (0x0060 - 0x0030)
class UPrisonerActionRemoveItemFromHandsDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0030(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveItemFromHandsDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRemoveWeaponAttachment
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionRemoveWeaponAttachment : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveWeaponAttachment");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionRemoveWeaponAttachmentDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepair
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionRepair : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepair");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionRepairDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairBaseElement
// 0x0000 (0x00B8 - 0x00B8)
class UPrisonerActionRepairBaseElement : public UPrisonerActionRepair
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairBaseElement");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairBaseElementDescription
// 0x0040 (0x0088 - 0x0048)
class UPrisonerActionRepairBaseElementDescription : public UPrisonerActionRepairDescription
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0048(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairBaseElementDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairItem
// 0x0000 (0x00B8 - 0x00B8)
class UPrisonerActionRepairItem : public UPrisonerActionRepair
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairItemDescription
// 0x0008 (0x0050 - 0x0048)
class UPrisonerActionRepairItemDescription : public UPrisonerActionRepairDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairVehicle
// 0x0000 (0x00B8 - 0x00B8)
class UPrisonerActionRepairVehicle : public UPrisonerActionRepair
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairVehicle");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRepairVehicleDescription
// 0x0008 (0x0050 - 0x0048)
class UPrisonerActionRepairVehicleDescription : public UPrisonerActionRepairDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairVehicleDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRevivePatient
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionRevivePatient : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRevivePatient");
		return ptr;
	}

};


// Class ConZ.PrisonerActionRevivePatientDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionRevivePatientDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionRevivePatientDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionSearchGround
// 0x0008 (0x00C8 - 0x00C0)
class UPrisonerActionSearchGround : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchGround");
		return ptr;
	}

};


// Class ConZ.PrisonerActionSearchGroundDescription
// 0x0030 (0x0060 - 0x0030)
class UPrisonerActionSearchGroundDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0030(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchGroundDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionSearchObject
// 0x0010 (0x00D0 - 0x00C0)
class UPrisonerActionSearchObject : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchObject");
		return ptr;
	}

};


// Class ConZ.PrisonerActionSearchObjectDescription
// 0x0030 (0x0060 - 0x0030)
class UPrisonerActionSearchObjectDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0030(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchObjectDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionSearchPrisoner
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionSearchPrisoner : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchPrisoner");
		return ptr;
	}

};


// Class ConZ.PrisonerActionSearchPrisonerDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionSearchPrisonerDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchPrisonerDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStartCarryingItem
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionStartCarryingItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStartCarryingItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStartCarryingItemDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionStartCarryingItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStartCarryingItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStartPlayingInstrument
// 0x0000 (0x00C0 - 0x00C0)
class UPrisonerActionStartPlayingInstrument : public UPrisonerAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStartPlayingInstrument");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStartPlayingInstrumentDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionStartPlayingInstrumentDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStartPlayingInstrumentDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStartResting
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionStartResting : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStartResting");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStartRestingDescription
// 0x00B0 (0x00E0 - 0x0030)
class UPrisonerActionStartRestingDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0030(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStartRestingDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStopResting
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionStopResting : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStopResting");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStopRestingDescription
// 0x0000 (0x0030 - 0x0030)
class UPrisonerActionStopRestingDescription : public UCharacterActionDescription
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStopRestingDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStoreItem
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionStoreItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStoreItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionStoreItemDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionStoreItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionStoreItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTakeItemInHands
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionTakeItemInHands : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTakeItemInHands");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTakeItemInHandsDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionTakeItemInHandsDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTakeItemInHandsDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTakeMedication
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionTakeMedication : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTakeMedication");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTakeMedicationDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionTakeMedicationDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTakeMedicationDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTameAnimal
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionTameAnimal : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTameAnimal");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTameAnimalDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionTameAnimalDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTameAnimalDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTankFuel
// 0x0000 (0x00B0 - 0x00B0)
class UPrisonerActionTankFuel : public UCharacterAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTankFuel");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTankFuelDescription
// 0x0018 (0x0048 - 0x0030)
class UPrisonerActionTankFuelDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTankFuelDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTreatBrokenLimbs
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionTreatBrokenLimbs : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTreatBrokenLimbs");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTreatBrokenLimbsDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionTreatBrokenLimbsDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTreatBrokenLimbsDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTreatSickness
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionTreatSickness : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTreatSickness");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTreatSicknessDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionTreatSicknessDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTreatSicknessDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTuneBow
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionTuneBow : public UCharacterAction
{
public:
	class UAkAudioEvent*                               _tuneBowAudioEvent;                                       // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTuneBow");
		return ptr;
	}

};


// Class ConZ.PrisonerActionTuneBowDescription
// 0x0010 (0x0040 - 0x0030)
class UPrisonerActionTuneBowDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionTuneBowDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionUncraftItem
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionUncraftItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionUncraftItem");
		return ptr;
	}

};


// Class ConZ.PrisonerActionUncraftItemDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionUncraftItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionUncraftItemDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionUnequipWeapon
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionUnequipWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionUnequipWeapon");
		return ptr;
	}

};


// Class ConZ.PrisonerActionUnequipWeaponDescription
// 0x0000 (0x0030 - 0x0030)
class UPrisonerActionUnequipWeaponDescription : public UCharacterActionDescription
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionUnequipWeaponDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionUrinate
// 0x0010 (0x00C0 - 0x00B0)
class UPrisonerActionUrinate : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionUrinate");
		return ptr;
	}

};


// Class ConZ.PrisonerActionUrinateDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionUrinateDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionUrinateDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionVomit
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionVomit : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionVomit");
		return ptr;
	}

};


// Class ConZ.PrisonerActionVomitDescription
// 0x0008 (0x0038 - 0x0030)
class UPrisonerActionVomitDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionVomitDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionWashCloth
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionWashCloth : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionWashCloth");
		return ptr;
	}

};


// Class ConZ.UPrisonerActionWashClothDescription
// 0x0020 (0x0050 - 0x0030)
class UUPrisonerActionWashClothDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UPrisonerActionWashClothDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerActionWhistle
// 0x0008 (0x00B8 - 0x00B0)
class UPrisonerActionWhistle : public UCharacterAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionWhistle");
		return ptr;
	}

};


// Class ConZ.PrisonerActionWhistleDescription
// 0x0000 (0x0030 - 0x0030)
class UPrisonerActionWhistleDescription : public UCharacterActionDescription
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerActionWhistleDescription");
		return ptr;
	}

};


// Class ConZ.PrisonerAIController
// 0x0028 (0x0460 - 0x0438)
class APrisonerAIController : public AAIController
{
public:
	class APrisoner*                                   _prisoner;                                                // 0x0438(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPrisonerMovementComponent*                  _prisonerMovementComponent;                               // 0x0440(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0448(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerAIController");
		return ptr;
	}

};


// Class ConZ.PrisonerAnimInstance
// 0x0E60 (0x11C0 - 0x0360)
class UPrisonerAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x160];                                     // 0x0360(0x0160) MISSED OFFSET
	float                                              MeleeCombatWalkUsageRadius;                               // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeleeExhaustionFactorInterpSpeed;                         // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UpperEyelidsLookLeftFactor;                               // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowerEyelidsLookLeftFactor;                               // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UpperEyelidsLookRightFactor;                              // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowerEyelidsLookRightFactor;                              // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UpperEyelidsLookUpFactor;                                 // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowerEyelidsLookUpFactor;                                 // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UpperEyelidsLookDownFactor;                               // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowerEyelidsLookDownFactor;                               // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AutoBlinkEnabled;                                         // 0x04E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x9F];                                      // 0x04E9(0x009F) MISSED OFFSET
	bool                                               _isPrisonerCompletelyInitialized;                         // 0x0588(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isOwnerLocallyControlled;                                // 0x0589(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isOwnerPlayerControlled;                                 // 0x058A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isInFirstPersonView;                                     // 0x058B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isAimingWeapon;                                          // 0x058C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isAbleToFireWeapon;                                      // 0x058D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EWeaponAimingType                                  _weaponAimingType;                                        // 0x058E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x058F(0x0001) MISSED OFFSET
	struct FVector                                     _weaponSupportingHandIKLocation;                          // 0x0590(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _weaponAimYaw;                                            // 0x059C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _weaponAimPitch;                                          // 0x05A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	class UAnimSequenceBase*                           _meleeSkill_PrimaryIdleAnimationTP;                       // 0x05A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_PrimaryIdleAnimationFP;                       // 0x05B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_TiredIdleAnimationTP;                         // 0x05B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_TiredIdleAnimationFP;                         // 0x05C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_WalkingIdleAnimationTP;                       // 0x05C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_WalkingIdleAnimationFP;                       // 0x05D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_BlockIdleAnimationTP;                         // 0x05D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _meleeSkill_BlockIdleAnimationFP;                         // 0x05E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 _meleeSkill_AimOffsetBlendSpaceTP;                        // 0x05E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 _meleeSkill_AimOffsetBlendSpaceFP;                        // 0x05F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _meleeSkill_IdleToBlockBlendDuration;                     // 0x05F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _meleeSkill_BlockToIdleBlendDuration;                     // 0x05FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _meleeSkill_ExhaustionFactor;                             // 0x0600(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldUseUnarmedCombatWalk;                              // 0x0604(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isHoldingBlock;                                          // 0x0605(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0606(0x0002) MISSED OFFSET
	float                                              _stamina;                                                 // 0x0608(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _bellyJiggleAmount;                                       // 0x060C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _breastJiggleAmount;                                      // 0x0610(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    _eyesRotationDelta;                                       // 0x0614(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _minEyesRotationPitch;                                    // 0x0620(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _maxEyesRotationPitch;                                    // 0x0624(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldUseWeaponAnimationPose;                            // 0x0628(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xE7];                                      // 0x0629(0x00E7) MISSED OFFSET
	bool                                               _shouldIgnoreWeaponSupportingHandIK;                      // 0x0710(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0711(0x0003) MISSED OFFSET
	float                                              _firstPersonAimPitch;                                     // 0x0714(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _firstPersonAimYawDelta;                                  // 0x0718(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldAimDownTheSights;                                  // 0x071C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x071D(0x0003) MISSED OFFSET
	struct FVector                                     _aimingDownTheSightsLocationOffset;                       // 0x0720(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    _armsLagRotation;                                         // 0x072C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _armsLagPitch;                                            // 0x0738(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _armsLagYaw;                                              // 0x073C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerStance                                    _stance;                                                  // 0x0740(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0741(0x0003) MISSED OFFSET
	float                                              _crouchStage;                                             // 0x0744(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _targetCrouchStage;                                       // 0x0748(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isFreeLookEnabled;                                       // 0x074C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x074D(0x0003) MISSED OFFSET
	struct FRotator                                    _aimOffset;                                               // 0x0750(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _leanAmount;                                              // 0x075C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldLookAtMeleeTarget;                                 // 0x0760(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0761(0x0003) MISSED OFFSET
	struct FRotator                                    _lookAtMeleeTargetAimOffset;                              // 0x0764(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	EPrisonerAnimationSet                              _animationSet;                                            // 0x0770(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isInRagdoll;                                             // 0x0771(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isMovingOnGround;                                        // 0x0772(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isFalling;                                               // 0x0773(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isSwimming;                                              // 0x0774(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0775(0x0003) MISSED OFFSET
	struct FVector                                     _acceleration;                                            // 0x0778(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               _wantsToMove;                                             // 0x0784(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _wantsToMoveHorizontallyOnly;                             // 0x0785(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _wantsToMoveVerticallyOnly;                               // 0x0786(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _wantsToWalk;                                             // 0x0787(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _wantsToJog;                                              // 0x0788(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _wantsToRun;                                              // 0x0789(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x078A(0x0002) MISSED OFFSET
	struct FVector                                     _velocity;                                                // 0x078C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0798(0x0004) MISSED OFFSET
	float                                              _speed;                                                   // 0x079C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _speedXY;                                                 // 0x07A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _maxSpeed;                                                // 0x07A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _stoppingDistance;                                        // 0x07A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x50];                                      // 0x07AC(0x0050) MISSED OFFSET
	float                                              _leftHandIKAmount;                                        // 0x07FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _desiredCourseAngle;                                      // 0x0800(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _desiredCoursePitchAngle;                                 // 0x0804(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _actualCourseAngle;                                       // 0x0808(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _desiredMovementPace;                                     // 0x080C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _clampedDesiredMovementPace;                              // 0x080D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _movementPaceBeforeGroundStart;                           // 0x080E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x1];                                       // 0x080F(0x0001) MISSED OFFSET
	float                                              _legsPoseBeforeGroundStop;                                // 0x0810(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECardinalDirection                                 _movementDirectionBeforeGroundStop;                       // 0x0814(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _movementPaceBeforeGroundStop;                            // 0x0815(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerAnimationSet                              _animationSetBeforeGroundStop;                            // 0x0816(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldUseLUGroundStopAnimation;                          // 0x0817(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EHitReactState                                     _hitReactState;                                           // 0x0818(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _useLocomotionAdditiveAnimations;                         // 0x0819(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x081A(0x0002) MISSED OFFSET
	float                                              _drunkenness;                                             // 0x081C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _drunkennessMultiplier;                                   // 0x0820(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0824(0x0004) MISSED OFFSET
	float                                              _jumpApex;                                                // 0x0828(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _distanceToJumpApex;                                      // 0x082C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _legsPoseBeforeJump;                                      // 0x0830(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _movementPaceBeforeJump;                                  // 0x0834(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerAnimationSet                              _animationSetBeforeJump;                                  // 0x0835(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldJumpGoToFallingLoop;                               // 0x0836(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1];                                       // 0x0837(0x0001) MISSED OFFSET
	float                                              _waterImmersionDepth;                                     // 0x0838(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _meshOffsetWhenInWater;                                   // 0x083C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               _wantsToDiveIn;                                           // 0x0848(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0xD3];                                      // 0x0849(0x00D3) MISSED OFFSET
	bool                                               _isClimbing;                                              // 0x091C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isClimbingAnchoring;                                     // 0x091D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x82];                                      // 0x091E(0x0082) MISSED OFFSET
	class UAnimSequenceBase*                           _climbAnchoringAnimation;                                 // 0x09A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _climbAnchoringAnimationTime;                             // 0x09A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isClimbingLadder;                                        // 0x09AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0xB3];                                      // 0x09AD(0x00B3) MISSED OFFSET
	struct FVector                                     _ladderClimbingRootBoneOffset;                            // 0x0A60(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _ladderClimbingLoopState;                                 // 0x0A6C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _ladderClimbingLoopStateForPeeking;                       // 0x0A70(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _ladderClimbingPeekState;                                 // 0x0A74(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isClimbingWindow;                                        // 0x0A78(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isClimbingWindowAnchoring;                               // 0x0A79(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x6];                                       // 0x0A7A(0x0006) MISSED OFFSET
	class UAnimSequenceBase*                           _windowClimbingAnchoringAnimation;                        // 0x0A80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _windowClimbingAnchoringAnimationTime;                    // 0x0A88(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EWeaponType                                        _weaponType;                                              // 0x0A8C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isDedicatedServer;                                       // 0x0A8D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x34A];                                     // 0x0A8E(0x034A) MISSED OFFSET
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyStandIdleAnimation;            // 0x0DD8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyStandWalkAnimation;            // 0x0DE0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               _weaponFirstPersonUpperBodyStandWalkBlendSpace;           // 0x0DE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyStandJogAnimation;             // 0x0DF0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               _weaponFirstPersonUpperBodyStandJogBlendSpace;            // 0x0DF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyStandRunAnimation;             // 0x0E00(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyCrouchIdleAnimation;           // 0x0E08(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyCrouchWalkAnimation;           // 0x0E10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               _weaponFirstPersonUpperBodyCrouchWalkBlendSpace;          // 0x0E18(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _weaponFirstPersonUpperBodyProneIdleAnimation;            // 0x0E20(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightHandCorrectionPoseStanding;                         // 0x0E28(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightHandCorrectionPoseCrouching;                        // 0x0E30(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightHandCorrectionPoseProne;                            // 0x0E38(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseStanding;                         // 0x0E40(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseStandingInCombatMode;             // 0x0E48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseCrouching;                        // 0x0E50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseProne;                            // 0x0E58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _rightHandToIdleBlendAlphaStanding;                       // 0x0E60(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _rightHandToIdleBlendAlphaCrouching;                      // 0x0E64(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftHandCorrectionPoseStanding;                          // 0x0E68(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftHandCorrectionPoseCrouching;                         // 0x0E70(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftHandCorrectionPoseProne;                             // 0x0E78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseStanding;                          // 0x0E80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseStandingInCombatMode;              // 0x0E88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseCrouching;                         // 0x0E90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseProne;                             // 0x0E98(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _leftHandToIdleBlendAlphaStanding;                        // 0x0EA0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _leftHandToIdleBlendAlphaCrouching;                       // 0x0EA4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x8];                                       // 0x0EA8(0x0008) MISSED OFFSET
	bool                                               _hasItemInHands;                                          // 0x0EB0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isInCombatMode;                                          // 0x0EB1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldUseHandCorrections;                                // 0x0EB2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldUseFistCorrections;                                // 0x0EB3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _overrideFingersOnlyInProne;                              // 0x0EB4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _ignoreAimOffsets;                                        // 0x0EB5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPrisonerMontageBlendType                          _prisonerMontageBlendType;                                // 0x0EB6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isAimingBow;                                             // 0x0EB7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _bowArmsShakeValue;                                       // 0x0EB8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isScoping;                                               // 0x0EBC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x223];                                     // 0x0EBD(0x0223) MISSED OFFSET
	bool                                               _shouldUpperBodyBeUsedAsFullBodyInIdle;                   // 0x10E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isPlayingInstrument;                                     // 0x10E1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x6];                                       // 0x10E2(0x0006) MISSED OFFSET
	class UAnimSequenceBase*                           _playingInstrumentIdleAnimation;                          // 0x10E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _playingInstrumentPlayAnimation;                          // 0x10F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPlayingInstrumentState                            _playingInstrumentState;                                  // 0x10F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isCarryingItem;                                          // 0x10F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x6];                                       // 0x10FA(0x0006) MISSED OFFSET
	class UAnimSequenceBase*                           _carryingItemIdleFPAnimation;                             // 0x1100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _carryingItemIdleTPAnimation;                             // 0x1108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECarryingItemState                                 _carryingItemState;                                       // 0x1110(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isMounted;                                               // 0x1111(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x6];                                       // 0x1112(0x0006) MISSED OFFSET
	class UAnimSequenceBase*                           _mountedAnimation;                                        // 0x1118(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isMountedVehicle;                                        // 0x1120(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isMountedSledge;                                         // 0x1121(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isVehicleDriver;                                         // 0x1122(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x5];                                       // 0x1123(0x0005) MISSED OFFSET
	class UBlendSpace*                                 _vehicleDriverForwardIdleAnimation;                       // 0x1128(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _vehicleDriverForwardSteeringAnimation;                   // 0x1130(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 _vehicleDriverReverseIdleAnimation;                       // 0x1138(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _vehicleDriverReverseSteeringAnimation;                   // 0x1140(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 _vehiclePassengerIdleAnimation;                           // 0x1148(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleSpeed;                                            // 0x1150(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleSpeedKph;                                         // 0x1154(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleBumpiness;                                        // 0x1158(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleDriverSteeringAnimationTime;                      // 0x115C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleDriverSteeringAnimationTimeInterpSpeed;           // 0x1160(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleThrottleAmount;                                   // 0x1164(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleBrakeAmount;                                      // 0x1168(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleHandbrakeAmount;                                  // 0x116C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleSteerAmount;                                      // 0x1170(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isSledgeAcceleratingForward;                             // 0x1174(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isSledgeAcceleratingBackward;                            // 0x1175(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x2];                                       // 0x1176(0x0002) MISSED OFFSET
	float                                              _sledgeSlidingThresholdSpeed;                             // 0x1178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isSledgeSliding;                                         // 0x117C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x3];                                       // 0x117D(0x0003) MISSED OFFSET
	class UAnimSequenceBase*                           _bowArmsShakeAnimation;                                   // 0x1180(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _weaponBreathFactor;                                      // 0x1188(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _weaponAimDownTheSightsStillBlendFactor;                  // 0x118C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _areHandsBound;                                           // 0x1190(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x7];                                       // 0x1191(0x0007) MISSED OFFSET
	class UAnimSequenceBase*                           _handsBoundIdleFPAnimation;                               // 0x1198(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _handsBoundIdleTPAnimation;                               // 0x11A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isResting;                                               // 0x11A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x7];                                       // 0x11A9(0x0007) MISSED OFFSET
	class UAnimSequenceBase*                           _restingAnimation;                                        // 0x11B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _restingFeetOffset;                                       // 0x11B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isLimping;                                               // 0x11BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData34[0x3];                                       // 0x11BD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance");
		return ptr;
	}


	void TakePenis();
	void ReleasePenis();
	void OnIdleStateExit(const struct FAnimNode_StateMachine& machine, int prevStateIndex, int nextStateIndex);
	void OnIdleStateEntry(const struct FAnimNode_StateMachine& machine, int prevStateIndex, int nextStateIndex);
	bool IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle);
	bool IsAnyStanceTransitionActive();
	float GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread();
	class UAnimSequenceBase* GetWeaponAnimationPoseOnWorkerThread(EWeaponAnimationPose animationPose, EPrisonerStance Stance);
	class UBlendSpace* GetWeaponAimOffsetOnGameThread(EPrisonerAimOffsetType prisonerAimOffsetType);
	float GetWeaponAimingNoisePlayRateOnGameThread();
	float GetWeaponAimingNoiseBlendValueOnGameThread();
	struct FRotator GetUpperEyelidRotationDelta();
	float GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate);
	struct FRotator GetLowerEyelidRotationDelta();
	float GetLocomotionStateWeight(EPrisonerAnimationState State);
	void GetLeanBlendWeights(float Multiplier, class UCurveFloat* strengthBySpeedCurve, float* Left, float* Right);
	float GetKnownCurveValueOnWorkerThread(EPrisonerAnimationCurve Curve);
	float GetInPlaceTurningElapsedTimeRight(EPrisonerStance Stance);
	float GetInPlaceTurningElapsedTimeLeft(EPrisonerStance Stance);
	float GetInPlaceTurningDirectionBlendAlpha(EPrisonerStance Stance);
	float GetInPlaceTurningBlendAlpha(EPrisonerStance Stance);
	struct FVector GetIKLegsRootOffsetVectorFromCardinalDirection(ECardinalDirection Value);
	float GetFacialExpressionBlendWeightOnWorkerThread(EPrisonerFacialExpression facialExpression);
	float GetFacialExpressionBlendWeightOnGameThread(EPrisonerFacialExpression facialExpression);
	float GetCurrentLocomotionStateElapsedTime();
	EPrisonerAnimationState GetCurrentLocomotionState();
	ECardinalDirection GetCardinalDirectionFromCourseAngle(float Value);
	float GetBoxingTurnAngle();
	float GetBoxingInPlaceTurningElapsedTimeRight();
	float GetBoxingInPlaceTurningElapsedTimeLeft();
	float GetBoxingInPlaceTurningDirectionBlendAlpha();
	float GetBoxingInPlaceTurningBlendAlpha();
	class UAnimSequenceBase* GetBowArmsShakeAnimationOnGameThread(EPrisonerStance Stance);
	float STATIC_FindTimeBeforeJumpApex(class UAnimSequenceBase* AnimSequence, float distanceToApex);
	float STATIC_FindTimeAtStoppingDistance(class UAnimSequenceBase* AnimSequence, float stoppingDistance);
	float STATIC_FindTimeAfterJumpApex(class UAnimSequenceBase* AnimSequence, float distanceToApex);
	void DeactivateFacialExpressionOnGameThread(EPrisonerFacialExpression facialExpression);
	void DeactivateAllFacialExpressionsOnGameThread();
	void Blink();
	void AnimNotify_ThrowRelease(class UAnimNotify* Notify);
	void AnimNotify_TakePenis();
	void AnimNotify_TakeItemInHands(class UAnimNotify* Notify);
	void AnimNotify_RFootDown();
	void AnimNotify_RemoveItemFromHands(class UAnimNotify* Notify);
	void AnimNotify_ReleasePenis();
	void AnimNotify_LFootDown();
	void AnimNotify_EnableCapsuleCollision(class UAnimNotify* Notify);
	void AnimNotify_DisableCapsuleCollision(class UAnimNotify* Notify);
	void ActivateFacialExpressionOnGameThread(EPrisonerFacialExpression facialExpression, float blendInDuration, float Duration, float blendOutDuration, float blendWeightMultiplier);
};


// Class ConZ.PrisonerAnimNotify_PlayGearSound
// 0x0008 (0x0040 - 0x0038)
class UPrisonerAnimNotify_PlayGearSound : public UAnimNotify
{
public:
	EMotionIntensity                                   motionIntensity;                                          // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerAnimNotify_PlayGearSound");
		return ptr;
	}

};


// Class ConZ.PrisonerAppearanceDataAsset
// 0x00E0 (0x0110 - 0x0030)
class UPrisonerAppearanceDataAsset : public UDataAsset
{
public:
	TArray<struct FPrisonerAppearanceData>             FemaleCharacterData;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FPrisonerAppearanceData>             MaleCharacterData;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TMap<struct FGameplayTag, struct FPrisonerAppearanceMeshSet> MeshSets;                                                 // 0x0050(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TMap<struct FGameplayTag, struct FPrisonerAppearanceMaterialSet> MaterialSets;                                             // 0x00A0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FPrisonerTattooMaterialSet>          FemaleTattoos;                                            // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FPrisonerTattooMaterialSet>          MaleTattoos;                                              // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerAppearanceDataAsset");
		return ptr;
	}


	int GetTattooMaterialSetCount(EGender Gender);
	int GetAppearanceDataCount(EGender Gender);
};


// Class ConZ.PrisonerBuryComponent
// 0x0008 (0x0108 - 0x0100)
class UPrisonerBuryComponent : public UCharacterActionComponent
{
public:
	EBuryState                                         _buryState;                                               // 0x0100(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerBuryComponent");
		return ptr;
	}


	void OnRep_BuryState();
};


// Class ConZ.PrisonerCorpse
// 0x01E0 (0x06E0 - 0x0500)
class APrisonerCorpse : public ACorpse
{
public:
	TArray<struct FCorpseStaticMeshRepData>            StrippedStaticMeshData;                                   // 0x0500(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	TArray<struct FCorpseSkeletalMeshRepData>          StrippedSkeletalMeshData;                                 // 0x0510(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	TArray<struct FCorpseStaticMeshRepData>            StandardStaticMeshData;                                   // 0x0520(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	TArray<struct FCorpseSkeletalMeshRepData>          StandardSkeletalMeshData;                                 // 0x0530(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	class UChoppingRecipeDataAsset*                    HeadlessChoppingRecipeDataAsset;                          // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LivingClass;                                              // 0x0548(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GibClass;                                                 // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             HeadExplosionParticles;                                   // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               HeadExplodedMesh;                                         // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UStaticMesh*>                         HeadExplosionGibMeshes;                                   // 0x0568(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0578(0x0008) MISSED OFFSET
	struct FCorpseSkeletalMeshRepData                  PenisMeshData;                                            // 0x0580(0x0070) (Edit, BlueprintVisible, Net)
	struct FCorpseSkeletalMeshRepData                  StrippedPenisMeshData;                                    // 0x05F0(0x0070) (Edit, BlueprintVisible, Net)
	class UStaticMesh*                                 CensorMesh;                                               // 0x0660(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 CensorMesh2;                                              // 0x0668(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   CensorMaterial;                                           // 0x0670(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      PenisComponent;                                           // 0x0678(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        GenitalsCensorComponent;                                  // 0x0680(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PenisCensorComponent;                                     // 0x0688(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LeftBreastCensorComponent;                                // 0x0690(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        RightBreastCensorComponent;                               // 0x0698(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               Headless;                                                 // 0x06A0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	EGender                                            _gender;                                                  // 0x06A1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x06A2(0x0002) MISSED OFFSET
	float                                              _fatness;                                                 // 0x06A4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _leanness;                                                // 0x06A8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _breastSize;                                              // 0x06AC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _penisSize;                                               // 0x06B0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                _appearanceIndex;                                         // 0x06B4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _penisLocationLean;                                       // 0x06B8(0x000C) (Net, IsPlainOldData)
	struct FVector                                     _penisLocationFat;                                        // 0x06C4(0x000C) (Net, IsPlainOldData)
	bool                                               _penisShowing;                                            // 0x06D0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _breastsShowing;                                          // 0x06D1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x06D2(0x0002) MISSED OFFSET
	float                                              _hairLength;                                              // 0x06D4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _facialHairLength;                                        // 0x06D8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x06DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerCorpse");
		return ptr;
	}


	void UpdateWetnessFromPrisoner(class APrisoner* Prisoner);
	void UpdateHair();
	void OnRep_PenisShowing();
	void OnRep_HairLength();
	void OnRep_FacialHairLength();
	void OnRep_BreastsShowing();
	void OnConcealedModeChanged(bool Value);
	class USkeletalMeshComponent* GetHairMeshComponent();
	float GetHairLength();
	class USkeletalMeshComponent* GetFacialHairMeshComponent();
	float GetFacialHairLength();
};


// Class ConZ.PrisonerFirstPersonSubviewComponent
// 0x0080 (0x0860 - 0x07E0)
class UPrisonerFirstPersonSubviewComponent : public UCameraComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x07E0(0x0008) MISSED OFFSET
	float                                              MinViewPitch;                                             // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxViewPitch;                                             // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinViewYaw;                                               // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxViewYaw;                                               // 0x07F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveLinearColor*                           MinMaxViewPitchByYawAndSpeed;                             // 0x07F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                LocalSpaceOffsetByYaw;                                    // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                LocalSpaceOffsetByPitch;                                  // 0x0808(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                ActorSpaceOffsetByYaw;                                    // 0x0810(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                ActorSpaceOffsetByPitch;                                  // 0x0818(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProbeSize;                                                // 0x0820(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     ProbeChannel;                                             // 0x0824(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DoCollisionTest;                                          // 0x0825(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0826(0x0002) MISSED OFFSET
	struct FName                                       AnimationBobbingTYCurveName;                              // 0x0828(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationBobbingTZCurveName;                              // 0x0830(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationBobbingRYCurveName;                              // 0x0838(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationBobbingRPCurveName;                              // 0x0840(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationBobbingRRCurveName;                              // 0x0848(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnimationBobbingTScale;                                   // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnimationBobbingRScale;                                   // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _minFactorForPrisonerHiding;                              // 0x0858(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x085C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerFirstPersonSubviewComponent");
		return ptr;
	}

};


// Class ConZ.PrisonerViewComponent
// 0x0020 (0x0110 - 0x00F0)
class UPrisonerViewComponent : public UActorComponent
{
public:
	float                                              DefaultSubviewBlendDuration;                              // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x00F4(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerViewComponent");
		return ptr;
	}

};


// Class ConZ.PrisonerFirstPersonViewComponent
// 0x0120 (0x0230 - 0x0110)
class UPrisonerFirstPersonViewComponent : public UPrisonerViewComponent
{
public:
	float                                              StandingToCrouchingSubviewBlendDuration;                  // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandingToProneSubviewBlendDuration;                      // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandingToStandingMeleeSubviewBlendDuration;              // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchingToStandingSubviewBlendDuration;                  // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchingToProneSubviewBlendDuration;                     // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneToStandingSubviewBlendDuration;                      // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneToCrouchingSubviewBlendDuration;                     // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandingMeleeToStandingSubviewBlendDuration;              // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToStandingAimingSubviewBlendDuration;                  // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToCrouchingAimingSubviewBlendDuration;                 // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToProneAimingSubviewBlendDuration;                     // 0x0138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToStandingAimingDownTheSightsSubviewBlendDuration;     // 0x013C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToCrouchingAimingDownTheSightsSubviewBlendDuration;    // 0x0140(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToProneAimingDownTheSightsSubviewBlendDuration;        // 0x0144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToClimbingWindowSubviewBlendDuration;                  // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyFromClimbingWindowSubviewBlendDuration;                // 0x014C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToMountedSubviewBlendDuration;                         // 0x0150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyFromMountedSubviewBlendDuration;                       // 0x0154(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyToLyingSubviewBlendDuration;                           // 0x0158(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnyFromLyingSubviewBlendDuration;                         // 0x015C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingSubviewName;                                      // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchingSubviewName;                                     // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProneSubviewName;                                         // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingMeleeSubviewName;                                 // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingAimingSubviewName;                                // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchingAimingSubviewName;                               // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProneAimingSubviewName;                                   // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingAimingDownTheSightsSubviewName;                   // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchingAimingDownTheSightsSubviewName;                  // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProneAimingDownTheSightsSubviewName;                      // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ClimbingWindowSubviewName;                                // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       MountedSubviewName;                                       // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       LyingSubviewName;                                         // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x68];                                      // 0x01C8(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerFirstPersonViewComponent");
		return ptr;
	}

};


// Class ConZ.PrisonerHUD
// 0x0138 (0x0550 - 0x0418)
class APrisonerHUD : public AHUD
{
public:
	class UHudWidget*                                  HudWidget;                                                // 0x0418(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDamageDirectionIndicator*                   DamageDirectionIndicator;                                 // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData)
	bool                                               ShouldDrawCrosshair;                                      // 0x0428(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDrawScreenCenterDot;                                // 0x0429(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x042A(0x0006) MISSED OFFSET
	class UMaterialInterface*                          TacticsMaterial;                                          // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ULoadingIconWidget*                          LoadingIconWidget;                                        // 0x0438(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpawnScreen*                                SpawnScreenWidget;                                        // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWaypointScreenWidget*                       WaypointScreenWidget;                                     // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHoverPanelWidget*                           HoverPanelWidget;                                         // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFont*                                       _HUDFont;                                                 // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0460(0x0040) MISSED OFFSET
	float                                              _mapPropertiesOpacity;                                    // 0x04A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      _mapPropertiesColor;                                      // 0x04A4(0x0004) (Edit, IsPlainOldData)
	class UTexture*                                    _dronePositionTexture;                                    // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    _droneDirectionTexture;                                   // 0x04B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    _dronePingAnimationTexture;                               // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    _prisonerPositionTexture;                                 // 0x04C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   _prisonerPositionTextureSize;                             // 0x04C8(0x0008) (Edit, IsPlainOldData)
	float                                              _prisonerPingSizeMultiplier;                              // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5C];                                      // 0x04D4(0x005C) MISSED OFFSET
	class UGameEventScoreboardWidget*                  _scoreboardWidget;                                        // 0x0530(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0538(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerHUD");
		return ptr;
	}


	void ToggleHUDMode();
	void SetHUDMode(EPrisonerHUDMode NewMode);
	bool IsShowingSpawnScreen();
	bool IsShowingLoading();
	class UWaypointScreenWidget* GetWaypointScreenWidget();
	class UCanvasPanel* GetHudWidgetCanvasPanel();
	EPrisonerHUDMode GetHUDMode();
	class UHoverPanelWidget* GetHoverPanelWidget();
};


// Class ConZ.PrisonerInventoryComponent
// 0x0220 (0x0310 - 0x00F0)
class UPrisonerInventoryComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    ItemEquipped;                                             // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ItemUnequipped;                                           // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UCraftingInfoWidget*>                 CraftingInfoWidgets;                                      // 0x0120(0x0010) (ExportObject, ZeroConstructor)
	float                                              AddSelectionDuration;                                     // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AddSelectionReplicationDelay;                             // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x0138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              _startingClothesFemale;                                   // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              _startingClothesFemaleDeluxe;                             // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              _startingClothesMale;                                     // 0x0160(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              _startingClothesMaleDeluxe;                               // 0x0170(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0180(0x0008) MISSED OFFSET
	class UStaticMesh*                                 _chipMesh;                                                // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0190(0x0020) MISSED OFFSET
	TMap<TWeakObjectPtr<class AItem>, uint32_t>        _vicinityItems;                                           // 0x01B0(0x0050) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0200(0x0008) MISSED OFFSET
	TMap<struct FGameplayTag, struct FClothesPartSet>  _clothesPartsToDamageByMeleeAttackCapsuleAttachment;      // 0x0208(0x0050) (Edit, ZeroConstructor)
	class UInventoryContainerClothes*                  _inventoryClothes;                                        // 0x0258(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryContainerHandsHolsters*            _inventoryHandsHolsters;                                  // 0x0260(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryContainerSelection*                _inventorySelection2;                                     // 0x0268(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0xA0];                                      // 0x0270(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerInventoryComponent");
		return ptr;
	}


	void UnEquipStolenClothesItemOnServer(class APrisoner* stolenPrisoner, class AClothesItem* Item);
	void UnEquipClothesItemOnServer(class AClothesItem* Item, bool placeInInventory);
	void UnEquipClothesItem(class AClothesItem* Item, bool placeInInventory);
	void SpawnAndDropItemAtOnServer(class UContainerItemDescriptor* Item, const struct FVector& Location, const struct FRotator& Rotation);
	void Server_RemoveItemFromQuickAccess(int Index);
	void Server_PickupCorpse(class ACorpse* Corpse);
	void Server_InitializeItemVirtualizedInventory(class UObject* Item, class UObject* container);
	void Server_AddItemToQuickAccess(class AItem* Item, int Index);
	void RemoveStolenItemOnServer(class APrisoner* stolenPrisoner, class AItem* Item);
	TScriptInterface<class UInventoryNode> RemoveStacks(int stacksToSplit);
	void RemoveSelectionItemsOnClients(TArray<class AItem*> Items, bool allClients);
	void RemoveSelectionItemsOnClient(TArray<class AItem*> Items);
	void RemoveItemOnServer(class AItem* Item);
	void OnEquippedItemStaticMeshChanged(class AItem* Item);
	void OnEquippedItemSkeletalMeshChanged(class AItem* Item);
	void OnEquippedClothesDestroyed(class AActor* Actor);
	void ItemUnequippedDelegate__DelegateSignature(class UPrisonerInventoryComponent* sender, class AItem* Item);
	void ItemEquippedDelegate__DelegateSignature(class UPrisonerInventoryComponent* sender, class AItem* Item);
	bool IsClothesItemEquipped(class AClothesItem* Item);
	bool HasSelectionItem(class AItem* Item);
	TArray<class AItem*> GetVicinityItems(bool containedItems);
	int GetStacksCount();
	float GetMaxHairLength(EGender Gender);
	float GetMaxFacialHairLength();
	float GetGearWeightFast();
	float GetGearWeight();
	TArray<class AClothesItem*> GetEquippedItemsForClothesType(EClothesType ClothesType);
	TArray<class AClothesItem*> GetEquippedClothes();
	EBodySlot GetBodySlotForClothesType(EClothesType ClothesType);
	EBodySlot GetBodySlotForBodyPart(EBodyPart bodyPart);
	TArray<class AItem*> GetAllItems(bool containedItems);
	void FinishAddSelectionItemOnServer();
	void EquipItemInHandsOnServer(class AItem* Item);
	void EquipItemInHandsOnClient(class AItem* Item);
	void EquipClothesItemOnServer(class AClothesItem* Item);
	void EquipClothesItem(class AClothesItem* Item);
	void DropItemOnServer(class AItem* Item);
	void DropItemOnClient(class AItem* Item);
	void DropItemAtOnServer(class AItem* Item, const struct FVector& Location, const struct FRotator& Rotation);
	void DropAllItemsOnServer(TArray<class AItem*> Items, bool removeSelection);
	void Client_AddItemToQuickAccess(class AItem* Item, int Index);
	bool CanStackWith(class UObject* Item);
	bool CanStack();
	bool CanEquipClothesItem(class AClothesItem* Item);
	bool CanAddItem(class AItem* Item, bool tryToJoinItems);
	void AutoAddItemOnServer(class AItem* Item, bool tryToJoinItems);
	void AutoAddAllItemsOnServer(TArray<class AItem*> Items, bool removeSelection);
	void AddStack(const TScriptInterface<class UInventoryNode>& Item);
	void AddSelectionItemOnClient(class AItem* Item);
	void AddDefaultEquipment();
};


// Class ConZ.PrisonerLifeComponent
// 0x0880 (0x0970 - 0x00F0)
class UPrisonerLifeComponent : public UActorComponent
{
public:
	float                                              GameTimeMultiplier;                                       // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BCUDataDownloadInterval;                                  // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ComputeStamina;                                           // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              StaminaMultiplier;                                        // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UpdateFatness;                                            // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UpdateLeanness;                                           // 0x0101(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UpdateHairLength;                                         // 0x0102(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UpdateFacialHairLength;                                   // 0x0103(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldAgeAffectAttributes;                                // 0x0104(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	float                                              BreathOxygenSaturationRateIdle;                           // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BreathOxygenSaturationRateMoving;                         // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BreathOxygenSaturationRechargeRate;                       // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChokingOxygenSaturationThreshold;                         // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinUnconsciousTimeAfterMeleeCombatKnockout;               // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxUnconsciousTimeAfterMeleeCombatKnockout;               // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    StateAdded;                                               // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StateRemoved;                                             // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PrisonerDied;                                             // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               _BCUDataInitialized;                                      // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	float                                              SCR_Idle;                                                 // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_Walking;                                              // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_Jogging;                                              // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_Running;                                              // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_SlowDiving;                                           // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_MediumDiving;                                         // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_ExtraWhenMovingUphill;                                // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SCR_ExtraWhenMovingDownhill;                              // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SP_Easy;                                                  // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SP_Demanding;                                             // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SP_VeryDemanding;                                         // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DexterityModifierVsExcessGearWeight;                      // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RestingStaminaMultiplier;                                 // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CaloriesConsumptionModifierWhenMovingUphill;              // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CaloriesConsumptionModifierWhenMovingDownhill;            // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDamageModifierWhenStrengthIsMinimal;                 // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDamageModifierWhenStrengthIsMaximal;                 // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlcoholExcretionRate;                                     // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldOverridePulse;                                      // 0x01A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01A1(0x0003) MISSED OFFSET
	float                                              OverriddenPulse;                                          // 0x01A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldOverrideSystolicBloodPressure;                      // 0x01A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	float                                              OverriddenSystolicBloodPressure;                          // 0x01AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldOverrideDiastolicBloodPressure;                     // 0x01B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x01B1(0x0003) MISSED OFFSET
	float                                              OverriddenDiastolicBloodPressure;                         // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldOverrideBreathRate;                                 // 0x01B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x01B9(0x0003) MISSED OFFSET
	float                                              OverriddenBreathRate;                                     // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldOverrideBodyTemperature;                            // 0x01C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x01C1(0x0003) MISSED OFFSET
	float                                              OverriddenBodyTemperature;                                // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              PrisonWalletItems;                                        // 0x01C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      PrisonWalletMilestoneEventItem;                           // 0x01D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PrisonerWalletLastMilestone;                              // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RestHealingSpeedMultiplier;                               // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x58];                                      // 0x01E8(0x0058) MISSED OFFSET
	float                                              _initialStrength;                                         // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _initialConstitution;                                     // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _initialDexterity;                                        // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _initialIntelligence;                                     // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _initialAge;                                              // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldIgnoreBodyTemperatureChanges;                      // 0x0254(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x5B];                                      // 0x0255(0x005B) MISSED OFFSET
	bool                                               _overrideInitialWeight;                                   // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x02B1(0x0003) MISSED OFFSET
	float                                              _initialWeight;                                           // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x468];                                     // 0x02B8(0x0468) MISSED OFFSET
	TArray<class UDigestionItem*>                      _digestionItems;                                          // 0x0720(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0730(0x0008) MISSED OFFSET
	TArray<class USickness*>                           _sicknesses;                                              // 0x0738(0x0010) (ZeroConstructor)
	TArray<class UHealingItem*>                        _healingItems;                                            // 0x0748(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData13[0x9C];                                      // 0x0758(0x009C) MISSED OFFSET
	float                                              _forcedUrinationDefecationWarningDelay;                   // 0x07F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _forcedUrinationDefecationActionDelay;                    // 0x07F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x10];                                      // 0x07FC(0x0010) MISSED OFFSET
	uint32_t                                           _replicatedStatus;                                        // 0x080C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x0810(0x0008) MISSED OFFSET
	uint64_t                                           _replicatedStates;                                        // 0x0818(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedBreath;                                        // 0x0820(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedBodyTemp;                                      // 0x0824(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedEnergy;                                        // 0x0828(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedFatnessLeannessHair;                           // 0x082C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedAgilityNormalized;                             // 0x0830(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              _replicatedPace;                                          // 0x0834(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0835(0x0003) MISSED OFFSET
	uint32_t                                           _replicatedHealth;                                        // 0x0838(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedStamina;                                       // 0x083C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _replicatedSCR;                                           // 0x0840(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0844(0x0004) MISSED OFFSET
	struct FPrisonerBCUMonitorData                     _BCUMonitorData;                                          // 0x0848(0x0128) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerLifeComponent");
		return ptr;
	}


	void UpdateAttributesHistoryOnClient(TArray<float> strengthHistory, TArray<float> constitutionHistory, TArray<float> dexterityHistory, TArray<float> intelligenceHistory);
	void TestDoDigestionStuff(float Value);
	void TestDoBladderStuff(float Value);
	void TakeMedicationOnServer(class AMedicationItem* MedicationItem);
	void StopLifeProcessing();
	void StateRemovedDelegate__DelegateSignature(class UPrisonerLifeComponent* sender, EBodyState State);
	void StateAddedDelegate__DelegateSignature(class UPrisonerLifeComponent* sender, EBodyState State);
	void SetUsingDebugPresets(bool Value);
	void SetStrength(float Value);
	void SetStamina(float Value);
	void SetMuscularAndFatFactors(float muscular, float Fat);
	void SetMusclesOnServer(ETestMinMax Value);
	void SetIsDiving(bool IsDiving);
	void SetInitialAttributes(float Strength, float Constitution, float Dexterity, float Intelligence, int Age);
	void SetFatnessOnServer(ETestMinMax Value);
	void SetDexterity(float Value);
	void SetConstitution(float Value);
	void SetBreathRateFactorOnServer(float factor);
	void Server_SpawnPrisonWalletItem(const struct FVector& Location);
	void Server_SetStamina(float Value);
	void Server_SetInfiniteStamina(bool Value);
	void PushActionOnServer(float Duration, float staminaDrain, EPrisonerTempCategory tempCategory, float staminaRecoveryDelay, float staminaRecoveryTime);
	void PushAction(float Duration, float staminaDrain, EPrisonerTempCategory tempCategory, float staminaRecoveryDelay, float staminaRecoveryTime);
	void PrisonerDiedDelegate__DelegateSignature(class UPrisonerLifeComponent* sender);
	void OnRep_ReplicatedStatus();
	void OnRep_ReplicatedStates();
	void OnRep_BCUMonitorData();
	bool IsReadyToEat();
	bool IsLifeProcessingStopped();
	float IsDiving();
	bool IsConscious();
	bool IsChoking();
	bool IsBreathing();
	bool IsBodyPartInjured(EBodyPart bodyPart);
	bool IsAlive();
	bool HasState(EBodyState State);
	float GetWLTVeryDemanding();
	float GetWLTForActionDifficulty(EPrisonerActionDifficulty actionDifficulty);
	float GetWLTEasy();
	float GetWLTDemanding();
	float GetWLT();
	float GetWeightNormalized();
	float GetWeightLoad();
	float GetWeight();
	float GetWCRWalking();
	float GetWCRRunning();
	float GetWCRModifier();
	float GetWCRJogging();
	float GetWCRIdle();
	float GetWaterUsage();
	float GetWaterToAbsorb();
	float GetWaterIntake();
	float GetWaterBalanceClamped();
	float GetWaterBalance();
	float GetVitamin(EVitamin vitamin);
	float GetViewRange();
	float GetTemperatureDeviation();
	unsigned char GetTeethNumber();
	float GetSystolicBloodPressure();
	float GetSugarRDA();
	float GetSugarNormalized();
	float GetSugar();
	float GetStrengthNormalized();
	TArray<float> GetStrengthHistory();
	float GetStrengthGain();
	float GetStrengthChangeInLastPeriod();
	float GetStrength();
	float GetStorageFat();
	float GetStomachWaterVolume();
	float GetStomachVolumeRatio();
	float GetStomachVolumeOccupied();
	float GetStomachVolumeMax();
	float GetStaminaRecoveryModifier();
	float GetStaminaNormalized();
	float GetStaminaConsumptionModifier();
	float GetStamina();
	float GetSodiumRDA();
	float GetSodiumNormalized();
	float GetSodium();
	TArray<class USickness*> GetSicknesses();
	float GetSCRWalking();
	float GetSCRRunning();
	float GetSCRJogging();
	float GetSCRIdle();
	float GetSCR();
	float GetSaturatedFatRDA();
	float GetSaturatedFatNormalized();
	float GetSaturatedFat();
	float GetResistPoisonsModifier();
	float GetPulse();
	float GetProteinsRDA();
	float GetProteinsNormalized();
	float GetProteins();
	float GetPerformanceFailure();
	float GetOxygenSaturationRate();
	float GetOxygenSaturation();
	float GetMuscleMassRange();
	float GetMuscleMassChange();
	float GetMuscleMass();
	float GetMSR();
	float GetMSI();
	float GetMineral(EMineral mineral);
	float GetMinBreath();
	float GetMinBlood();
	float GetMetabolicCalories();
	float GetMaxHealth();
	float GetMaxFoodWeight();
	float GetMaxBreath();
	float GetLifeTime();
	float GetIntestineVolumeOccupied();
	float GetIntestineVolumeMax();
	float GetIntelligenceNormalized();
	TArray<float> GetIntelligenceHistory();
	float GetIntelligenceChangeInLastPeriod();
	float GetIntelligence();
	float GetInitialWeight();
	float GetInitialMuscleMass();
	float GetInitialBlood();
	float GetHydration();
	float GetHungerCalories();
	float GetHoldingBreathModifier();
	float GetHealthPointsModifier();
	float GetHealth();
	float GetHealingSpeedModifier();
	float GetHealingSpeed();
	TArray<class UHealingItem*> GetHealingItems();
	float GetGearWeightLimitForSwimming();
	float GetGearWeight();
	float GetFoodWeightRatio();
	float GetFoodWeight();
	float GetFiberRDA();
	float GetFiberNormalized();
	float GetFiber();
	float GetFatRDA();
	float GetFatNormalized();
	float GetFat();
	float GetEnergyUsage();
	float GetEnergyIntake();
	float GetEnergy();
	EPrisonerECGRhythm GetECGRhythm();
	float GetEatingSpeed();
	float GetDrunkenness();
	TArray<class UDigestionItem*> GetDigestionItems();
	float GetDiastolicBloodPressure();
	float GetDexterityNormalized();
	float GetDexterityMultiplier(float gearWeight, EPrisonerActionDifficulty actionDifficulty);
	TArray<float> GetDexterityHistory();
	float GetDexterityGain();
	float GetDexterityChangeInLastPeriod();
	float GetDexterity();
	float GetDailyWaterIntake();
	float GetDailySugarCalories();
	float GetDailyProteinsCalories();
	float GetDailyFatCalories();
	float GetDailyCarbsCalories();
	float GetDailyCaloriesIntake();
	float GetDailyAlcoholCalories();
	float GetCurrentWaterConsumption();
	EPrisonerMovementPace GetCurrentState();
	float GetCurrentStaminaChange();
	float GetCurrentCaloriesConsumption();
	float GetConstitutionNormalized();
	TArray<float> GetConstitutionHistory();
	float GetConstitutionGain();
	float GetConstitutionChangeInLastPeriod();
	float GetConstitution();
	float GetColonVolumeOccupied();
	float GetColonVolumeMax();
	float GetCarbsRDA();
	float GetCarbsNormalized();
	float GetCarbs();
	float GetCaloriesWalking();
	float GetCaloriesUsageSpeed();
	float GetCaloriesRunning();
	float GetCaloriesJogging();
	float GetCaloriesIdle();
	float GetCaloriesBurntModifier();
	float GetCaloriesBalance();
	float GetCalories();
	float GetBreathVolume();
	float GetBreath();
	float GetBodyTempIncrease();
	float GetBodyTempCategory();
	float GetBodyTemp();
	float GetBlood();
	EBleedingType GetBleedingType(EBodyPart bodyPart, bool returnNoneIfTreated);
	float GetBladderVolumeOccupied();
	float GetBladderVolumeMax();
	float GetBFP();
	bool GetBCUDataInitialized();
	bool GetAttributesHistoryInitialized();
	float GetAlcohol();
	float GetAge();
	class USickness* FindSickness(EDiagnosedResult diagnosedResult);
	void EnterUnconsciousness(float unconsciousTime, float deathTime);
	void EatFoodOnServer(class AFoodItem* FoodItem, bool eatAll);
	void DrinkWaterOnServer(float quantity, float salinity);
	void DownloadBCUMonitorDataFromServer();
	void DieOnServer();
	void Die();
	void Client_WarnForBodyState(EBodyState State);
	void CancelEatingOnServer();
	void CancelEating();
};


// Class ConZ.PrisonerLifeIndicatorsSprite
// 0x0020 (0x0228 - 0x0208)
class UPrisonerLifeIndicatorsSprite : public UUserWidget
{
public:
	class UBreathingBarLungsWidget*                    _breathingBarLungsWidget;                                 // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0210(0x000C) MISSED OFFSET
	float                                              _noiseInstigatedDelay;                                    // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerLifeIndicatorsSprite");
		return ptr;
	}


	void ShowBreathingWidgets();
	bool ShouldShowBreathingWidgets();
	void SetNoiseBarPercent(float percent);
	void SetBreathingBarPercent(float frontCirclePercent, float backCirclePercent);
	void OnStartDiving();
	void OnNoiseInstigated(float noisePercent);
	void OnEndDiving();
	void HideBreathingWidgets();
	float GetNoiseBarPercent();
	float GetFrontBreathingBarPercent();
	class UBreathingBarLungsWidget* GetBreathingBarLungsWidget();
	float GetBackBreathingBarPercent();
};


// Class ConZ.PrisonerLoadout
// 0x0068 (0x0098 - 0x0030)
class UPrisonerLoadout : public UDataAsset
{
public:
	class UClass*                                      primary;                                                  // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              primaryAttachments;                                       // 0x0038(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      secondary;                                                // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              secondaryAttachments;                                     // 0x0050(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      tertiary;                                                 // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              tertiaryAttachments;                                      // 0x0068(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              outfit;                                                   // 0x0078(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              support;                                                  // 0x0088(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerLoadout");
		return ptr;
	}


	void EquipPrisoner(class APrisoner* Prisoner, TArray<class AItem*>* givenItems);
};


// Class ConZ.PrisonerMovementComponent
// 0x0590 (0x0D00 - 0x0770)
class UPrisonerMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              CapsuleHalfHeightWhenSwimming;                            // 0x0770(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseCustomRotationRate;                                    // 0x0774(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RequestedPathMovesForwardOnly;                            // 0x0775(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0776(0x0002) MISSED OFFSET
	float                                              RotationInterpolationSpeed;                               // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x077C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 MaxRotationRateCurve;                                     // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenStanding;                       // 0x0788(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenCrouched;                       // 0x078C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenProne;                          // 0x0790(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenSwimming;                       // 0x0794(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenSwimmingAndDiving;              // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundSlopeAngleForSpeedScalingSmoothingRate;             // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundSlopeAngleSmoothingRate;                            // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseSmoothedGroundSlopeAngleForPaceChecks;                 // 0x07A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x07A5(0x0003) MISSED OFFSET
	float                                              MinGroundSlopeAngleForJogging;                            // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxGroundSlopeAngleForJogging;                            // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinGroundSlopeAngleForRunning;                            // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxGroundSlopeAngleForRunning;                            // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedModifierWhenMovingUphill;                         // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseJumpZVelocity;                                        // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAbsoluteVelocityZAfterClimb;                           // 0x07C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StaminaUnitsToDrainOnJump;                                // 0x07C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 JumpZVelocityMultiplierVsSpeed;                           // 0x07C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 JumpZVelocityMultiplierVsGroundSlopeAngle;                // 0x07D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPrisonerClimbAnimationInfo>         ClimbAnimations;                                          // 0x07D8(0x0010) (Edit, ZeroConstructor)
	float                                              ClimbingStaminaDrainModifier;                             // 0x07E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree;      // 0x07EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ClimbingDebuggingEnabled;                                 // 0x07F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x07F1(0x0003) MISSED OFFSET
	float                                              ClimbingDebuggingDrawTime;                                // 0x07F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LadderClimbingCapsuleBias;                                // 0x07F8(0x000C) (Edit, IsPlainOldData)
	float                                              LadderClimbingMaxSpeed;                                   // 0x0804(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanClimbOffLadderUpwardsAutomatically;                    // 0x0808(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanClimbOffLadderDownwardsAutomatically;                  // 0x0809(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x080A(0x0002) MISSED OFFSET
	float                                              MaxHorzDistanceToLadderForClimbing;                       // 0x080C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfLadderPeekSteps;                                  // 0x0810(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PostLadderClimbingLaunchVelocity;                         // 0x0814(0x000C) (Edit, IsPlainOldData)
	float                                              MaxHeightToJumpOffLadderSafely;                           // 0x0820(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFallingSpeedAllowedForLadderClimbing;                  // 0x0824(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxGroundSlopeAllowedForLadderClimbing;                   // 0x0828(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x082C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 MaxHorzDistanceToWindowForClimbingVsSpeed;                // 0x0830(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FWindowClimbingAnimationInfo>        WindowClimbingAnimations;                                 // 0x0838(0x0010) (Edit, ZeroConstructor)
	float                                              WaterImmersionToStartSwimming;                            // 0x0848(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaterImmersionToStopSwimming;                             // 0x084C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SwimmingToWalkingDepthTolerance;                          // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SwimmingToWalkingCapsuleCollisionTolerance;               // 0x0854(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DesiredWaterImmersion;                                    // 0x0858(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DesiredWaterImmersionCorrectionAcceleration;              // 0x085C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DesiredWaterImmersionCorrectionAccelerationCurve;         // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaterResurfaceAcceleration;                               // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OceanWavesAcceleration;                                   // 0x086C(0x0008) (Edit, IsPlainOldData)
	float                                              WaterImmersionAfterWhichRunningIsDisabled;                // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImmersionCorrectionDownMultiplier;                        // 0x0878(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenImmersedInWater;                // 0x087C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DiveInAccelerationScale;                                  // 0x0880(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DiveInAccelerationTimeout;                                // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DiveInCollisionCheckOffset;                               // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuoyancyWhenDiving;                                       // 0x088C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuoyancyWhenNotDiving;                                    // 0x0890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRatePitchWhenDiving;                              // 0x0894(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x308];                                     // 0x0898(0x0308) MISSED OFFSET
	struct FLadderInfoRepData                          _ladderInfoRepData;                                       // 0x0BA0(0x0050) (Net)
	unsigned char                                      UnknownData07[0x110];                                     // 0x0BF0(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerMovementComponent");
		return ptr;
	}


	void Server_SetDivingState(EPrisonerDivingState Value);
	void Server_ClimbOffLadder();
	void NetMulticast_PlayAnimMontageIfSimulatedProxy(class UAnimMontage* Montage, float PlayRate);
	bool JumpOffLadder(const struct FVector& jumpVelocity);
	float IsFlyingOrFalling();
	bool IsDiving();
	bool IsClimbingWindow();
	bool IsClimbingLadder();
	bool IsClimbing();
	struct FWindowInfo GetWindowInfo();
	struct FVector GetWaterVolumeHitLocation();
	struct FVector GetWaterSurfaceLocation();
	float GetWaterImmersionDepth();
	float GetTimeSpentInAir();
	float GetTimeSpentFalling();
	EPrisonerMovementPace GetMaxAllowedPace();
	struct FLadderInfo GetLadderInfo();
	float GetGroundSlopeAngleSmoothed();
	float GetGroundSlopeAngleForSpeedScaling();
	float GetGroundSlopeAngle();
	float GetDivingDepth();
	float GetDesiredCoursePitchAngle();
	float GetDesiredCourseAngle();
	EPrisonerMovementMode GetCustomMovementMode();
	struct FClimbableObstacleInfo GetClimbableObstacleInfo();
	struct FHitResult GetAnticipatedLandingSpot();
	float GetActualCourseAngle();
	bool DetectWindow(struct FWindowInfo* Result);
	bool DetectLadderDisembarkLocation(const struct FLadderInfo& LadderInfo, struct FVector* newCapsuleLocation, struct FRotator* newCapsuleRotation);
	bool DetectLadder(struct FLadderInfo* Result);
	bool DetectClimbableObstacle(struct FClimbableObstacleInfo* Result);
	bool ClimbWindow(const struct FWindowInfo& WindowInfo);
	bool ClimbOntoLadder(const struct FLadderInfo& LadderInfo);
	bool ClimbOffLadder();
	bool Climb();
	bool CanClimbWindow();
	bool CanClimbOntoLadder();
	bool CanClimb();
};


// Class ConZ.PrisonerMovementSettings
// 0x01E8 (0x0218 - 0x0030)
class UPrisonerMovementSettings : public UDataAsset
{
public:
	struct FPrisonerMovementSettings_Ground            Ground;                                                   // 0x0030(0x016C) (Edit)
	struct FPrisonerMovementSettings_Air               Air;                                                      // 0x019C(0x000C) (Edit)
	struct FPrisonerMovementSettings_Water             Water;                                                    // 0x01A8(0x0054) (Edit)
	float                                              RotationRateMultiplierWhenDexterityIsMinimal;             // 0x01FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationRateMultiplierWhenDexterityIsMaximal;             // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ClimbingSpeedMultiplierWhenDexterityIsMinimal;            // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ClimbingSpeedMultiplierWhenDexterityIsMaximal;            // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindowClimbingSpeedMultiplierWhenDexterityIsMinimal;      // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindowClimbingSpeedMultiplierWhenDexterityIsMaximal;      // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0214(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerMovementSettings");
		return ptr;
	}

};


// Class ConZ.PrisonerRestingComponent
// 0x0058 (0x0158 - 0x0100)
class UPrisonerRestingComponent : public UCharacterActionComponent
{
public:
	struct FPrisonerRestingData                        _restingData;                                             // 0x0100(0x0010) (Net)
	struct FPrisonerRestingDataAutonomous              _restingDataAutonomous;                                   // 0x0110(0x001C) (Net)
	unsigned char                                      UnknownData00[0x2C];                                      // 0x012C(0x002C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerRestingComponent");
		return ptr;
	}


	void OnRep_RestingDataAutonomous();
	void OnRep_RestingData();
};


// Class ConZ.TeleportUserData
// 0x0000 (0x0028 - 0x0028)
class UTeleportUserData : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeleportUserData");
		return ptr;
	}

};


// Class ConZ.PrisonerTeleportUserData
// 0x0008 (0x0030 - 0x0028)
class UPrisonerTeleportUserData : public UTeleportUserData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerTeleportUserData");
		return ptr;
	}

};


// Class ConZ.PrisonerSkillComponent
// 0x01D0 (0x02C0 - 0x00F0)
class UPrisonerSkillComponent : public UActorComponent
{
public:
	TArray<struct FPrisonerInitialSkillInfo>           InitialSkills;                                            // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              TickFrequency;                                            // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ReplicatedMedicalDiagnosisDone;                           // 0x0104(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x13];                                      // 0x0105(0x0013) MISSED OFFSET
	TArray<class USkill*>                              _skills;                                                  // 0x0118(0x0010) (ZeroConstructor)
	TArray<class USkillAction*>                        _actions;                                                 // 0x0128(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0xA8];                                      // 0x0138(0x00A8) MISSED OFFSET
	class USkillClasses*                               _skillClasses;                                            // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AAnimal*>                             _handledAnimals;                                          // 0x01E8(0x0010) (Net, ZeroConstructor)
	TArray<class AItem*>                               _lastSurroundingItems;                                    // 0x01F8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	TArray<class APrisoner*>                           _detectablePrisoners;                                     // 0x0210(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x60];                                      // 0x0220(0x0060) MISSED OFFSET
	struct FMedicalRecord                              _replicatedMedicalRecord;                                 // 0x0280(0x0028) (Net)
	TArray<struct FSkillRecord>                        _replicatedSkills;                                        // 0x02A8(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData04[0x4];                                       // 0x02B8(0x0004) MISSED OFFSET
	uint32_t                                           _replicatedNoiseLevel;                                    // 0x02BC(0x0004) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerSkillComponent");
		return ptr;
	}


	void UpdateNearbyFoliageCoverageOnServer(float coverage, bool isInBushes);
	void UpdateIsInFocusModeOnServer(bool isInFocus);
	void TreatSicknessOnServer(class APrisoner* Patient, EDiagnosedResult diagnosedResult, TArray<class AItem*> medicalItems);
	void TreatBrokenLimbsOnServer(class APrisoner* Patient, EBrokenLimbsTreatment treatment, TArray<class AItem*> medicalItems);
	void TreatBrokenLimbsOnClients(class APrisoner* Patient);
	void TameAnimalOnServer(class AAnimal* Animal, class AItem* Item);
	void ShowWatchingWarningOnClient();
	void SetSkillStaminaConsumptionOnServer(class USkill* Skill, float consumption);
	void SetDetectablePrisonersOnServer(TArray<class APrisoner*> detectablePrisoners);
	void Server_IncreaseSkillExperiencePoints(ESkillReplicationID skillReplicationID, float Points);
	void SendVisiblePrisoners();
	void RevivePatientOnServer(class APrisoner* Patient);
	void RevivePatientOnClients(class APrisoner* Patient);
	void RequestNearbyFoliageUpdateOnClient();
	void PullToothOnServer(class APrisoner* Patient, TArray<class AItem*> medicalItems);
	void PullToothOnClients(class APrisoner* Patient);
	void PerformSurgeryOnServer(class APrisoner* Patient, TArray<class AItem*> medicalItems);
	void PerformSurgeryOnClients(class APrisoner* Patient);
	void PerformAnesthesiaOnServer(class APrisoner* Patient, EAnesthesiaType anesthesiaType, TArray<class AItem*> medicalItems);
	void PerformAnesthesiaOnClients(class APrisoner* Patient);
	void PatchWoundsOnServer(class APrisoner* Patient, TArray<class AItem*> medicalItems);
	void PatchWoundsOnClients(class APrisoner* Patient);
	void PacifyAnimalOnServer(class AAnimal* Animal, class AItem* Item);
	void OnRep_Skills();
	void OnRep_MedicalRecord();
	void MedicalDiagnosisOnServer(class APrisoner* Patient, EMedicalDiagnosisType diagnosisType);
	void MakeUnconsciousOnServer(class APrisoner* Patient);
	void MakeUnconsciousOnClients(class APrisoner* Patient);
	void MakeConsciousOnServer(class APrisoner* Patient);
	void MakeConsciousOnClients(class APrisoner* Patient);
	void LearnAnimalOnServer(class AAnimal* Animal, TArray<class AItem*> Items, EAnimalLearnLevel learnLevel);
	void HighlightNearbyItems();
	void HighlightItemOnClient(class AItem* Item);
	TArray<class USkill*> GetSkills();
	void ForceSkillsReplicationOnServer();
	void FeedAnimalOnServer(class AAnimal* Animal, TArray<class AItem*> Items);
	void CommandAnimalOnServer(class AAnimal* Animal, EAnimalCommand Command, class AItem* Item, class AConZCharacter* Character);
	void ArtificalPerspirationOnServer(class APrisoner* Patient);
	void ArtificalPerspirationOnClients(class APrisoner* Patient);
};


// Class ConZ.PrisonerSoundComponent
// 0x0198 (0x02B0 - 0x0118)
class UPrisonerSoundComponent : public UCharacterSoundComponent
{
public:
	float                                              MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents;    // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents;// 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               PeriodicInhaleAudioEvent;                                 // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               PeriodicExhaleAudioEvent;                                 // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               HoldBreathInhaleAudioEvent;                               // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               HoldBreathExhaleAudioEvent;                               // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               HoldBreathBreathlessExhaleAudioEvent;                     // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinHeartRateToPostHeartbeatAudioEvent;                    // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               HeartbeatAudioEvent;                                      // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               FootstepsAudioEvent;                                      // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               FootstepsEnhancerAudioEvent;                              // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovingThroughFoliageGateDuration;                         // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               StartGenericMovingThroughFoliageAudioEvent;               // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericMovingThroughFoliageAudioEvent;                // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               GenericOneShotMovingThroughFoliageAudioEvent;             // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               GearNoiseAudioEvent;                                      // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               GearNoiseAudioEventWhenInWater;                           // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ItemMotionNoiseTimeToLive;                                // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               StartGenericEatItemAudioEvent;                            // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericEatItemAudioEvent;                             // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartGenericDrinkItemAudioEvent;                          // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericDrinkItemAudioEvent;                           // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartGenericDrinkWaterAudioEvent;                         // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericDrinkWaterAudioEvent;                          // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartGenericExamineObjectAudioEvent;                      // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericExamineObjectAudioEvent;                       // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartGenericCraftAudioEvent;                              // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericCraftAudioEvent;                               // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartGenericUncraftAudioEvent;                            // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericUncraftAudioEvent;                             // 0x01F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartGenericVehicleRepairAudioEvent;                      // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopGenericVehicleRepairAudioEvent;                       // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartWashClothAudioEvent;                                 // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopWashClothAudioEvent;                                  // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OutOfBoundsSound;                                         // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ChipExplosionSound;                                       // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x48];                                      // 0x0230(0x0048) MISSED OFFSET
	TArray<struct FActiveMovingThroughFoliageSounds>   _activeMovingThroughFoliageSounds;                        // 0x0278(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x1C];                                      // 0x0288(0x001C) MISSED OFFSET
	int                                                _maxNumberOfFootstepsToPlayFootstepEnhancerSound;         // 0x02A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _minNumberOfFootstepsToPlayFootstepEnhancerSound;         // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerSoundComponent");
		return ptr;
	}


	bool UpdateMovingThroughFoliageSounds(int PlayingID, EMotionIntensity motionIntensity);
	bool StopMovingThroughFoliageSounds(int PlayingID);
	void StopAllMovingThroughFoliageSounds();
	int PlayMovingThroughFoliageSounds(class UAkAudioEvent* StartAudioEvent, class UAkAudioEvent* StopAudioEvent, EMotionIntensity motionIntensity);
	void PlayGearSounds(EMotionIntensity motionIntensity);
	void PlayFootstepSounds(TEnumAsByte<EPhysicalSurface> inPhysicalSurface);
	void OnOutOfBoundsSoundPercentChanged(class USoundWave* PlayingSoundWave, float PlaybackPercent);
	void OnBorderCrossingStateChanged(class APrisoner* Prisoner, EPrisonerBorderCrossingPenalty penalty);
};


// Class ConZ.PrisonerSubview
// 0x0000 (0x0028 - 0x0028)
class UPrisonerSubview : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerSubview");
		return ptr;
	}

};


// Class ConZ.PrisonerThirdPersonSubviewComponent
// 0x0620 (0x08E0 - 0x02C0)
class UPrisonerThirdPersonSubviewComponent : public USpringArmComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET
	float                                              FieldOfView;                                              // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseFieldOfViewForLOD;                                     // 0x02CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ConstrainAspectRatio;                                     // 0x02CD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x02CE(0x0002) MISSED OFFSET
	float                                              AspectRatio;                                              // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinViewYaw;                                               // 0x02D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxViewYaw;                                               // 0x02D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinViewPitch;                                             // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxViewPitch;                                             // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeanOffsetLeft;                                           // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeanOffsetRight;                                          // 0x02E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GlobalOffset;                                             // 0x02EC(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               MirrorAroundXZPlane;                                      // 0x02F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02F9(0x0003) MISSED OFFSET
	struct FVector                                     MaxLocalOffsetWhenColliding;                              // 0x02FC(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               ShouldConstrainTraceOriginToOwnerCapsule;                 // 0x0308(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0309(0x0003) MISSED OFFSET
	float                                              OwnerCapsuleContrainBuffer;                               // 0x030C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceOriginGlobalOffset;                                  // 0x0310(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     TraceOriginRelativeOffset;                                // 0x031C(0x000C) (Edit, IsPlainOldData)
	float                                              LocalOffsetCurvesBlendSpeed;                              // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	struct FLocalOffsetCurves                          LocalOffsetCurves[0x2];                                   // 0x0330(0x0020) (Edit)
	struct FName                                       AnimationOffsetTZCurveName;                               // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PostProcessBlendWeight;                                   // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0380(0x0520) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData06[0x18];                                      // 0x08A0(0x0018) MISSED OFFSET
	struct FVector                                     _clippingPreventionOffset;                                // 0x08B8(0x000C) (Edit, IsPlainOldData)
	float                                              _clippingPreventionSweepLength;                           // 0x08C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _clippingPreventionAmount;                                // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _clippingPreventionTraceOffset;                           // 0x08CC(0x000C) (Edit, IsPlainOldData)
	float                                              _minFactorForPrisonerHiding;                              // 0x08D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x08DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerThirdPersonSubviewComponent");
		return ptr;
	}

};


// Class ConZ.PrisonerThirdPersonViewComponent
// 0x0138 (0x0248 - 0x0110)
class UPrisonerThirdPersonViewComponent : public UPrisonerViewComponent
{
public:
	float                                              StandingToCrouchingSubviewBlendDuration;                  // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandingToProneSubviewBlendDuration;                      // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchingToStandingSubviewBlendDuration;                  // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchingToProneSubviewBlendDuration;                     // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneToStandingSubviewBlendDuration;                      // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneToCrouchingSubviewBlendDuration;                     // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandingMeleeSubviewBlendDuration;                        // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandingAimingSubviewBlendDuration;                       // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchingAimingSubviewBlendDuration;                      // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneAimingSubviewBlendDuration;                          // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RagdollToSubviewBlendDuration;                            // 0x0138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RagdollFromSubviewBlendDuration;                          // 0x013C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NarrowLadderSubviewBlendDuration;                         // 0x0140(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SwimmingSubviewBlendInDuration;                           // 0x0144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SwimmingSubviewBlendOutDuration;                          // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DivingSubviewBlendInDuration;                             // 0x014C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DivingSubviewBlendOutDuration;                            // 0x0150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClimbingWindowToSubviewBlendDuration;                     // 0x0154(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClimbingWindowFromSubviewBlendDuration;                   // 0x0158(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefecatingToSubviewBlendDuration;                         // 0x015C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefecatingFromSubviewBlendDuration;                       // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	struct FName                                       StandingSubviewName;                                      // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchingSubviewName;                                     // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProneSubviewName;                                         // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingMeleeSubviewName;                                 // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingAimingSubviewName;                                // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchingAimingSubviewName;                               // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProneAimingSubviewName;                                   // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       RagdollSubviewName;                                       // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       NarrowLadderSubviewName;                                  // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SwimmingSubviewName;                                      // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       DivingSubviewName;                                        // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ClimbingWindowSubviewName;                                // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefecatingSubviewName;                                    // 0x01C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x78];                                      // 0x01D0(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PrisonerThirdPersonViewComponent");
		return ptr;
	}

};


// Class ConZ.Projectile
// 0x01F8 (0x0520 - 0x0328)
class AProjectile : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               RotationFollowsVelocity;                                  // 0x0330(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsInstantHit;                                             // 0x0331(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               AddImpulseOnHit;                                          // 0x0332(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0333(0x0001) MISSED OFFSET
	float                                              ImpulseMultiplier;                                        // 0x0334(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxImpulse;                                               // 0x0338(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	class UProjectileImpactEffects*                    ImpactEffects;                                            // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FProjectileData                             ProjectileData;                                           // 0x0348(0x0048) (Edit, DisableEditOnInstance)
	float                                              MeshScaleStartLocal;                                      // 0x0390(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleRangeLocal;                                      // 0x0394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleMinLocal;                                        // 0x0398(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleMaxLocal;                                        // 0x039C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleStart;                                           // 0x03A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleRange;                                           // 0x03A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleMin;                                             // 0x03A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshScaleMax;                                             // 0x03AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TraceScaleMultiplier;                                     // 0x03B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GravityScale;                                             // 0x03B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               FlyByAudioEvent;                                          // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ColorMaterialParameterName;                               // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InitialColor;                                             // 0x03C8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                FinalColor;                                               // 0x03D8(0x0010) (Edit, IsPlainOldData)
	int                                                MaxHitCount;                                              // 0x03E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoiseLoudnessOnHit;                                       // 0x03EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreCallingWeaponsFiringEffects;                        // 0x03F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03F1(0x0003) MISSED OFFSET
	float                                              ExperienceMultiplier;                                     // 0x03F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x03F8(0x0018) MISSED OFFSET
	bool                                               _useFixedTimestep;                                        // 0x0410(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0411(0x0003) MISSED OFFSET
	float                                              _fixedTimestep;                                           // 0x0414(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0418(0x0018) MISSED OFFSET
	int                                                _zeroRange;                                               // 0x0430(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _windage;                                                 // 0x0434(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _distanceTraveled;                                        // 0x0438(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _meshScaleFactor;                                         // 0x043C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x20];                                      // 0x0440(0x0020) MISSED OFFSET
	float                                              _offsetFromBarrel;                                        // 0x0460(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	int                                                _randomSeed;                                              // 0x0468(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7C];                                      // 0x046C(0x007C) MISSED OFFSET
	bool                                               _doNotForceInitialReplication;                            // 0x04E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x04E9(0x0003) MISSED OFFSET
	float                                              _muzzleVelocity;                                          // 0x04EC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _createdOnServer;                                         // 0x04F0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x04F1(0x0003) MISSED OFFSET
	float                                              _halfAngle;                                               // 0x04F4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x24];                                      // 0x04F8(0x0024) MISSED OFFSET
	struct FFiredShotDescriptionRep                    _firedShotDescriptionRep;                                 // 0x051C(0x0004) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Projectile");
		return ptr;
	}


	void OnStop(const struct FHitResult& HitResult);
};


// Class ConZ.ProjectileArrow
// 0x0038 (0x0558 - 0x0520)
class AProjectileArrow : public AProjectile
{
public:
	class USceneComponent*                             _tempSceneComponent;                                      // 0x0520(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             _relativeRotationSceneComponent;                          // 0x0528(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FProjectileArrowData                        _projectileArrowData;                                     // 0x0530(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0548(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProjectileArrow");
		return ptr;
	}


	void UpdateParameters();
};


// Class ConZ.ProjectileDamageType
// 0x0000 (0x0040 - 0x0040)
class UProjectileDamageType : public UDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProjectileDamageType");
		return ptr;
	}

};


// Class ConZ.ProjectileFlare
// 0x0018 (0x0538 - 0x0520)
class AProjectileFlare : public AProjectile
{
public:
	class USceneComponent*                             _tempSceneComponent;                                      // 0x0520(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    _particleSystemComponent;                                 // 0x0528(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        _pointLightComponent;                                     // 0x0530(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProjectileFlare");
		return ptr;
	}

};


// Class ConZ.ProjectileImpactEffects
// 0x02B0 (0x02E0 - 0x0030)
class UProjectileImpactEffects : public UDataAsset
{
public:
	float                                              MinDecalSize;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDecalSize;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinDecalLifetime;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDecalLifetime;                                         // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecalFadeFactor;                                          // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParticleEffectsInitialScale;                              // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParticleEffectsScaleDistanceStart;                        // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParticleEffectsScaleDistanceRange;                        // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParticleEffectsScaleByDistanceFactor;                     // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UParticleSystem*                             BulletPenetrationExitParticlesDaytime;                    // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             BulletPenetrationExitParticlesNighttime;                  // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   DayTimePenetrationDecal;                                  // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   NightTimePenetrationDecal;                                // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FImpactEffectData                           Default;                                                  // 0x0080(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           grass;                                                    // 0x0090(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           ForrestGroundCoastal;                                     // 0x00A0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           ForrestGroundContinental;                                 // 0x00B0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Rock;                                                     // 0x00C0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Stone;                                                    // 0x00D0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Gravel;                                                   // 0x00E0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           GravelBeach;                                              // 0x00F0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Pebbles;                                                  // 0x0100(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Snow;                                                     // 0x0110(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Ice;                                                      // 0x0120(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Sand;                                                     // 0x0130(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Asphalt;                                                  // 0x0140(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Dirt;                                                     // 0x0150(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Water;                                                    // 0x0160(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           WaterOcean;                                               // 0x0170(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Cloth;                                                    // 0x0180(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Metal;                                                    // 0x0190(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Aluminium;                                                // 0x01A0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Concrete;                                                 // 0x01B0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Brick;                                                    // 0x01C0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Wood;                                                     // 0x01D0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Plastic;                                                  // 0x01E0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Rubber;                                                   // 0x01F0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Glass;                                                    // 0x0200(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Folliage;                                                 // 0x0210(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Bark;                                                     // 0x0220(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Flesh;                                                    // 0x0230(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           RoofTile;                                                 // 0x0240(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           CeramicsTiles;                                            // 0x0250(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Scrap;                                                    // 0x0260(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Trunk;                                                    // 0x0270(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Leaves;                                                   // 0x0280(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Cardboard;                                                // 0x0290(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Plaster;                                                  // 0x02A0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           Kevlar;                                                   // 0x02B0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           ForceField;                                               // 0x02C0(0x0010) (Edit, DisableEditOnInstance)
	struct FImpactEffectData                           NoEffect;                                                 // 0x02D0(0x0010) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProjectileImpactEffects");
		return ptr;
	}

};


// Class ConZ.ProjectileShotgun
// 0x0010 (0x0530 - 0x0520)
class AProjectileShotgun : public AProjectile
{
public:
	class UClass*                                      ProjectileClass;                                          // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ShotsCount;                                               // 0x0528(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x052C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProjectileShotgun");
		return ptr;
	}

};


// Class ConZ.ProteinDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UProteinDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ProteinDeficiency");
		return ptr;
	}

};


// Class ConZ.PsilocybeCyanescensPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UPsilocybeCyanescensPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PsilocybeCyanescensPoisoning");
		return ptr;
	}

};


// Class ConZ.PullToothAction
// 0x0000 (0x00A8 - 0x00A8)
class UPullToothAction : public UMedicalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.PullToothAction");
		return ptr;
	}

};


// Class ConZ.QuickAccessBarWidget
// 0x0010 (0x0230 - 0x0220)
class UQuickAccessBarWidget : public UDesignableUserWidget
{
public:
	TArray<class UQuickAccessItemWidget*>              _quickAccessItemContainers;                               // 0x0220(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.QuickAccessBarWidget");
		return ptr;
	}

};


// Class ConZ.QuickAccessItemSwitcher3
// 0x0030 (0x0250 - 0x0220)
class UQuickAccessItemSwitcher3 : public UInventoryContainerWidget2
{
public:
	int                                                Index;                                                    // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0224(0x0004) MISSED OFFSET
	class UTextBlock*                                  _nameText;                                                // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventorySlotUserWidget*                    _slotWidget;                                              // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UItemWidget2*                                _itemWidget;                                              // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0240(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.QuickAccessItemSwitcher3");
		return ptr;
	}

};


// Class ConZ.QuickAccessItemWidget
// 0x0048 (0x0268 - 0x0220)
class UQuickAccessItemWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      MaxWidth;                                                 // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxHeight;                                                // 0x0221(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0222(0x0006) MISSED OFFSET
	class UImage*                                      _imageWidget;                                             // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class AItem>                        _item;                                                    // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultWidth;                                             // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefaultHeight;                                            // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DefaultPosition;                                          // 0x0240(0x0008) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0248(0x0008) MISSED OFFSET
	class UImage*                                      _additionalIcon;                                          // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _additionalText;                                          // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0260(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.QuickAccessItemWidget");
		return ptr;
	}


	void OnQuickAccessItemPickedUpStateChanged(class AItem* Item, bool PickedUpState);
	void OnItemDestroyed(class AActor* itemActor);
};


// Class ConZ.Quiver
// 0x0040 (0x0968 - 0x0928)
class AQuiver : public AClothesItem
{
public:
	class USkeletalMesh*                               AlternativeSkeletalMesh;                                  // 0x0928(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ArrowsBoneName;                                           // 0x0930(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TempArrowClass;                                           // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        _arrowMeshComponent;                                      // 0x0940(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UStaticMeshComponent*>                _arrowMeshComponentsArray2;                               // 0x0948(0x0010) (ExportObject, ZeroConstructor)
	class USkeletalMeshComponent*                      _alternativeEquippedMesh;                                 // 0x0958(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0960(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Quiver");
		return ptr;
	}

};


// Class ConZ.Rabbit
// 0x0000 (0x0AE0 - 0x0AE0)
class ARabbit : public AAnimal
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Rabbit");
		return ptr;
	}

};


// Class ConZ.Rabbit2
// 0x0000 (0x0AF0 - 0x0AF0)
class ARabbit2 : public AAnimal2
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Rabbit2");
		return ptr;
	}

};


// Class ConZ.SimpleAnimalAIController
// 0x0090 (0x04C8 - 0x0438)
class ASimpleAnimalAIController : public AAIController
{
public:
	float                                              WanderRadius;                                             // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunAwayTime;                                              // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinActionTime;                                            // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxActionTime;                                            // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WalkSpeed;                                                // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeed;                                                 // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FleeSegmentDistance;                                      // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AlertStartupTime;                                         // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveDistance;                                          // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DoNotDespawnTime;                                         // 0x045C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0460(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SimpleAnimalAIController");
		return ptr;
	}


	void UpdatePerception(TArray<class AActor*> actorsPercepted);
	void StartAlert();
	void OnTakeDamageHandler(class AActor* damageActor, float Damage, const struct FVector& HitLocation, class APawn* eventInstigator);
};


// Class ConZ.Rabbit2AIController
// 0x0010 (0x04D8 - 0x04C8)
class ARabbit2AIController : public ASimpleAnimalAIController
{
public:
	float                                              MoveSegment;                                              // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MovementPauseMinTime;                                     // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MovementPauseMaxTime;                                     // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngleOffset;                                              // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Rabbit2AIController");
		return ptr;
	}


	void Wander();
};


// Class ConZ.RabbitAIController
// 0x0000 (0x04C8 - 0x04C8)
class ARabbitAIController : public AAnimalAIController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RabbitAIController");
		return ptr;
	}

};


// Class ConZ.RabbitAnimInstance
// 0x0000 (0x0380 - 0x0380)
class URabbitAnimInstance : public UAnimalAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RabbitAnimInstance");
		return ptr;
	}

};


// Class ConZ.RadiationSickness
// 0x0028 (0x01D8 - 0x01B0)
class URadiationSickness : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x01B0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadiationSickness");
		return ptr;
	}

};


// Class ConZ.RadioItem
// 0x0008 (0x0870 - 0x0868)
class ARadioItem : public AItem
{
public:
	class URadioComponent*                             _radioComponent;                                          // 0x0868(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioItem");
		return ptr;
	}

};


// Class ConZ.RadioTrack
// 0x0010 (0x0040 - 0x0030)
class URadioTrack : public UDataAsset
{
public:
	class UAkAudioEvent*                               Audio;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioTrack");
		return ptr;
	}

};


// Class ConZ.RadioCategory
// 0x0018 (0x0040 - 0x0028)
class URadioCategory : public UObject
{
public:
	TArray<class URadioTrack*>                         Tracks;                                                   // 0x0028(0x0010) (Edit, ZeroConstructor)
	int                                                _index;                                                   // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioCategory");
		return ptr;
	}


	struct FRadioStationTrackData ProvideNextRadioTrack();
};


// Class ConZ.RadioCategoryShuffle
// 0x0018 (0x0058 - 0x0040)
class URadioCategoryShuffle : public URadioCategory
{
public:
	bool                                               _canTracksRepeat;                                         // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<class URadioTrack*>                         _tracksAlreadyPlayed;                                     // 0x0048(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioCategoryShuffle");
		return ptr;
	}

};


// Class ConZ.RadioProgram
// 0x0028 (0x0050 - 0x0028)
class URadioProgram : public UObject
{
public:
	TArray<class UClass*>                              CategoryClasses;                                          // 0x0028(0x0010) (Edit, ZeroConstructor)
	TArray<class URadioCategory*>                      Categories;                                               // 0x0038(0x0010) (ZeroConstructor)
	int                                                _index;                                                   // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioProgram");
		return ptr;
	}


	class URadioCategory* ProvideNextRadioCategory();
};


// Class ConZ.RadioStation
// 0x0070 (0x0398 - 0x0328)
class ARadioStation : public AActor
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0328(0x0030) MISSED OFFSET
	TArray<struct FRadioProgramData>                   _programsData;                                            // 0x0358(0x0010) (Edit, ZeroConstructor)
	int                                                _maxTracksToQueue;                                        // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _currentIndex;                                            // 0x036C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FRadioStationTrackData>              _playlist;                                                // 0x0370(0x0010) (Net, ZeroConstructor)
	float                                              _elapsedTime;                                             // 0x0380(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0384(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioStation");
		return ptr;
	}


	void StartTrack();
	void OnTrackEnded();
	void OnRep_PlayTime();
	void OnRep_Playlist();
	void Multicast_SendNextTrack(const struct FRadioStationTrackData& Track);
};


// Class ConZ.RadioComponent
// 0x0030 (0x0450 - 0x0420)
class URadioComponent : public UAkComponent
{
public:
	bool                                               _isHiFi;                                                  // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0421(0x0003) MISSED OFFSET
	float                                              _attenuationScale;                                        // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0428(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RadioComponent");
		return ptr;
	}


	void PlayTrackFromStation();
	void OnTrackStarted();
	void OnTrackEnded();
	void OnRep_Volume();
	void OnRep_TurnedOn();
};


// Class ConZ.RecastNavMesh_Humanoids
// 0x0000 (0x0590 - 0x0590)
class ARecastNavMesh_Humanoids : public ARecastNavMesh
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RecastNavMesh_Humanoids");
		return ptr;
	}

};


// Class ConZ.RecastNavMesh_LargeAnimals
// 0x0000 (0x0590 - 0x0590)
class ARecastNavMesh_LargeAnimals : public ARecastNavMesh
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RecastNavMesh_LargeAnimals");
		return ptr;
	}

};


// Class ConZ.RecastNavMesh_Sentries
// 0x0000 (0x0590 - 0x0590)
class ARecastNavMesh_Sentries : public ARecastNavMesh
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RecastNavMesh_Sentries");
		return ptr;
	}

};


// Class ConZ.RecastNavMesh_SmallAnimals
// 0x0000 (0x0590 - 0x0590)
class ARecastNavMesh_SmallAnimals : public ARecastNavMesh
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RecastNavMesh_SmallAnimals");
		return ptr;
	}

};


// Class ConZ.RegularDoorStatic
// 0x0018 (0x0460 - 0x0448)
class ARegularDoorStatic : public ADoor
{
public:
	struct FRotator                                    _openRotation;                                            // 0x0448(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _closedRotation;                                          // 0x0454(0x000C) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RegularDoorStatic");
		return ptr;
	}

};


// Class ConZ.RegularDoorDestructible
// 0x0018 (0x0460 - 0x0448)
class ARegularDoorDestructible : public ADoor
{
public:
	struct FRotator                                    _openRotation;                                            // 0x0448(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    _closedRotation;                                          // 0x0454(0x000C) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RegularDoorDestructible");
		return ptr;
	}

};


// Class ConZ.RemoveMagazineInsertCartridge
// 0x0000 (0x0088 - 0x0088)
class URemoveMagazineInsertCartridge : public UWeaponActionReloadSequence
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RemoveMagazineInsertCartridge");
		return ptr;
	}

};


// Class ConZ.RemoveMagazineInsertMagazine
// 0x0000 (0x0088 - 0x0088)
class URemoveMagazineInsertMagazine : public UWeaponActionReloadSequence
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RemoveMagazineInsertMagazine");
		return ptr;
	}

};


// Class ConZ.RemoveMagazineInsertMagazineInsertCartridge
// 0x0010 (0x0098 - 0x0088)
class URemoveMagazineInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RemoveMagazineInsertMagazineInsertCartridge");
		return ptr;
	}

};


// Class ConZ.RepairableItemTag
// 0x0038 (0x0068 - 0x0030)
class URepairableItemTag : public UBaseItemTag
{
public:
	struct FRepairableParams                           Params;                                                   // 0x0030(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RepairableItemTag");
		return ptr;
	}

};


// Class ConZ.RepairToolItemTag
// 0x0040 (0x0070 - 0x0030)
class URepairToolItemTag : public UBaseItemTag
{
public:
	struct FRepairToolItemParams                       Params;                                                   // 0x0030(0x0040) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RepairToolItemTag");
		return ptr;
	}

};


// Class ConZ.ReportingManager
// 0x0508 (0x0830 - 0x0328)
class AReportingManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x180];                                     // 0x0328(0x0180) MISSED OFFSET
	struct FScriptMulticastDelegate                    PrisonerWhistled;                                         // 0x04A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x378];                                     // 0x04B8(0x0378) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ReportingManager");
		return ptr;
	}

};


// Class ConZ.ResistanceSkill
// 0x0000 (0x00B8 - 0x00B8)
class UResistanceSkill : public UConstitutionSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ResistanceSkill");
		return ptr;
	}

};


// Class ConZ.RespawnSettings
// 0x0040 (0x0070 - 0x0030)
class URespawnSettings : public UDataAsset
{
public:
	struct FRespawnParameters                          parameters;                                               // 0x0030(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RespawnSettings");
		return ptr;
	}

};


// Class ConZ.RespiratoryRateWidget
// 0x00D8 (0x01D8 - 0x0100)
class URespiratoryRateWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                    // 0x0100(0x0088) (Edit, BlueprintVisible)
	struct FScriptDelegate                             BrushDelegate;                                            // 0x0188(0x0014) (ZeroConstructor, InstancedReference)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0198(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x01A8(0x0014) (ZeroConstructor, InstancedReference)
	float                                              Thickness;                                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Periods;                                                  // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                   // 0x01D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RespiratoryRateWidget");
		return ptr;
	}


	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	float GetMinRespiratoryRate();
	float GetMaxRespiratoryRate();
};


// Class ConZ.RestAssetData
// 0x0020 (0x0050 - 0x0030)
class URestAssetData : public UInteractionAssetData
{
public:
	EPrisonerRestingMode                               RestingMode;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UAnimSequenceBase*                           RestingAnimation;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             AdditionalEndRestLocations;                               // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RestAssetData");
		return ptr;
	}

};


// Class ConZ.RevivePatientAction
// 0x0000 (0x00A8 - 0x00A8)
class URevivePatientAction : public UMedicalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RevivePatientAction");
		return ptr;
	}

};


// Class ConZ.RewardItemWidget
// 0x0010 (0x0218 - 0x0208)
class URewardItemWidget : public UUserWidget
{
public:
	class UImage*                                      _bulletImage;                                             // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _rewardItemText;                                          // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RewardItemWidget");
		return ptr;
	}

};


// Class ConZ.RichTextInlineTextDecorator
// 0x0000 (0x0028 - 0x0028)
class URichTextInlineTextDecorator : public URichTextBlockDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RichTextInlineTextDecorator");
		return ptr;
	}

};


// Class ConZ.RiflesSkill
// 0x0000 (0x00B0 - 0x00B0)
class URiflesSkill : public URangedWeaponsSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RiflesSkill");
		return ptr;
	}

};


// Class ConZ.RunningSkill
// 0x0048 (0x0100 - 0x00B8)
class URunningSkill : public UConstitutionSkill
{
public:
	struct FRunningSkillParametersPerSkillLevel        NoSkillParameters;                                        // 0x00B8(0x0010) (Edit)
	struct FRunningSkillParametersPerSkillLevel        BasicSkillParameters;                                     // 0x00C8(0x0010) (Edit)
	struct FRunningSkillParametersPerSkillLevel        MediumSkillParameters;                                    // 0x00D8(0x0010) (Edit)
	struct FRunningSkillParametersPerSkillLevel        AdvancedSkillParameters;                                  // 0x00E8(0x0010) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.RunningSkill");
		return ptr;
	}

};


// Class ConZ.SalmonellaDisease
// 0x0008 (0x01B8 - 0x01B0)
class USalmonellaDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SalmonellaDisease");
		return ptr;
	}

};


// Class ConZ.Scopeable
// 0x0000 (0x0028 - 0x0028)
class UScopeable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Scopeable");
		return ptr;
	}

};


// Class ConZ.ScreenSpaceHealthWidget
// 0x0000 (0x0208 - 0x0208)
class UScreenSpaceHealthWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ScreenSpaceHealthWidget");
		return ptr;
	}


	void SetMaxHealthPercentage(float Value);
	void SetHealthPercentage(float Value);
};


// Class ConZ.SearchItemDataAsset
// 0x0048 (0x0078 - 0x0030)
class USearchItemDataAsset : public UDataAsset
{
public:
	struct FText                                       Caption;                                                  // 0x0030(0x0018) (Edit)
	float                                              Duration;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<struct FSearchPerItemData>                  SearchData;                                               // 0x0050(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               StartSearchAudioEvent;                                    // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopSearchAudioEvent;                                     // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ENoiseLevel                                        NoiseLevel;                                               // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SearchItemDataAsset");
		return ptr;
	}

};


// Class ConZ.SearchForItemsAssetData
// 0x0008 (0x0038 - 0x0030)
class USearchForItemsAssetData : public UInteractionAssetData
{
public:
	class USearchItemDataAsset*                        SearchAsset;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SearchForItemsAssetData");
		return ptr;
	}

};


// Class ConZ.SearchGroundObjective
// 0x0020 (0x0448 - 0x0428)
class ASearchGroundObjective : public AObjective
{
public:
	TArray<class UClass*>                              _itemToSearch;                                            // 0x0428(0x0010) (Edit, ZeroConstructor)
	int                                                _itemAmount;                                              // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x043C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SearchGroundObjective");
		return ptr;
	}

};


// Class ConZ.SeleniumDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class USeleniumDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SeleniumDeficiency");
		return ptr;
	}

};


// Class ConZ.Sentry
// 0x0900 (0x1230 - 0x0930)
class ASentry : public AConZCharacter
{
public:
	float                                              maxHealth;                                                // 0x0930(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkingSpeed;                                          // 0x0934(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRunningSpeed;                                          // 0x0938(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x093C(0x0004) MISSED OFFSET
	struct FName                                       LeftGunName;                                              // 0x0940(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightGunName;                                             // 0x0948(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftGunRail02Name;                                        // 0x0950(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightGunRail02Name;                                       // 0x0958(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftGunSocketName;                                        // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightGunSocket01Name;                                     // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightGunSocket02Name;                                     // 0x0970(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        KickMontages;                                             // 0x0978(0x0010) (Edit, ZeroConstructor)
	struct FName                                       RightFootSocket;                                          // 0x0988(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftFootSocket;                                           // 0x0990(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightFootHitNormal;                                       // 0x0998(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     LeftFoorHitNormal;                                        // 0x09A4(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              IKInterpSpeed;                                            // 0x09B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IKOffsetRightFoot;                                        // 0x09B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IKOffsetLeftFoot;                                         // 0x09B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09BC(0x0004) MISSED OFFSET
	class UClass*                                      ProjectileClass;                                          // 0x09C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseCustomWeaponSpreadData;                                // 0x09C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x09C9(0x0003) MISSED OFFSET
	struct FWeaponSpreadData                           WeaponSpreadData;                                         // 0x09CC(0x0040) (Edit)
	bool                                               UseCustomWeaponViewKickData;                              // 0x0A0C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0A0D(0x0003) MISSED OFFSET
	struct FWeaponViewKickData                         WeaponViewKickData;                                       // 0x0A10(0x0018) (Edit)
	float                                              AIWeaponSpreadConeHalfAngle;                              // 0x0A28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerWeaponSpreadConeHalfAngle;                          // 0x0A2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FirstBulletsToMiss;                                       // 0x0A30(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LGunSocketBasePoseRelativeLocation;                       // 0x0A34(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     RGunSocket01BasePoseRelativeLocation;                     // 0x0A40(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     RGunSocket02BasePoseRelativeLocation;                     // 0x0A4C(0x000C) (Edit, IsPlainOldData)
	TArray<struct FPatrolPoint>                        PatrolPoints;                                             // 0x0A58(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                AmmoCountInOneMagazine;                                   // 0x0A68(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0A6C(0x0004) MISSED OFFSET
	class UAnimMontage*                                ReloadMontage;                                            // 0x0A70(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GunRotationHalfAngleDegrees;                              // 0x0A78(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0A7C(0x0004) MISSED OFFSET
	struct FName                                       EyesViewPointSocketName;                                  // 0x0A80(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class ASentryGuardVolume*>                  GuardedAreaVolumes;                                       // 0x0A88(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FDangerZone>                         DangerZones;                                              // 0x0A98(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UAkAudioEvent*                               FireBulletAudioEvent;                                     // 0x0AA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               ReloadAudioEvent;                                         // 0x0AB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               WarningAudioEvent;                                        // 0x0AB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               TargetEngagedAudioEvent;                                  // 0x0AC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               LastWarningAudioEvent;                                    // 0x0AC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               PlayerKilledAudioEvent;                                   // 0x0AD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               PlayerLostAudioEvent;                                     // 0x0AD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               HeardPrisonerAudioEvent;                                  // 0x0AE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StompShakeEffectRadius;                                   // 0x0AE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0AEC(0x0004) MISSED OFFSET
	class UClass*                                      StompCameraShake;                                         // 0x0AF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USplineMeshComponent*                        LaserSplineMesh;                                          // 0x0AF8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USplineComponent*                            LaserSpline;                                              // 0x0B00(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	float                                              LaserLerpSpeed;                                           // 0x0B08(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0B0C(0x0004) MISSED OFFSET
	class UParticleSystem*                             MuzzlePS;                                                 // 0x0B10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    MuzzlePSC;                                                // 0x0B18(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              MuzzleEffectsScaleDistanceStart;                          // 0x0B20(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleEffectsScaleDistanceRange;                          // 0x0B24(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleEffectsScaleByDistanceFactor;                       // 0x0B28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeAttackCooldownTime;                                  // 0x0B2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     JumpAttackLaunchVelocityOBSOLETE;                         // 0x0B30(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0B3C(0x0004) MISSED OFFSET
	class UAnimMontage*                                JumpAttackMontageOBSOLETE;                                // 0x0B40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunDamage;                                                // 0x0B48(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0B4C(0x0004) MISSED OFFSET
	class UCapsuleComponent*                           PawnBlockingCapsule;                                      // 0x0B50(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData10[0xA];                                       // 0x0B58(0x000A) MISSED OFFSET
	bool                                               _isInCombatMode;                                          // 0x0B62(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EWeaponAimingType                                  _weaponAimingType;                                        // 0x0B63(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isAimOverridden;                                         // 0x0B64(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0B65(0x0003) MISSED OFFSET
	struct FVector                                     _overrideAimLocation;                                     // 0x0B68(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData12[0x63C];                                     // 0x0B74(0x063C) MISSED OFFSET
	struct FVector                                     _gunsLookAtLocation;                                      // 0x11B0(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData13[0x20];                                      // 0x11BC(0x0020) MISSED OFFSET
	bool                                               _holdGunsAtReady;                                         // 0x11DC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0xF];                                       // 0x11DD(0x000F) MISSED OFFSET
	float                                              _inflictedDamageMultiplier;                               // 0x11EC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x20];                                      // 0x11F0(0x0020) MISSED OFFSET
	TArray<class USpotLightComponent*>                 _spotLights;                                              // 0x1210(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UStaticMeshComponent*>                _lightsMeshes;                                            // 0x1220(0x0010) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Sentry");
		return ptr;
	}


	void TickIK(float DeltaTime);
	void PlayWarningSound();
	void PlayTargetEngagedSound();
	void PlayReloadSound();
	void PlayPlayerLostSound();
	void PlayPlayerKilledSound();
	void PlayMontageMulticast(class UAnimMontage* Montage, float PlayRate, const struct FName& montageSection);
	void PlayLastWarningSound();
	void PlayHeardPrisonerSound();
	void OnRep_GunsLookAtLocation();
	void NetMulticast_StopShotEffects();
	void NetMulticast_Reload();
	void NetMulticast_FireShotEffects();
	void Kill();
	struct FVector GetMuzzleLocation();
	struct FVector GetMuzzleDirection();
	struct FName GetLeftGunSocketName();
	float GetHealth();
	void DealDamage_Multicast(class AActor* ActorToDamge, float Damage);
	void ChangeLightsColor(const struct FColor& Color);
};


// Class ConZ.SentryAIController
// 0x0108 (0x0540 - 0x0438)
class ASentryAIController : public AAIController
{
public:
	float                                              CloseCombatRange;                                         // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StandStillCombatRange;                                    // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FollowSlowlyCombatRange;                                  // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetNotSeenWaitTime;                                    // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetSeenWaitTime;                                       // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttackCooldownTime;                                       // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LostSightCooldown;                                        // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetEngagedStartup;                                     // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StuckCountdown;                                           // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SentryRunAttackChance;                                    // 0x045C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunAttackRange;                                           // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunAttackPredictionFactor;                                // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunAttackTrackingRangeStart;                              // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunAttackTrackingRangeStop;                               // 0x046C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunAttackExtraDistance;                                   // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumOfWarningsOBSOLETE;                                 // 0x0474(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WarningNumberResetTime;                                   // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeardNoiseAudioAllowedAgainTime;                          // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LostSightOfTargetAudioAllowedAgainTime;                   // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xBC];                                      // 0x0484(0x00BC) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentryAIController");
		return ptr;
	}


	void SensingComponent_OnSensePawn(TArray<class AActor*> actorsPercepted);
	void SensingComponent_OnSeePawn(class AActor* PawnSeen);
	void SensingComponent_OnHearNoise(class AActor* NoiseInstigator, const struct FVector& Location, float Volume);
	void OnTakenDamage(class AActor* damageInstigator);
};


// Class ConZ.SentryAnimInstance
// 0x00E0 (0x0440 - 0x0360)
class USentryAnimInstance : public UAnimInstance
{
public:
	float                                              BlendOutTime;                                             // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GunsLerpFactor;                                           // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightFootEffectorLocation;                                // 0x0368(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     LeftFootEffectorLocation;                                 // 0x0374(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    RightFootRotation;                                        // 0x0380(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    LeftFootRotation;                                         // 0x038C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               ShouldUseLUWalkStopAnimation;                             // 0x0398(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	float                                              stoppingDistance;                                         // 0x039C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x03A0(0x0048) MISSED OFFSET
	bool                                               _isSentryCompletelyInitialized;                           // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isInCombatMode;                                          // 0x03E9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _wantsToMove;                                             // 0x03EA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _previousWantsToMove;                                     // 0x03EB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESentryMovementPace                                _movementPace;                                            // 0x03EC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03ED(0x0003) MISSED OFFSET
	float                                              _actualCourseAngle;                                       // 0x03F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _desiredCourseAngle;                                      // 0x03F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _desiredCoursePitchAngle;                                 // 0x03F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _angularVelocity;                                         // 0x03FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _velocity;                                                // 0x0400(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _speed;                                                   // 0x040C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _forwardVector;                                           // 0x0410(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               _isFalling;                                               // 0x041C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x041D(0x0003) MISSED OFFSET
	struct FVector                                     _gunsLookAtLocation;                                      // 0x0420(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              _leanLeftBlendWeight;                                     // 0x042C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _leanRightBlendWeight;                                    // 0x0430(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0434(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentryAnimInstance");
		return ptr;
	}


	float GetTurnInPlaceElapsedTimeRight();
	float GetTurnInPlaceElapsedTimeLeft();
	float GetTurnInPlaceDirectionBlendAlpha();
	float GetTurnInPlaceBlendAlpha();
	float STATIC_FindTimeAtStoppingDistance(class UAnimSequenceBase* AnimSequence, float stoppingDistance);
	void AnimNotify_SentryJump();
	void AnimNotify_RFootDown();
	void AnimNotify_LFootDown();
};


// Class ConZ.SentryFirstPersonViewComponent
// 0x0000 (0x0110 - 0x0110)
class USentryFirstPersonViewComponent : public UPrisonerViewComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentryFirstPersonViewComponent");
		return ptr;
	}

};


// Class ConZ.SentryGuardVolume
// 0x0020 (0x0380 - 0x0360)
class ASentryGuardVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0360(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentryGuardVolume");
		return ptr;
	}

};


// Class ConZ.SentryMovementComponent
// 0x0030 (0x07A0 - 0x0770)
class USentryMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              RotationInterpolationSpeed;                               // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CorrectServerReceivedZ;                                   // 0x0774(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2B];                                      // 0x0775(0x002B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentryMovementComponent");
		return ptr;
	}

};


// Class ConZ.SentrySpawner
// 0x0068 (0x0390 - 0x0328)
class ASentrySpawner : public AActor
{
public:
	float                                              ActivationDistance;                                       // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	class UClass*                                      SentryToSpawn;                                            // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FPatrolPoint>                        PatrolPoints;                                             // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class ASentryGuardVolume*>                  GuardedAreaVolumes;                                       // 0x0348(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FDangerZone>                         DangerZones;                                              // 0x0358(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UBillboardComponent*                         Sprite;                                                   // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0370(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentrySpawner");
		return ptr;
	}

};


// Class ConZ.SentryThirdPersonViewComponent
// 0x0030 (0x0140 - 0x0110)
class USentryThirdPersonViewComponent : public UPrisonerViewComponent
{
public:
	struct FName                                       StandingSubviewName;                                      // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandingAimingSubviewName;                                // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0120(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SentryThirdPersonViewComponent");
		return ptr;
	}

};


// Class ConZ.SerializableLayoutWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class USerializableLayoutWidgetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SerializableLayoutWidgetInterface");
		return ptr;
	}


	void SaveLayout(const TScriptInterface<class UAttributeMapInterface>& Attributes);
	void ResetLayout();
	void LoadLayout(const TScriptInterface<class UAttributeMapInterface>& Attributes);
};


// Class ConZ.ServerBrowser
// 0x0128 (0x0330 - 0x0208)
class UServerBrowser : public UUserWidget
{
public:
	int                                                _currentIndex;                                            // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                _widgetCount;                                             // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FServerInfo>                         _serverInfos;                                             // 0x0210(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	TArray<struct FServerInfo>                         _unfilteredServerInfos;                                   // 0x0220(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	TArray<struct FServerInfo>                         _serverInfosToPing;                                       // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	TArray<struct FServerInfo>                         _serverInfosWithPing;                                     // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	TArray<struct FServerInfo>                         _serverInfosLastPlayed;                                   // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	TArray<struct FServerInfo>                         _serverInfosFavorites;                                    // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	bool                                               _requestingServerList;                                    // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0271(0x0003) MISSED OFFSET
	float                                              _desiredMaxPing;                                          // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	struct FString                                     _desiredHostName;                                         // 0x0278(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
	int                                                _desiredMinPlayers;                                       // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                _desiredMaxPlayers;                                       // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               _showFullServers;                                         // 0x0290(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               _showOnlyPasswordProtectedServers;                        // 0x0291(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	EServerBrowserTab                                  _currentlyOpenTab;                                        // 0x0292(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0293(0x0005) MISSED OFFSET
	class UVerticalBox*                                _serverList;                                              // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x90];                                      // 0x02A0(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ServerBrowser");
		return ptr;
	}


	void UpdateSorting();
	void UpdateList();
	void UpdateFilter();
	void StartNewMultiplayerGame(const struct FString& Ip, int GameplayPort, int ResponsePort, const struct FString& AuthToken);
	void ShutdownPingingThread();
	void STATIC_ShowRentAServerPage();
	void ShowErrorDialog(const struct FText& Message);
	void SetSortType(ESortType Type, bool ascending);
	void SetFilter(const struct FString& Filter);
	void RequestServerList();
	void RemoveInfo(int Index);
	void STATIC_RemoveFavoriteServer(class AActor* Context, const struct FString& Host, int ResponsePort);
	void RefreshServerInfosPing();
	void OpenContinueOrNewDialog(const struct FString& Ip, int GameplayPort, int ResponsePort, const struct FString& AuthToken);
	void OnLastPlayedServersTabOpened();
	void OnInternetTabOpened();
	void OnFavoriteServersTabOpened();
	void EnterPassword();
	void EndWaitingOnServerResponse();
	bool DoesServerInfoSatisfyFilter(const struct FServerInfo& ServerInfo);
	void DisconnectFromServer();
	void ContinueMultiplayerGame(const struct FString& Ip, int GameplayPort, int ResponsePort, const struct FString& AuthToken);
	bool ConnectToServer(const struct FString& Ip, int ResponsePort, const struct FString& AuthToken);
	void CloseSocketAndPingingThreads();
	void CloseConnection();
	void CancelWaitingOnServerResponse();
	void BeginWaitingOnServerResponse();
	void AddNewInfo(const struct FServerInfo& ServerInfo);
};


// Class ConZ.ShelterItem
// 0x0008 (0x0870 - 0x0868)
class AShelterItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ShelterItem");
		return ptr;
	}

};


// Class ConZ.SicknessClasses
// 0x0010 (0x0038 - 0x0028)
class USicknessClasses : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SicknessClasses");
		return ptr;
	}

};


// Class ConZ.SkillClasses
// 0x0010 (0x0038 - 0x0028)
class USkillClasses : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SkillClasses");
		return ptr;
	}

};


// Class ConZ.SkillEventHandler
// 0x0008 (0x0030 - 0x0028)
class USkillEventHandler : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SkillEventHandler");
		return ptr;
	}

};


// Class ConZ.Sledge
// 0x0208 (0x0A70 - 0x0868)
class ASledge : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	struct FVehicleSpawnParameters                     _spawnParameters;                                         // 0x0870(0x0030) (Edit, DisableEditOnInstance)
	TArray<class USledgeMountSlot*>                    _mountSlots;                                              // 0x08A0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData01[0x88];                                      // 0x08B0(0x0088) MISSED OFFSET
	float                                              _floorTraceDistance;                                      // 0x0938(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _tiltAngleToUnmountMountees;                              // 0x093C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0940(0x0004) MISSED OFFSET
	float                                              _accelerationForceMagnitude;                              // 0x0944(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _decelerationForceMagnitude;                              // 0x0948(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _steeringForceMagnitude;                                  // 0x094C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     _steeringForceOffset;                                     // 0x0950(0x000C) (Edit, IsPlainOldData)
	float                                              _sidewaysBrakingForceMagnitude;                           // 0x095C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 _dragForceMagnitudeVsSpeed;                               // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 _maxSpeedVsGroundSlopeAngle;                              // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicsAsset*                               _physicsAssetWhenBoarded;                                 // 0x0970(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             _defaultMovementParticleSystem;                           // 0x0978(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UPhysicalMaterial*, class UParticleSystem*> _movementParticleSystems;                                 // 0x0980(0x0050) (Edit, ZeroConstructor)
	float                                              _movementParticlesActivationSpeed;                        // 0x09D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _movementParticlesDeleteDelay;                            // 0x09D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _rigidBodyStatePositionErrorTolerance;                    // 0x09D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _rigidBodyStateRotationErrorTolerance;                    // 0x09DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _distanceErrorToHardSnapToRemoteLocation;                 // 0x09E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x09E4(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               _sledgeMovementStartAudioEvent;                           // 0x09E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _sledgeMovementStopAudioEvent;                            // 0x09F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _velocityUpdateInterval;                                  // 0x09F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _allowedWaterImmersionDepth;                              // 0x09FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _disallowedWaterImmersionDepth;                           // 0x0A00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _waterImmersionDepthToForceEvictMountees;                 // 0x0A04(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeToEvictMounteesWhenImmersedIntoWater;                // 0x0A08(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeToForceEvictMounteesWhenImmersedIntoWater;           // 0x0A0C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeToAutoDestructWhenImmersedIntoWater;                 // 0x0A10(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1C];                                      // 0x0A14(0x001C) MISSED OFFSET
	uint32_t                                           _controls;                                                // 0x0A30(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x14];                                      // 0x0A34(0x0014) MISSED OFFSET
	struct FVector                                     _movementParticlesPosition;                               // 0x0A48(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0A54(0x0004) MISSED OFFSET
	struct FText                                       _healthBarCaption;                                        // 0x0A58(0x0018) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Sledge");
		return ptr;
	}


	void OnRep_Controls();
	float GetWaterImmersionDepthSlow();
	float GetWaterImmersionDepth();
	bool CanBeInteractedWith();
	bool CanBeBoardedBy(class ACharacter* Character);
};


// Class ConZ.SledgeMountSlot
// 0x0060 (0x0150 - 0x00F0)
class USledgeMountSlot : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FName                                       _socketName;                                              // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _mountAudioEvent;                                         // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _mountPriority;                                           // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	TArray<struct FMountSlotEntryPoint>                _entryPoints;                                             // 0x0110(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               _unmountAudioEvent;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _isReachableFromSky;                                      // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMotionIntensity                                   _mountingMotionIntensity;                                 // 0x0129(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMotionIntensity                                   _unmountingMotionIntensity;                               // 0x012A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x012B(0x0001) MISSED OFFSET
	struct FVector                                     _mounteeCenterOfMassOffset;                               // 0x012C(0x000C) (Edit, IsPlainOldData)
	float                                              _minEffectiveMounteeMass;                                 // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxEffectiveMounteeMass;                                 // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UObject*                                     _mountee;                                                 // 0x0140(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _canMounteeBeAttackedByMelee;                             // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SledgeMountSlot");
		return ptr;
	}

};


// Class ConZ.SledgeDriverMountSlot
// 0x0020 (0x0170 - 0x0150)
class USledgeDriverMountSlot : public USledgeMountSlot
{
public:
	class UBlendSpace*                                 _forwardIdleAnimation;                                    // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _forwardSteeringAnimation;                                // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 _reverseIdleAnimation;                                    // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _reverseSteeringAnimation;                                // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SledgeDriverMountSlot");
		return ptr;
	}

};


// Class ConZ.SledgePassengerMountSlot
// 0x0008 (0x0158 - 0x0150)
class USledgePassengerMountSlot : public USledgeMountSlot
{
public:
	class UBlendSpace*                                 _idleAnimation;                                           // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SledgePassengerMountSlot");
		return ptr;
	}

};


// Class ConZ.SledgeSpringArmComponent
// 0x0000 (0x0310 - 0x0310)
class USledgeSpringArmComponent : public UConZVehicleSpringArmComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SledgeSpringArmComponent");
		return ptr;
	}

};


// Class ConZ.SlidingDoorStatic
// 0x0010 (0x0458 - 0x0448)
class ASlidingDoorStatic : public ADoor
{
public:
	class USceneComponent*                             ClosedPositionComponent;                                  // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             OpenPositionComponent;                                    // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SlidingDoorStatic");
		return ptr;
	}

};


// Class ConZ.SlidingDoorDestructible
// 0x0010 (0x0458 - 0x0448)
class ASlidingDoorDestructible : public ADoor
{
public:
	class USceneComponent*                             ClosedPositionComponent;                                  // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             OpenPositionComponent;                                    // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SlidingDoorDestructible");
		return ptr;
	}

};


// Class ConZ.SmokeGrenadeItem
// 0x0038 (0x08A0 - 0x0868)
class ASmokeGrenadeItem : public AItem
{
public:
	class UAkComponent*                                AudioComponent;                                           // 0x0868(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAkAudioEvent*                               SmokeStartedAudioEvent;                                   // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               SmokeStoppedAudioEvent;                                   // 0x0878(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SmokeSoundDuration;                                       // 0x0880(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionDelay;                                          // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0888(0x0008) MISSED OFFSET
	class UParticleSystem*                             _smokeParticle;                                           // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0898(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SmokeGrenadeItem");
		return ptr;
	}


	void Multicast_PlayEffects(const struct FVector& ZeroBasedLcoation, const struct FRotator& Rotation);
};


// Class ConZ.SnipingSkill
// 0x0008 (0x00A8 - 0x00A0)
class USnipingSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SnipingSkill");
		return ptr;
	}

};


// Class ConZ.SodiumDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class USodiumDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SodiumDeficiency");
		return ptr;
	}

};


// Class ConZ.Spline
// 0x0010 (0x0338 - 0x0328)
class ASpline : public AActor
{
public:
	class USceneComponent*                             SceneComponent;                                           // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USplineComponent*                            SplineComponent;                                          // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Spline");
		return ptr;
	}

};


// Class ConZ.SoundSpline
// 0x0050 (0x0388 - 0x0338)
class ASoundSpline : public ASpline
{
public:
	float                                              MinCameraLocationDeltaForUpdate;                          // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WorldStreamedCheckInterval;                               // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               InsideSplineAudioEvent;                                   // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               OutsideSplineAudioEvent;                                  // 0x0350(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0358(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SoundSpline");
		return ptr;
	}

};


// Class ConZ.SpawnDecalWhenParticleCollides
// 0x0010 (0x0038 - 0x0028)
class USpawnDecalWhenParticleCollides : public UParticleModuleEventSendToGame
{
public:
	TArray<struct FParticleCollisionDecalData>         Decals;                                                   // 0x0028(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SpawnDecalWhenParticleCollides");
		return ptr;
	}

};


// Class ConZ.SpawnMenuWidget
// 0x0000 (0x0220 - 0x0220)
class USpawnMenuWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SpawnMenuWidget");
		return ptr;
	}

};


// Class ConZ.SpawnScreen
// 0x0000 (0x0220 - 0x0220)
class USpawnScreen : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SpawnScreen");
		return ptr;
	}


	void UpdateInfo(bool loadoutMenu);
	void EnableRespawnOption(ERespawnOption option);
};


// Class ConZ.SphereProximityTriggerComponent
// 0x0020 (0x0620 - 0x0600)
class USphereProximityTriggerComponent : public UProximityTriggerComponent
{
public:
	class USphereComponent*                            SphereCollisionComponent;                                 // 0x0600(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        VisualizationMeshComponent;                               // 0x0608(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              _triggerRadius;                                           // 0x0610(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0614(0x0004) MISSED OFFSET
	class UStaticMesh*                                 _visualizationMesh;                                       // 0x0618(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SphereProximityTriggerComponent");
		return ptr;
	}


	void SphereComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void SphereComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class ConZ.SquadPanelWidget
// 0x00D8 (0x02E0 - 0x0208)
class USquadPanelWidget : public UUserWidget
{
public:
	int                                                squadRank;                                                // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                squadIndex;                                               // 0x020C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FString>                             SquadTopNames;                                            // 0x0210(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FString>                             SquadTopInformation;                                      // 0x0220(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FConZSquadEmblem>                    SquadTopEmblems;                                          // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<float>                                      SquadTopScore;                                            // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FString>                             SquadRankingNames;                                        // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FString>                             SquadRankingInformation;                                  // 0x0260(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FConZSquadEmblem>                    SquadRankingEmblems;                                      // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<float>                                      SquadRankingScore;                                        // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FDbIntegerId>                        MemberUserProfileIds;                                     // 0x0290(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FString>                             MemberNames;                                              // 0x02A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<EConZSquadMemberRank>                       MemberRanks;                                              // 0x02B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<float>                                      MemberFamePoints;                                         // 0x02C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<bool>                                       MemberOnline;                                             // 0x02D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SquadPanelWidget");
		return ptr;
	}


	void UpdateSquadTopData();
	void UpdateSquadRankingData();
	void UpdateSquadMemberInfo();
	void Update();
	void RequestSquadTopData(int count);
	void RequestSquadRankingData(int count);
	void RequestSquadMemberInfo();
};


// Class ConZ.StaphylococcalPoisoning
// 0x0008 (0x01B8 - 0x01B0)
class UStaphylococcalPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StaphylococcalPoisoning");
		return ptr;
	}

};


// Class ConZ.StarvationSickness
// 0x0008 (0x01B8 - 0x01B0)
class UStarvationSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StarvationSickness");
		return ptr;
	}

};


// Class ConZ.StatisticsDetailsWidget
// 0x0110 (0x0318 - 0x0208)
class UStatisticsDetailsWidget : public UUserWidget
{
public:
	class UStatisticsSubcategoryTab*                   _generalSubcategoryTab;                                   // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _foodSubcategoryTab;                                      // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _huntingSubcategoryTab;                                   // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _travelSubcategoryTab;                                    // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _metabolismSubcategoryTab;                                // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _craftingSubcategoryTab;                                  // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _combatSubcategoryTab;                                    // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsSubcategoryTab*                   _eventsSubcategoryTab;                                    // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetSwitcher*                             _subcategorySwitcher;                                     // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x88];                                      // 0x0250(0x0088) MISSED OFFSET
	class UStatisticsListWidget*                       _generalStatisticsList;                                   // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _foodStatisticsList;                                      // 0x02E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _huntingStatisticsList;                                   // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _travelStatisticsList;                                    // 0x02F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _metabolismStatisticsList;                                // 0x02F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _craftingStatisticsList;                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _combatStatisticsList;                                    // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStatisticsListWidget*                       _eventsStatisticsList;                                    // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StatisticsDetailsWidget");
		return ptr;
	}


	void OnTravelSubcategoryButtonClicked();
	void OnMetabolismSubcategoryButtonClicked();
	void OnHuntingSubcategoryButtonClicked();
	void OnGeneralSubcategoryButtonClicked();
	void OnFoodSubcategoryButtonClicked();
	void OnEventsSubcategoryButtonClicked();
	void OnCraftingSubcategoryButtonClicked();
	void OnCombatSubcategoryButtonClicked();
};


// Class ConZ.StatisticsListRow
// 0x0018 (0x0220 - 0x0208)
class UStatisticsListRow : public UUserWidget
{
public:
	class UTextBlock*                                  _statNameTextBox;                                         // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _statValueTextBox;                                        // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  _statUnitTextBox;                                         // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StatisticsListRow");
		return ptr;
	}

};


// Class ConZ.StatisticsListWidget
// 0x0028 (0x0230 - 0x0208)
class UStatisticsListWidget : public UUserWidget
{
public:
	struct FText                                       _subcategoryName;                                         // 0x0208(0x0018) (Edit)
	class UTextBlock*                                  _subcategoryTextBox;                                      // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  _scrollBox;                                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StatisticsListWidget");
		return ptr;
	}

};


// Class ConZ.StatisticsPanelWidget
// 0x0148 (0x0350 - 0x0208)
class UStatisticsPanelWidget : public UUserWidget
{
public:
	struct FSurvivalStats                              PlayerSurvivalStats;                                      // 0x0208(0x0140) (BlueprintVisible)
	class UStatisticsDetailsWidget*                    _survivalDetailsWidget;                                   // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StatisticsPanelWidget");
		return ptr;
	}


	void UpdatePlayerSurvivalStats();
	void RequestPlayerSurvivalStats();
	void OnOpened();
};


// Class ConZ.StatisticsSubcategoryTab
// 0x0040 (0x0248 - 0x0208)
class UStatisticsSubcategoryTab : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0208(0x0018) MISSED OFFSET
	class UTexture2D*                                  _subcategoryIcon;                                         // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UImage*                                      _tabSelectionImage;                                       // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      _subcategoryImage;                                        // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  _selectedTabTexture;                                      // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0240(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StatisticsSubcategoryTab");
		return ptr;
	}

};


// Class ConZ.StealthSkill
// 0x0000 (0x00A0 - 0x00A0)
class UStealthSkill : public UDexteritySkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StealthSkill");
		return ptr;
	}

};


// Class ConZ.StoreItemAction
// 0x0028 (0x00D0 - 0x00A8)
class UStoreItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00A8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.StoreItemAction");
		return ptr;
	}

};


// Class ConZ.SubtitleWidget
// 0x0010 (0x0218 - 0x0208)
class USubtitleWidget : public UUserWidget
{
public:
	class UTextBlock*                                  _subtitle;                                                // 0x0208(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOverlay*                                    _subtitleOverlay;                                         // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SubtitleWidget");
		return ptr;
	}

};


// Class ConZ.SunburnSickness
// 0x0008 (0x01B8 - 0x01B0)
class USunburnSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SunburnSickness");
		return ptr;
	}

};


// Class ConZ.SurveillanceCamera
// 0x0000 (0x0350 - 0x0350)
class ASurveillanceCamera : public AElectricalDevice
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SurveillanceCamera");
		return ptr;
	}

};


// Class ConZ.SurveillanceReflector
// 0x0000 (0x0350 - 0x0350)
class ASurveillanceReflector : public AElectricalDevice
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SurveillanceReflector");
		return ptr;
	}

};


// Class ConZ.SurveillanceReflectors
// 0x0048 (0x0398 - 0x0350)
class ASurveillanceReflectors : public AElectricalDevice
{
public:
	struct FVector                                     LightLocation;                                            // 0x0350(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    LightRotation;                                            // 0x035C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              LightIntensity;                                           // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      LightColor;                                               // 0x036C(0x0004) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              LightAttenuationRadius;                                   // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LightSourceRadius;                                        // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LightSourceLength;                                        // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LightInnerConeAngle;                                      // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LightOuterConeAngle;                                      // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0384(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SurveillanceReflectors");
		return ptr;
	}

};


// Class ConZ.SurvivalSkill
// 0x0008 (0x00A8 - 0x00A0)
class USurvivalSkill : public UIntelligenceSkill
{
public:
	struct FCompassSkillParametersPerSkillLevel        NoSkillParameters;                                        // 0x00A0(0x0001) (Edit, IsPlainOldData)
	struct FCompassSkillParametersPerSkillLevel        BasicSkillParameters;                                     // 0x00A1(0x0001) (Edit, IsPlainOldData)
	struct FCompassSkillParametersPerSkillLevel        MediumSkillParameters;                                    // 0x00A2(0x0001) (Edit, IsPlainOldData)
	struct FCompassSkillParametersPerSkillLevel        AdvancedSkillParameters;                                  // 0x00A3(0x0001) (Edit, IsPlainOldData)
	struct FCompassSkillParametersPerSkillLevel        AboveAdvancedSkillParameters;                             // 0x00A4(0x0001) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SurvivalSkill");
		return ptr;
	}

};


// Class ConZ.SurvivalStatsHandler
// 0x0078 (0x03A0 - 0x0328)
class ASurvivalStatsHandler : public AActor
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0328(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SurvivalStatsHandler");
		return ptr;
	}

};


// Class ConZ.SwimmingSkill
// 0x0000 (0x00B8 - 0x00B8)
class USwimmingSkill : public UConstitutionSkill
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.SwimmingSkill");
		return ptr;
	}

};


// Class ConZ.TabElement
// 0x0050 (0x0270 - 0x0220)
class UTabElement : public UDesignableUserWidget
{
public:
	class UWidget*                                     CategoryNameWidget;                                       // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      MaxIndex;                                                 // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Index;                                                    // 0x0229(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x022A(0x0002) MISSED OFFSET
	struct FVector2D                                   _initialPosition;                                         // 0x022C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   _oldPosition;                                             // 0x0234(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   _newPosition;                                             // 0x023C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   _initialSize;                                             // 0x0244(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   _oldSize;                                                 // 0x024C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   _newSize;                                                 // 0x0254(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              _oldAlpha;                                                // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _newAlpha;                                                // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _interpolationTime;                                       // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _interpolationDuration;                                   // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TabElement");
		return ptr;
	}


	void Update(bool Up, const struct FVector2D& Offset);
	int GetNextIndex(bool Up);
};


// Class ConZ.TabModeSwitcherWidget
// 0x0008 (0x0228 - 0x0220)
class UTabModeSwitcherWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TabModeSwitcherWidget");
		return ptr;
	}


	ETabMode GetSelectedTabMode();
};


// Class ConZ.TacticsSkill
// 0x00B0 (0x0150 - 0x00A0)
class UTacticsSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00A0(0x0050) MISSED OFFSET
	float                                              _updateTime;                                              // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _serverUpdateTime;                                        // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillDetectionRange;                                   // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicDetectionRange;                                     // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumDetectionRange;                                    // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedDetectionRange;                                  // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedDetectionRange;                             // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillDetectionTime;                                    // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicDetectionTime;                                      // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumDetectionTime;                                     // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedDetectionTime;                                   // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _aboveAdvancedDetectionTime;                              // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _fadeOutTime;                                             // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class UCurveFloat*                                 _detectionTimeDistanceScale;                              // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _noSkillExperiencePerSecond;                              // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _basicExperiencePerSecond;                                // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _mediumExperiencePerSecond;                               // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _advancedExperiencePerSecond;                             // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _tacticsDetectionCurveCoefficient1;                       // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _tacticsDetectionCurveCoefficient2;                       // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _tacticsDetectionCurveCoefficient3;                       // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TacticsSkill");
		return ptr;
	}


	bool ShouldDetectPrisoner(class APrisoner* Prisoner);
	bool IsPrisonerDetected(class APrisoner* Prisoner);
};


// Class ConZ.HandsCorrectionsData
// 0x0108 (0x0138 - 0x0030)
class UHandsCorrectionsData : public UDataAsset
{
public:
	struct FHandsPoseCorrections                       Corrections[0x4];                                         // 0x0030(0x0040) (Edit, IsPlainOldData)
	bool                                               OverrideFingersOnlyInProne;                               // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0131(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.HandsCorrectionsData");
		return ptr;
	}

};


// Class ConZ.TakeInHandsAssetData
// 0x0058 (0x0088 - 0x0030)
class UTakeInHandsAssetData : public UInteractionAssetData
{
public:
	class UClass*                                      AttachmentSocketMountType;                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GripSocketName;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TakeInHandsMontage;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                RemoveFromHandsMontage;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMeleeSkillAnimationsPreset*                 MeleeSkillAnimationsPreset;                               // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UHandsCorrectionsData*                       HandsCorrectionssData;                                    // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MovementSpeedModifier;                                    // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SwimmingMovementSpeedModifier;                            // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DivingMovementSpeedModifier;                              // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuoyancyMultiplier;                                       // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsCarried;                                                // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPrisonerMovementPace                              MaxPaceWhileCarrying;                                     // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	class UAnimSequenceBase*                           CarryItemIdleAnimationFP;                                 // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           CarryItemIdleAnimationTP;                                 // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TakeInHandsAssetData");
		return ptr;
	}

};


// Class ConZ.TameAnimalAction
// 0x0000 (0x00A8 - 0x00A8)
class UTameAnimalAction : public UAnimalAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TameAnimalAction");
		return ptr;
	}

};


// Class ConZ.TargetObjective
// 0x00D0 (0x0508 - 0x0438)
class ATargetObjective : public ARequirementObjective
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0438(0x0050) UNKNOWN PROPERTY: MapProperty ConZ.TargetObjective._targetClasses
	bool                                               _specificTarget;                                          // 0x0488(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0489(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x50];                                      // 0x0489(0x0050) UNKNOWN PROPERTY: MapProperty ConZ.TargetObjective._targetMeshes
	unsigned char                                      UnknownData03[0x10];                                      // 0x04E0(0x0010) UNKNOWN PROPERTY: ArrayProperty ConZ.TargetObjective._targetItems
	unsigned char                                      UnknownData04[0x18];                                      // 0x04F0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TargetObjective");
		return ptr;
	}

};


// Class ConZ.TeamDeathmatchParticipantStats
// 0x0000 (0x0048 - 0x0048)
class UTeamDeathmatchParticipantStats : public UGameEventParticipantStats
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeamDeathmatchParticipantStats");
		return ptr;
	}

};


// Class ConZ.TeamDeathmatchGameEvent
// 0x0020 (0x06A0 - 0x0680)
class ATeamDeathmatchGameEvent : public AGameEventBase
{
public:
	struct FTeamDeathmatchParameters                   _teamDeathmatchParameters;                                // 0x0680(0x0014) (Net)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0694(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeamDeathmatchGameEvent");
		return ptr;
	}


	void SetTeamDeathmatchParameters(const struct FTeamDeathmatchParameters& Params);
	void RestrictGameEventArea();
	struct FTeamDeathmatchParameters GetTeamDeathmatchParameters();
};


// Class ConZ.TeamDeathmatchLocationMarker
// 0x0028 (0x0548 - 0x0520)
class ATeamDeathmatchLocationMarker : public AGameEventLocationMarker
{
public:
	struct FTeamDeathmatchParameters                   TeamDeathmatchParameters;                                 // 0x0520(0x0014) (Edit, BlueprintVisible)
	struct FVector                                     FocusOffset;                                              // 0x0534(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              MinimalRadius;                                            // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0544(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeamDeathmatchLocationMarker");
		return ptr;
	}

};


// Class ConZ.TeamInfoWidget
// 0x0000 (0x0220 - 0x0220)
class UTeamInfoWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeamInfoWidget");
		return ptr;
	}

};


// Class ConZ.TeamInvitationWidget
// 0x0028 (0x0248 - 0x0220)
class UTeamInvitationWidget : public UDesignableUserWidget
{
public:
	struct FText                                       InvitationText;                                           // 0x0220(0x0018) (BlueprintVisible, BlueprintReadOnly)
	class APrisoner*                                   invitor;                                                  // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class APrisoner*                                   invited;                                                  // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeamInvitationWidget");
		return ptr;
	}

};


// Class ConZ.TeammateNameWidget
// 0x0000 (0x0220 - 0x0220)
class UTeammateNameWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeammateNameWidget");
		return ptr;
	}

};


// Class ConZ.TeleportComponent
// 0x0040 (0x0130 - 0x00F0)
class UTeleportComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FTeleportRepData                            _repData;                                                 // 0x00F8(0x0030) (Net)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeleportComponent");
		return ptr;
	}


	void Server_ReportClientReadyToFinishTeleport(unsigned char RequestID);
	void OnRep_Data();
};


// Class ConZ.TeleportComponentOwner
// 0x0000 (0x0028 - 0x0028)
class UTeleportComponentOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeleportComponentOwner");
		return ptr;
	}

};


// Class ConZ.TeleportStagingLocation
// 0x0000 (0x0328 - 0x0328)
class ATeleportStagingLocation : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeleportStagingLocation");
		return ptr;
	}

};


// Class ConZ.TeleportSubject
// 0x0000 (0x0028 - 0x0028)
class UTeleportSubject : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TeleportSubject");
		return ptr;
	}

};


// Class ConZ.TempPlayerStart
// 0x0000 (0x0358 - 0x0358)
class ATempPlayerStart : public APlayerStart
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TempPlayerStart");
		return ptr;
	}

};


// Class ConZ.ThieverySkill
// 0x0048 (0x00E8 - 0x00A0)
class UThieverySkill : public UDexteritySkill
{
public:
	class UCurveFloat*                                 _lockpickingDurationModifierCurve;                        // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 _lockpickingAngleModifierCurve;                           // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 _lockpickingDurabilityModifierCurve;                      // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              _basicLocks;                                              // 0x00B8(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              _mediumLocks;                                             // 0x00C8(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              _advancedLocks;                                           // 0x00D8(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ThieverySkill");
		return ptr;
	}

};


// Class ConZ.ThrowableItemTag
// 0x0028 (0x0058 - 0x0030)
class UThrowableItemTag : public UBaseItemTag
{
public:
	struct FMeleeWeaponDesc                            WeaponDesc;                                               // 0x0030(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ThrowableItemTag");
		return ptr;
	}

};


// Class ConZ.ThrowingComponent
// 0x0040 (0x01E0 - 0x01A0)
class UThrowingComponent : public UProjectileMovementComponent
{
public:
	EItemThrowingBehavior                              ItemThrowingBehavior;                                     // 0x01A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A1(0x0003) MISSED OFFSET
	float                                              PierceMaxDensity;                                         // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThrowSpeedMultiplier;                                     // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    InitialRotation;                                          // 0x01AC(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    UpdatedRotation;                                          // 0x01B8(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    MaxRandomImpactRotation;                                  // 0x01C4(0x000C) (Edit, IsPlainOldData)
	float                                              PenetrationDepth;                                         // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x01D4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ThrowingComponent");
		return ptr;
	}


	void OnProjectileStopped(const struct FHitResult& ImpactResult);
	void OnProjectileBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void Multicast_PierceHitObject(const struct FVector& ImpactVelocity, const struct FHitResult& ZeroBasedImpactResult);
};


// Class ConZ.ThrowingDamageType
// 0x0000 (0x0040 - 0x0040)
class UThrowingDamageType : public UDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ThrowingDamageType");
		return ptr;
	}

};


// Class ConZ.ThrowingSkill
// 0x0008 (0x00A8 - 0x00A0)
class UThrowingSkill : public UDexteritySkill
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ThrowingSkill");
		return ptr;
	}

};


// Class ConZ.TimeControllableLight
// 0x0018 (0x0350 - 0x0338)
class ATimeControllableLight : public ALight
{
public:
	bool                                               _shouldExistOnDedicatedServer;                            // 0x0338(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	class UCurveFloat*                                 _intensityVsTimeOfDayCurve;                               // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPointLightComponent*                        _pointLightComponent;                                     // 0x0348(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TimeControllableLight");
		return ptr;
	}


	void OnTimeOfDayChanged(float timeOfDay);
};


// Class ConZ.TimeControllableSpotLight
// 0x0018 (0x0350 - 0x0338)
class ATimeControllableSpotLight : public ALight
{
public:
	bool                                               _shouldExistOnDedicatedServer;                            // 0x0338(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	class UCurveFloat*                                 _intensityVsTimeOfDayCurve;                               // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USpotLightComponent*                         _pointLightComponent;                                     // 0x0348(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TimeControllableSpotLight");
		return ptr;
	}


	void OnTimeOfDayChanged(float timeOfDay);
};


// Class ConZ.TireToSurfaceAudioData
// 0x0228 (0x0258 - 0x0030)
class UTireToSurfaceAudioData : public UDataAsset
{
public:
	float                                              _maxSoundRange;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               _movementStarted;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _movementStopped;                                         // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _noSurface;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTireSurfaceAudioEntry>              _soundGroups;                                             // 0x0050(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x1F8];                                     // 0x0060(0x01F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TireToSurfaceAudioData");
		return ptr;
	}

};


// Class ConZ.ToggleCamouflageAction
// 0x0008 (0x00A8 - 0x00A0)
class UToggleCamouflageAction : public USkillAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ToggleCamouflageAction");
		return ptr;
	}

};


// Class ConZ.ToothacheSickness
// 0x0008 (0x01B8 - 0x01B0)
class UToothacheSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ToothacheSickness");
		return ptr;
	}

};


// Class ConZ.TrackingMarker
// 0x0050 (0x0378 - 0x0328)
class ATrackingMarker : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        MarkerMesh;                                               // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             DirectionArrow;                                           // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             ConeDecal;                                                // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	class UClass*                                      AnimalClass;                                              // 0x0350(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0358(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Direction;                                                // 0x035C(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              health;                                                   // 0x0368(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x036C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TrackingMarker");
		return ptr;
	}

};


// Class ConZ.TrackingMarker2
// 0x0068 (0x0390 - 0x0328)
class ATrackingMarker2 : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class USceneComponent*                             SceneComponent;                                           // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             DirectionArrow;                                           // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             ConeDecal;                                                // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    Particles;                                                // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              TickFrequency;                                            // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	class UClass*                                      AnimalClass;                                              // 0x0358(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0360(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Direction;                                                // 0x0364(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              health;                                                   // 0x0370(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EBleedingSeverity                                  BleedingSeverity;                                         // 0x0374(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShowBleedingInfo;                                         // 0x0375(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ShowWoundInfo;                                            // 0x0376(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ShowBasicWoundInfo;                                       // 0x0377(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSevereBleedTime;                                       // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxHeavyBleedTime;                                        // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxModerateBleedTime;                                     // 0x0380(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxLightBleedTime;                                        // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0388(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TrackingMarker2");
		return ptr;
	}

};


// Class ConZ.Tractor4WAnimInstance
// 0x0010 (0x0990 - 0x0980)
class UTractor4WAnimInstance : public UConZVehicleAnimInstance
{
public:
	struct FTractor4WAnimWheelData                     FRWheelData;                                              // 0x0980(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0988(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Tractor4WAnimInstance");
		return ptr;
	}

};


// Class ConZ.TrapData
// 0x0018 (0x0048 - 0x0030)
class UTrapData : public UDataAsset
{
public:
	class UClass*                                      SphereProximityTriggerComponentClass;                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BoxProximityTriggerComponentClass;                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LaserTriggerComponentClass;                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TrapData");
		return ptr;
	}

};


// Class ConZ.TreatBrokenLimbsAction
// 0x0008 (0x00B0 - 0x00A8)
class UTreatBrokenLimbsAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TreatBrokenLimbsAction");
		return ptr;
	}

};


// Class ConZ.TreatSicknessAction
// 0x0008 (0x00B0 - 0x00A8)
class UTreatSicknessAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TreatSicknessAction");
		return ptr;
	}

};


// Class ConZ.TrenchFootDisease
// 0x0010 (0x01C0 - 0x01B0)
class UTrenchFootDisease : public UDisease
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TrenchFootDisease");
		return ptr;
	}

};


// Class ConZ.TriggerItemTag
// 0x0008 (0x0038 - 0x0030)
class UTriggerItemTag : public UBaseItemTag
{
public:
	ETrapTriggerType                                   TriggerType;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.TriggerItemTag");
		return ptr;
	}

};


// Class ConZ.UnarmedCombatInputRedirector
// 0x0038 (0x0060 - 0x0028)
class UUnarmedCombatInputRedirector : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0028(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UnarmedCombatInputRedirector");
		return ptr;
	}

};


// Class ConZ.UnderwaterPostProcessVolume
// 0x0000 (0x08A0 - 0x08A0)
class AUnderwaterPostProcessVolume : public APostProcessVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UnderwaterPostProcessVolume");
		return ptr;
	}

};


// Class ConZ.UseItemObjective
// 0x0058 (0x0480 - 0x0428)
class AUseItemObjective : public AObjective
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0428(0x0050) UNKNOWN PROPERTY: MapProperty ConZ.UseItemObjective._targetMeshes
	unsigned char                                      UnknownData01[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UseItemObjective");
		return ptr;
	}

};


// Class ConZ.UserManager
// 0x0078 (0x00A0 - 0x0028)
class UUserManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0028(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UserManager");
		return ptr;
	}


	class UUserProfile* FindUserProfile(const struct FDbIntegerId& ID);
	class UUser* FindUser(const struct FString& ID);
	class UUser* FindOrCreateUser(const struct FString& ID);
	bool DeleteUser(const struct FString& ID);
};


// Class ConZ.User
// 0x00E8 (0x0110 - 0x0028)
class UUser : public UObject
{
public:
	unsigned char                                      UnknownData00[0xE8];                                      // 0x0028(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.User");
		return ptr;
	}


	void SetRecentServers(TArray<struct FUserServerHistoryItem> Value);
	void SetProvider(const struct FString& Value);
	void SetName(const struct FString& Value);
	void SetLastLoginTime(const struct FDateTime& Value);
	void SetLastDirectConnectionAddress(const struct FString& Value);
	void SetIsBanned(bool Value);
	void SetFavoriteServers(TArray<struct FUserServerHistoryItem> Value);
	void RemoveRecentServerAt(int Index);
	void RemoveRecentServer(const struct FUserServerHistoryItem& Item);
	void RemoveFavoriteServerAt(int Index);
	void RemoveFavoriteServer(const struct FUserServerHistoryItem& Item);
	bool HasProfileWithName(EUserProfileType Type, const struct FString& Name);
	TArray<struct FUserServerHistoryItem> GetRecentServers();
	struct FString GetProvider();
	TArray<struct FString> GetProfileNames(EUserProfileType Type);
	struct FString GetName();
	struct FDateTime GetLastLoginTime();
	struct FString GetLastDirectConnectionAddress();
	bool GetIsBanned();
	struct FString GetID();
	TArray<struct FUserServerHistoryItem> GetFavoriteServers();
	TArray<class UUserProfile*> FindProfiles(EUserProfileType Type);
	class UUserProfile* FindProfile(const struct FDbIntegerId& ID);
	class UUserProfile* FindMultiplayerCacheProfile(const struct FString& ServerIp, int ServerResponsePort);
	bool DeleteProfile(const struct FDbIntegerId& ID);
	class UUserProfile* CreateProfileFromTemplate(EUserProfileType Type, const struct FCharacterTemplate& Value);
	class UUserProfile* CreateEmptyProfile(EUserProfileType Type);
	class UUserProfile* CreateDefaultProfile(EUserProfileType Type);
	void ClearRecentServers();
	void ClearFavoriteServers();
	void AddRecentServer(const struct FUserServerHistoryItem& Item);
	void AddFavoriteServer(const struct FUserServerHistoryItem& Item);
};


// Class ConZ.UserProfile
// 0x00B0 (0x00D8 - 0x0028)
class UUserProfile : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0028(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.UserProfile");
		return ptr;
	}


	void SetPrisonerId(const struct FDbIntegerId& Value);
	void SetName(const struct FString& Value);
	void SetLastLoginTime(const struct FDateTime& Value);
	void SetFamePoints(float Value);
	void SetCreationTemplateXml(const struct FString& Value);
	void SetAuthorityInfo(const struct FUserProfileAuthorityInfo& Value);
	struct FCharacterTemplate MakeCharacterTemplate();
	struct FCharacterTemplate LoadCharacterTemplate();
	class UUser* GetUser();
	EUserProfileType GetType();
	struct FDbIntegerId GetPrisonerId();
	struct FString GetName();
	struct FDateTime GetLastLoginTime();
	struct FDbIntegerId GetID();
	float GetFamePoints();
	struct FString GetCreationTemplateXml();
	struct FCharacterTemplate GetCreationTemplate();
	struct FUserProfileAuthorityInfo GetAuthorityInfo();
};


// Class ConZ.Vehicle
// 0x0000 (0x0028 - 0x0028)
class UVehicle : public UMountable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Vehicle");
		return ptr;
	}


	void StopVehicleEngine();
	void StartVehicleEngine();
	bool ShouldShowVehicleHud();
	void SetVehicleThrottleAmount(float Value);
	void SetVehicleSteerAmount(float Value);
	void SetVehicleLightsActive(bool Value);
	void SetVehicleHornActive(bool Value);
	void SetVehicleHealth(float Value);
	void SetVehicleHandbrakeAmount(float Value);
	void SetVehicleGearUp(bool Value);
	void SetVehicleGearDown(bool Value);
	void SetVehicleFreeLookEnabled(bool Value);
	void SetVehicleBrakeAmount(float Value);
	void SetCurrentVehicleGear(int Value);
	struct FDbIntegerId SaveState(const struct FDbIntegerId& ID);
	void ResetVehicle();
	bool RepairVehicle(float healthToRepair);
	void LoadState(const struct FDbIntegerId& ID);
	bool IsVehicleHornActive();
	bool IsVehicleFreeLookEnabled();
	float GetVehicleWheelsSteerAmount();
	float GetVehicleThrottleAmount();
	float GetVehicleSteerAmount();
	float GetVehicleSpeed();
	struct FVehicleSpawnParameters GetVehicleSpawnParameters();
	float GetVehicleHealthRatio();
	struct FText GetVehicleHealthBarCaption();
	float GetVehicleHealth();
	float GetVehicleHandbrakeAmount();
	EVehicleEngineState GetVehicleEngineState();
	float GetVehicleEngineRpm();
	float GetVehicleBrakeAmount();
	int GetNumVehicleReverseGears();
	int GetNumVehicleForwardGears();
	float GetMaxVehicleHealth();
	int GetCurrentVehicleGear();
	bool AreVehicleLightsActive();
};


// Class ConZ.VehicleCorpse
// 0x0078 (0x03A0 - 0x0328)
class AVehicleCorpse : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        _mesh;                                                    // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             _explosionParticles;                                      // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  _explosionParticlesTransform;                             // 0x0340(0x0030) (Edit, IsPlainOldData)
	class UAkAudioEvent*                               _explosionAudioEvent;                                     // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _explosionForceMagnitude;                                 // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	TArray<struct FVehicleCorpseBurningParticles>      _burningParticles;                                        // 0x0380(0x0010) (Edit, ZeroConstructor)
	class UAkAudioEvent*                               _burningAudioEvent;                                       // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0398(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleCorpse");
		return ptr;
	}


	class UStaticMeshComponent* GetMesh();
};


// Class ConZ.VehicleHudWidget
// 0x0000 (0x0220 - 0x0220)
class UVehicleHudWidget : public UDesignableUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleHudWidget");
		return ptr;
	}


	bool ShouldShowVehicleHud();
	bool HasVehicle();
	float GetVehicleSpeed();
	float GetVehicleHealthRatio();
	struct FText GetVehicleHealthBarCaption();
	int GetVehicleGear();
};


// Class ConZ.VehicleMountSlot
// 0x0000 (0x0028 - 0x0028)
class UVehicleMountSlot : public UMountSlot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleMountSlot");
		return ptr;
	}

};


// Class ConZ.VehiclePartDescriptionComponent
// 0x0000 (0x0590 - 0x0590)
class UVehiclePartDescriptionComponent : public UBoxComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehiclePartDescriptionComponent");
		return ptr;
	}

};


// Class ConZ.VehicleSpawner
// 0x0008 (0x0330 - 0x0328)
class AVehicleSpawner : public AActor
{
public:
	class UVehicleSpawnerComponent*                    SpawnerComponent;                                         // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleSpawner");
		return ptr;
	}

};


// Class ConZ.VehicleSpawnerComponent
// 0x0010 (0x0250 - 0x0240)
class UVehicleSpawnerComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0240(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleSpawnerComponent");
		return ptr;
	}

};


// Class ConZ.VehicleSpawningManager
// 0x0118 (0x0440 - 0x0328)
class AVehicleSpawningManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0328(0x00D0) MISSED OFFSET
	int                                                _maxNumSpawners;                                          // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _preferredDistanceBetweenSpawners;                        // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _relevantSpawnersUpdateInterval;                          // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	float                                              _minVisitorPawnLocationDeltaToUpdateRelevantSpawners;     // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _vehicleActorCullDistance;                                // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _addSpawnerUpdateInterval;                                // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	float                                              _numDaysToKeepSpawnerAliveIfVehicleIsInactive;            // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	TArray<struct FExpirableVehicleSpawner>            _expirableSpawners;                                       // 0x0420(0x0010) (Edit, ZeroConstructor)
	float                                              _autoSaveCheckInterval;                                   // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	float                                              _autoSaveInterval;                                        // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x043C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleSpawningManager");
		return ptr;
	}

};


// Class ConZ.VehicleSpawnerPreset
// 0x0018 (0x0040 - 0x0028)
class UVehicleSpawnerPreset : public UObject
{
public:
	struct FVehicleSpawnerData                         SpawnerData;                                              // 0x0028(0x0018) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VehicleSpawnerPreset");
		return ptr;
	}

};


// Class ConZ.VibrioVulnificusInfection
// 0x0008 (0x01B8 - 0x01B0)
class UVibrioVulnificusInfection : public UPoisoning
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VibrioVulnificusInfection");
		return ptr;
	}

};


// Class ConZ.VicinityContainer3
// 0x0028 (0x0248 - 0x0220)
class UVicinityContainer3 : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0220(0x0018) MISSED OFFSET
	class UItemInventoryWidget2*                       _container;                                               // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0240(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VicinityContainer3");
		return ptr;
	}

};


// Class ConZ.VicinityPanel3
// 0x0210 (0x0430 - 0x0220)
class UVicinityPanel3 : public UDesignableUserWidget
{
public:
	class UWrapBox*                                    _searchedItemsBox;                                        // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWrapBox*                                    _vicinityBox;                                             // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              _vicinityContainersBox;                                   // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<class UObject*, class UWidget*>               _searchedItems;                                           // 0x0238(0x0050) (ExportObject, ZeroConstructor)
	TMap<class UObject*, class UWidget*>               _vicinityItems;                                           // 0x0288(0x0050) (ExportObject, ZeroConstructor)
	TMap<class UObject*, class UWidget*>               _vicinityContainers;                                      // 0x02D8(0x0050) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0328(0x0050) MISSED OFFSET
	TMap<class UCheckBox*, struct FClassesArray>       _filterCheckboxes;                                        // 0x0378(0x0050) (Edit, ZeroConstructor)
	TMap<struct FName, struct FClassesArray>           _filterCheckboxesNames;                                   // 0x03C8(0x0050) (Edit, ZeroConstructor)
	struct FMargin                                     _vicinityContainersPadding;                               // 0x0418(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0428(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VicinityPanel3");
		return ptr;
	}


	void OnVicinityContainerInitialized(const TScriptInterface<class UInventoryNode>& Item, class UItemWidget2* Widget);
	void OnItemActorDestroyed(class AActor* Actor);
	void OnCheckBoxCheckedChanged(bool checked);
};


// Class ConZ.VisionEffectsComponent
// 0x06D0 (0x07C0 - 0x00F0)
class UVisionEffectsComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	float                                              PostProcessPriority;                                      // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class UMaterialInterface*                          FadeOutMaterial;                                          // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          LowLightVisionMaterial;                                   // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          NightVisionMaterial;                                      // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NightVisionBlendInDuration;                               // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NightVisionBlendOutDuration;                              // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialParameterCollection*                AnimalEyesMaterialParameterCollection;                    // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimalEyesEmissiveMaterialName;                           // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimalEyesEmissiveValueWhenNightVisionIsEnabled;          // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class UMaterialInterface*                          FlashbangEffectMaterial;                                  // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          TakenDamageMaterial;                                      // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialParameterCollection*                TakenDamageMaterialParameterCollection;                   // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TakenDamageBlurIntensityParameterName;                    // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TakenDamageStainsIntensityParameterName;                  // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TakenDamageVignetteIntensityParameterName;                // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageBlurShapeCurve;                                // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageBlurIntensityCurve;                            // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageBlurDurationCurve;                             // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageStainsShapeCurve;                              // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageStainsIntensityCurve;                          // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageStainsDurationCurve;                           // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageVignetteShapeCurve;                            // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageVignetteIntensityCurve;                        // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageVignetteDurationCurve;                         // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TakenDamageMaxChromaticAberration;                        // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	class UClass*                                      TakenDamageCameraShakeClass;                              // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TakenDamageCameraShakeScaleCurve;                         // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDesaturateIfHealthIsLow;                            // 0x01C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01C9(0x0003) MISSED OFFSET
	float                                              HealthAtWhichDesaturationIsMinimal;                       // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthAtWhichDesaturationIsMaximal;                       // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	class UMaterialInterface*                          TacticsEffectMaterial;                                    // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FocusModeMaterial;                                        // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          DrunkennessMaterial;                                      // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DrunkennessIntensityParameterName;                        // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          UnderwaterBlurMaterial;                                   // 0x01F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          UnderwaterDivingMaskMaterial;                             // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        _postProcessSettings;                                     // 0x0210(0x0520) (Edit)
	unsigned char                                      UnknownData07[0x68];                                      // 0x0730(0x0068) MISSED OFFSET
	class UMaterialInstanceDynamic*                    _drunkennessMaterialInstance;                             // 0x0798(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          _headgearOverlayMaterialInstance;                         // 0x07A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x07A8(0x0004) MISSED OFFSET
	float                                              _DOFBlurTime;                                             // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _DOFClearBlurTime;                                        // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _DOFScopingBlurTime;                                      // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _DOFBlurDistanceADS;                                      // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x07BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VisionEffectsComponent");
		return ptr;
	}

};


// Class ConZ.VisualOverlayItemTag
// 0x0008 (0x0038 - 0x0030)
class UVisualOverlayItemTag : public UBaseItemTag
{
public:
	class UMaterialInterface*                          OverlayMaterial;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VisualOverlayItemTag");
		return ptr;
	}

};


// Class ConZ.VitaminADeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminADeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminADeficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB12Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB12Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB12Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB1Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB1Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB1Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB2Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB2Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB2Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB3Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB3Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB3Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB4Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB4Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB4Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB5Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB5Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB5Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB6Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB6Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB6Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminB9Deficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminB9Deficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminB9Deficiency");
		return ptr;
	}

};


// Class ConZ.VitaminCDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminCDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminCDeficiency");
		return ptr;
	}

};


// Class ConZ.VitaminDDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminDDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminDDeficiency");
		return ptr;
	}

};


// Class ConZ.VitaminEDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminEDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminEDeficiency");
		return ptr;
	}

};


// Class ConZ.VitaminKDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UVitaminKDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VitaminKDeficiency");
		return ptr;
	}

};


// Class ConZ.VoiceAudioComponent
// 0x0020 (0x0670 - 0x0650)
class UVoiceAudioComponent : public UAudioComponent
{
public:
	class UVoiceDecoder*                               VoiceDecoder;                                             // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0658(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VoiceAudioComponent");
		return ptr;
	}


	void QueueVoiceData(TArray<unsigned char> CompressedVoiceData);
	void InitializeVoiceAudioComponent();
};


// Class ConZ.VoiceChatComponent
// 0x00A0 (0x0190 - 0x00F0)
class UVoiceChatComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    VoiceDataAvailableEvent;                                  // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StartedTalkingEvent;                                      // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StoppedTalkingEvent;                                      // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              StopTalkingTimeThreshold;                                 // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6C];                                      // 0x0124(0x006C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VoiceChatComponent");
		return ptr;
	}


	bool GetCompressedVoiceData(TArray<unsigned char>* OutBuffer);
	void GetAllPlayersInRange(float requiredDistance, TArray<class APawn*>* pawnList);
};


// Class ConZ.VoiceDecoder
// 0x0010 (0x0038 - 0x0028)
class UVoiceDecoder : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VoiceDecoder");
		return ptr;
	}


	void DecompressVoiceData(TArray<unsigned char> InCompressedVoiceData, int InCompressedVoiceBytes, TArray<unsigned char>* OutDecompressedVoiceData, int* OutDecompressedVoiceBytes);
	class UVoiceDecoder* STATIC_CreateVoiceDecoder(class UObject* Owner);
};


// Class ConZ.VomitingSickness
// 0x0020 (0x01D0 - 0x01B0)
class UVomitingSickness : public USickness
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x01B0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.VomitingSickness");
		return ptr;
	}

};


// Class ConZ.WarningNotification
// 0x0000 (0x0030 - 0x0030)
class UWarningNotification : public UConZNotification
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WarningNotification");
		return ptr;
	}

};


// Class ConZ.WarningNotificationDescription
// 0x0018 (0x0058 - 0x0040)
class UWarningNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                  // 0x0040(0x0010) (ZeroConstructor, SaveGame)
	float                                              Duration;                                                 // 0x0050(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0054(0x0004) (SaveGame, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WarningNotificationDescription");
		return ptr;
	}

};


// Class ConZ.WashClothesData
// 0x0060 (0x0090 - 0x0030)
class UWashClothesData : public UDataAsset
{
public:
	TMap<class UClass*, struct FWashItemData>          WashClothes;                                              // 0x0030(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      SkillToIncrease;                                          // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkillIncreaseAmount;                                      // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkillIncreaseModifier;                                    // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WashClothesData");
		return ptr;
	}

};


// Class ConZ.WaterSurfaceAssetData
// 0x0000 (0x0028 - 0x0028)
class UWaterSurfaceAssetData : public UAssetUserData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WaterSurfaceAssetData");
		return ptr;
	}

};


// Class ConZ.WaypointGroup
// 0x0040 (0x0408 - 0x03C8)
class AWaypointGroup : public AAnimalSpawner2
{
public:
	struct FColor                                      DebugColor;                                               // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	EWaypointTraverseType                              WaypointTraverseType;                                     // 0x03CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03CD(0x0003) MISSED OFFSET
	int                                                MaxSpawnInstancesPerWaypoint;                             // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WaypointSpawningResetTime;                                // 0x03D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FWaypoint>                           Waypoints;                                                // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x03E8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WaypointGroup");
		return ptr;
	}


	struct FVector GetWaypointLocation(int waypointIndex);
};


// Class ConZ.WaypointScreenWidget
// 0x0018 (0x0238 - 0x0220)
class UWaypointScreenWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      WaypointClass;                                            // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0228(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WaypointScreenWidget");
		return ptr;
	}


	void UpdateWaypoints();
	void RemoveWaypointWidgetFromScreen(class UWaypointWidget* Widget);
	void RemoveWaypoint(class UWaypointWidget* Waypoint);
	void RemoveAllWaypoints();
	void AddWaypointWidgetToScreen(class UWaypointWidget* Widget);
	class UWaypointWidget* AddWaypoint(class UClass* WidgetClass);
};


// Class ConZ.WeaponAccuracyGroup
// 0x0030 (0x0060 - 0x0030)
class UWeaponAccuracyGroup : public UDataAsset
{
public:
	float                                              NormalStandFrom;                                          // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalStandTo;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalCrouchFrom;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalCrouchTo;                                           // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalProneFrom;                                          // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalProneTo;                                            // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopedStandFrom;                                          // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopedStandTo;                                            // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopedCrouchFrom;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopedCrouchTo;                                           // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopedProneFrom;                                          // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopedProneTo;                                            // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAccuracyGroup");
		return ptr;
	}

};


// Class ConZ.WeaponAnimInstance
// 0x0020 (0x0380 - 0x0360)
class UWeaponAnimInstance : public UAnimInstance
{
public:
	EPrisonerStance                                    _owningPrisonerStance;                                    // 0x0360(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	float                                              _owningPrisonerWeaponBreathFactor;                        // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              _owningPrisonerWeaponAimDownTheSightsStillBlendFactor;    // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isOwningPrisonerInFirstPersonView;                       // 0x036C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isOwningPrisonerAimingDownTheSights;                     // 0x036D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isChamberOpened;                                         // 0x036E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x036F(0x0001) MISSED OFFSET
	int                                                _ammoCount;                                               // 0x0370(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldPlayChamberOpenedIdle;                             // 0x0374(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _isInGameEvent;                                           // 0x0375(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EWeaponMalfunction                                 _malfunction;                                             // 0x0376(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x9];                                       // 0x0377(0x0009) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAnimInstance");
		return ptr;
	}

};


// Class ConZ.WeaponAttachmentFlashlight
// 0x0020 (0x08A8 - 0x0888)
class AWeaponAttachmentFlashlight : public AWeaponAttachment
{
public:
	class UAkAudioEvent*                               _lightActivatedAudioEvent;                                // 0x0888(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _lightSocketName;                                         // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _materialEmissiveParameterName;                           // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _lightActive;                                             // 0x08A0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x08A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentFlashlight");
		return ptr;
	}


	void Server_SetLightActive(bool Value);
	void OnRep_LightActive(bool OldValue);
};


// Class ConZ.WeaponAttachmentMagazine
// 0x0018 (0x08A0 - 0x0888)
class AWeaponAttachmentMagazine : public AWeaponAttachment
{
public:
	class UClass*                                      AmmunitionItemClass;                                      // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               RequiresFullCapacityOnLoad;                               // 0x0890(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0891(0x0003) MISSED OFFSET
	int                                                _ammoCount;                                               // 0x0894(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	int                                                _ammoCountOwnerHelper;                                    // 0x0898(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                _capacity;                                                // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentMagazine");
		return ptr;
	}


	void SetAmmoCount(int amount);
	void Server_InsertCartridgeIntoMagazine(class AAmmunitionItem* ammo);
	void OnRep_AmmoCountOwnerHelper();
	void OnRep_AmmoCount();
	void OnAmmoChangedEvent();
	void Multicast_SetLoadedVariables(int ammoCount);
	class UClass* GetProjectileClass();
	int GetCapacity();
	int GetAmmoCount();
	void AddAmmo(int amount);
};


// Class ConZ.WeaponAttachmentSight
// 0x0018 (0x08A0 - 0x0888)
class AWeaponAttachmentSight : public AWeaponAttachment
{
public:
	struct FName                                       ViewCenterSocketName;                                     // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AimingDownTheSightsLocationOffset;                        // 0x0890(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x089C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentSight");
		return ptr;
	}

};


// Class ConZ.WeaponAttachmentScope
// 0x0100 (0x09A0 - 0x08A0)
class AWeaponAttachmentScope : public AWeaponAttachmentSight
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08A0(0x0008) MISSED OFFSET
	TArray<struct FScopeZoomLevelSettings>             ZoomLevelSettings;                                        // 0x08A8(0x0010) (Edit, ZeroConstructor)
	class UTexture2D*                                  ScopingTexture;                                           // 0x08B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageStandingFP;                                       // 0x08C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageCrouchingFP;                                      // 0x08C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageProneFP;                                          // 0x08D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageStandingTP;                                       // 0x08D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageCrouchingTP;                                      // 0x08E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                _montageProneTP;                                          // 0x08E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _scopingStartDelay;                                       // 0x08F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _scopingStopDelay;                                        // 0x08F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UTextureRenderTarget2D*                      TextRenderTarget;                                         // 0x08F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WeaponScopeWidget;                                        // 0x0900(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GlassCenterSocketName;                                    // 0x0908(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                WindageInitialOffset;                                     // 0x0910(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0914(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               WindageClickAudioEvent;                                   // 0x0918(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x80];                                      // 0x0920(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentScope");
		return ptr;
	}


	void SetZoomLevelOnServer(int zoomLevel);
	void SetWindageOnServer(int Windage);
	void SetLoadedVariablesOnClient(int zoomLevel, int Windage);
};


// Class ConZ.WeaponAttachmentScopeRail
// 0x0008 (0x0890 - 0x0888)
class AWeaponAttachmentScopeRail : public AWeaponAttachment
{
public:
	struct FName                                       ScopeSocketName;                                          // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentScopeRail");
		return ptr;
	}

};


// Class ConZ.WeaponAttachmentSuppressor
// 0x0010 (0x0898 - 0x0888)
class AWeaponAttachmentSuppressor : public AWeaponAttachment
{
public:
	struct FName                                       MuzzleSocketName;                                         // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NoiseMultiplier;                                          // 0x0890(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsImprovised;                                             // 0x0894(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0895(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentSuppressor");
		return ptr;
	}

};


// Class ConZ.WeaponAttachmentUniversalFlashlight
// 0x0050 (0x08F8 - 0x08A8)
class AWeaponAttachmentUniversalFlashlight : public AWeaponAttachmentFlashlight
{
public:
	TMap<class UClass*, class UStaticMesh*>            WeaponToStaticMeshMapping;                                // 0x08A8(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponAttachmentUniversalFlashlight");
		return ptr;
	}

};


// Class ConZ.WeaponBow
// 0x0450 (0x1880 - 0x1430)
class AWeaponBow : public AWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1430(0x0008) MISSED OFFSET
	struct FBodyWeaponAnimation                        RemoveArrowAnimations;                                    // 0x1438(0x0010) (Edit, BlueprintVisible)
	struct FBodyWeaponAnimation                        UnableToDrawAnimations;                                   // 0x1448(0x0010) (Edit, BlueprintVisible)
	struct FBodyWeaponAnimation                        DrawAnimations2[0x3];                                     // 0x1458(0x0010) (Edit)
	struct FBodyWeaponAnimation                        DrawWhileAnticipatingDrawAnimations2[0x3];                // 0x1488(0x0010) (Edit)
	struct FBodyWeaponAnimation                        CancelDrawAnimations2[0x3];                               // 0x14B8(0x0010) (Edit)
	struct FBodyWeaponAnimation                        LooseAnimations2[0x3];                                    // 0x14E8(0x0010) (Edit)
	struct FBodyWeaponAnimation                        LooseLastShotAnimations2[0x3];                            // 0x1518(0x0010) (Edit)
	struct FWeaponBowAimOffsets                        AimOffsets[0x7];                                          // 0x1548(0x0018) (Edit)
	struct FWeaponBowArmsShake                         ArmsShakeAnimamtion[0x4];                                 // 0x15F0(0x0030) (Edit)
	struct FBodyWeaponAnimation                        DrawAnimations;                                           // 0x16B0(0x0010) (Edit, BlueprintVisible)
	struct FBodyWeaponAnimation                        DrawWhileAnticipatingDrawAnimations;                      // 0x16C0(0x0010) (Edit, BlueprintVisible)
	struct FBodyWeaponAnimation                        CancelDrawAnimations;                                     // 0x16D0(0x0010) (Edit, BlueprintVisible)
	struct FBodyWeaponAnimation                        LooseAnimations;                                          // 0x16E0(0x0010) (Edit, BlueprintVisible)
	struct FBodyWeaponAnimation                        LooseLastShotAnimations;                                  // 0x16F0(0x0010) (Edit, BlueprintVisible)
	class UAnimSequenceBase*                           WeaponAimingDownTheSightsAnimationPose;                   // 0x1700(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           WeaponAimingDownTheSightsStillAnimationPose;              // 0x1708(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWeaponState*                                AnticipateDrawState2;                                     // 0x1710(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                DrawState3;                                               // 0x1718(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                CancelFiringState;                                        // 0x1720(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                AnticipateFiringState;                                    // 0x1728(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                FireState;                                                // 0x1730(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                FireAndInsertArrowState;                                  // 0x1738(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAkAudioEvent*                               _fireNoArrowAudioEvent;                                   // 0x1740(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _arrowSocketName;                                         // 0x1748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _muzzleVelocity;                                          // 0x1750(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _drawWeight;                                              // 0x1754(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              _compoundBowFullDrawHoldTime;                             // 0x1758(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _armShakeTimerDecreaseRate;                               // 0x175C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _damageOnUsage;                                           // 0x1760(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x1764(0x0004) MISSED OFFSET
	class UWeaponState*                                _bowActiveState2;                                         // 0x1768(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _bowInsertArrowState;                                     // 0x1770(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponState*                                _bowRemoveArrowState;                                     // 0x1778(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWeaponStateFiring*                          _bowFiringState2;                                         // 0x1780(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x1788(0x0028) MISSED OFFSET
	EWeaponBowState                                    _bowState;                                                // 0x17B0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x17B1(0x0003) MISSED OFFSET
	struct FWeaponBowStateDataReplicated               _weaponBowStateDataReplicated;                            // 0x17B4(0x000C) (Net)
	class UStaticMeshComponent*                        _arrowMeshComponent;                                      // 0x17C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FProjectileArrowData                        _projectileArrowData;                                     // 0x17C8(0x0018) (Net)
	unsigned char                                      UnknownData04[0x50];                                      // 0x17E0(0x0050) MISSED OFFSET
	bool                                               _isCompound;                                              // 0x1830(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x1831(0x0007) MISSED OFFSET
	class UStaticMeshComponent*                        _handTriggerMeshComponent;                                // 0x1838(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               _ignoreArrowStiffness;                                    // 0x1840(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x1841(0x0003) MISSED OFFSET
	float                                              _letOff;                                                  // 0x1844(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _handTriggerBoneName;                                     // 0x1848(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x30];                                      // 0x1850(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponBow");
		return ptr;
	}


	void SetDrawWeight(float drawWeight);
	void Server_SetPendingArrow(class AAmmunitionArrow* arrow);
	void Server_SetDrawAmount(float drawAmount);
	void Server_SetBowStateData(const struct FWeaponBowStateDataReplicated& State);
	void Server_SetBowState(EWeaponBowState State);
	void Server_RemoveArrow();
	void Server_InsertArrow(class AAmmunitionArrow* arrow);
	void ReloadArrow();
	void OnRep_BowStateData();
	void OnRep_BowState();
	void OnRep_Arrow();
	void GotoInsertArrowState();
	class AAmmunitionArrow* GetPendingArrow();
	float GetOwnersTotalDrawWeight();
	float GetOwnersDrawWeightByStrength();
	float GetOwnersDrawWeightBySkill();
	float STATIC_GetDrawWeightDefaultsByStrength(float Strength);
	float GetDrawWeight();
	float STATIC_GetDrawPercentageDefaultsForParameters(float characterDrawWeight, float bowDrawWeight);
	void EquipArrow(class AAmmunitionArrow* arrow);
	bool CanInsertArrow();
};


// Class ConZ.WeaponBowAnimInstance
// 0x0020 (0x03A0 - 0x0380)
class UWeaponBowAnimInstance : public UWeaponAnimInstance
{
public:
	float                                              _armsShakeValue;                                          // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               _useArrowLookAt;                                          // 0x0384(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0385(0x0003) MISSED OFFSET
	class UAnimSequenceBase*                           _aimingDownTheSightsAnimation;                            // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           _aimingDownTheSightsStillAnimation;                       // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0398(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponBowAnimInstance");
		return ptr;
	}

};


// Class ConZ.WeaponDamageGroup
// 0x0020 (0x0050 - 0x0030)
class UWeaponDamageGroup : public UDataAsset
{
public:
	float                                              head;                                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Neck;                                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Torso;                                                    // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ArmUpper;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Abdomen;                                                  // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LegUpper;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OtherLimbs;                                               // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponDamageGroup");
		return ptr;
	}

};


// Class ConZ.WeaponHolsterItem
// 0x0008 (0x0930 - 0x0928)
class AWeaponHolsterItem : public AClothesItem
{
public:
	class AWeapon*                                     _holsteredWeapon;                                         // 0x0928(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponHolsterItem");
		return ptr;
	}


	void OnRep_HolsteredWeapon();
	bool HolsterWeapon(class AWeapon* Weapon);
};


// Class ConZ.WeaponRecoilGroup
// 0x0010 (0x0040 - 0x0030)
class UWeaponRecoilGroup : public UDataAsset
{
public:
	float                                              Up;                                                       // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Down;                                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Left;                                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Right;                                                    // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponRecoilGroup");
		return ptr;
	}

};


// Class ConZ.WeaponScopeWidget
// 0x0018 (0x0238 - 0x0220)
class UWeaponScopeWidget : public UDesignableUserWidget
{
public:
	class UTexture2D*                                  ReticleTexture;                                           // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTextureRenderTarget2D*                      TextRenderTarget;                                         // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeFactor;                                               // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OnHideDelay;                                              // 0x0234(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponScopeWidget");
		return ptr;
	}


	void OnShowElements();
	void OnHideElements();
	void OnFadeOutComplete();
	void OnFadeInComplete();
	void OnConstructFinished();
	void BeginFadeIn();
};


// Class ConZ.WeaponState
// 0x0008 (0x0030 - 0x0028)
class UWeaponState : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponState");
		return ptr;
	}

};


// Class ConZ.WeaponStateActive
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateActive : public UWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateActive");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowActive
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateBowActive : public UWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowActive");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowAnticipateDraw
// 0x0010 (0x0040 - 0x0030)
class UWeaponStateBowAnticipateDraw : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowAnticipateDraw");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowAnticipateFiring
// 0x0010 (0x0040 - 0x0030)
class UWeaponStateBowAnticipateFiring : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowAnticipateFiring");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowCancelFiring
// 0x0008 (0x0038 - 0x0030)
class UWeaponStateBowCancelFiring : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowCancelFiring");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowDraw
// 0x0020 (0x0050 - 0x0030)
class UWeaponStateBowDraw : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowDraw");
		return ptr;
	}

};


// Class ConZ.WeaponStateFiring
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateFiring : public UWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateFiring");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowFire
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateBowFire : public UWeaponStateFiring
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowFire");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowFireAndInsertArrow
// 0x0010 (0x0040 - 0x0030)
class UWeaponStateBowFireAndInsertArrow : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowFireAndInsertArrow");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowFiring
// 0x0010 (0x0040 - 0x0030)
class UWeaponStateBowFiring : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowFiring");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowInsertArrow
// 0x0008 (0x0038 - 0x0030)
class UWeaponStateBowInsertArrow : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowInsertArrow");
		return ptr;
	}

};


// Class ConZ.WeaponStateBowRemoveArrow
// 0x0008 (0x0038 - 0x0030)
class UWeaponStateBowRemoveArrow : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateBowRemoveArrow");
		return ptr;
	}

};


// Class ConZ.WeaponStateChamberBullet
// 0x0008 (0x0038 - 0x0030)
class UWeaponStateChamberBullet : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateChamberBullet");
		return ptr;
	}


	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
};


// Class ConZ.WeaponStateClearMalfunction
// 0x0010 (0x0040 - 0x0030)
class UWeaponStateClearMalfunction : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateClearMalfunction");
		return ptr;
	}

};


// Class ConZ.WeaponStateEquipping
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateEquipping : public UWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateEquipping");
		return ptr;
	}

};


// Class ConZ.WeaponStateFiringAutomatic
// 0x0010 (0x0040 - 0x0030)
class UWeaponStateFiringAutomatic : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateFiringAutomatic");
		return ptr;
	}

};


// Class ConZ.WeaponStateFiringManual
// 0x0000 (0x0040 - 0x0040)
class UWeaponStateFiringManual : public UWeaponStateFiringAutomatic
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateFiringManual");
		return ptr;
	}

};


// Class ConZ.WeaponStateFiringSemiAutomatic
// 0x0008 (0x0048 - 0x0040)
class UWeaponStateFiringSemiAutomatic : public UWeaponStateFiringAutomatic
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateFiringSemiAutomatic");
		return ptr;
	}

};


// Class ConZ.WeaponStateInactive
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateInactive : public UWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateInactive");
		return ptr;
	}

};


// Class ConZ.WeaponStateReload
// 0x0030 (0x0060 - 0x0030)
class UWeaponStateReload : public UWeaponState
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0030(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateReload");
		return ptr;
	}

};


// Class ConZ.WeaponStateUnEquipping
// 0x0000 (0x0030 - 0x0030)
class UWeaponStateUnEquipping : public UWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeaponStateUnEquipping");
		return ptr;
	}

};


// Class ConZ.WeatherAmbientSounds
// 0x0038 (0x0360 - 0x0328)
class AWeatherAmbientSounds : public AActor
{
public:
	float                                              WeatherRTPCsUpdateInterval;                               // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeOfDayRTPCUpdateInterval;                              // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeOfDayRTPCInterpolationSpeed;                          // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               RainAudioEvent;                                           // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               WindAudioEvent;                                           // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0348(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeatherAmbientSounds");
		return ptr;
	}

};


// Class ConZ.WeatherCapture2D
// 0x0008 (0x0348 - 0x0340)
class AWeatherCapture2D : public ASceneCapture2D
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeatherCapture2D");
		return ptr;
	}


	void CaptureNextFrame();
};


// Class ConZ.WeatherController
// 0x0098 (0x03C0 - 0x0328)
class AWeatherController : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	float                                              timeOfDay;                                                // 0x0340(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              TimeOfDaySpeed;                                           // 0x0344(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              Level1_RainStartWhenStormIs;                              // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Level2_RainStartWhenStormIs;                              // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Level3_RainStartWhenStormIs;                              // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WaterTemperature;                                         // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WaterTemperature_Storm;                                   // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WaterTemperatureHeightModifier;                           // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirTemperature;                                           // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirTemperature_Storm;                                     // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirTemperatureHeightModifier;                             // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirPressure;                                              // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirPressure_Storm;                                        // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirPressureHeightModifier;                                // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RelativeHumidity;                                         // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RelativeHumidity_Storm;                                   // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RelativeHumidityHeightModifier;                           // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxHeightAboveSeaLevelMeters;                             // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StormIntensity;                                           // 0x0388(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              DarknessIntensityMultiplier;                              // 0x038C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              CurrentDarknessIntensityMultiplier;                       // 0x0390(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WindDir;                                                  // 0x0394(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              WindSpeed_Result;                                         // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              _nightTimeBegin;                                          // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _nightTimeEnd;                                            // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _duskTimeBegin;                                           // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _dawnTimeEnd;                                             // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _autoSaveInterval;                                        // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	bool                                               _shouldSerializeData;                                     // 0x03B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WeatherController");
		return ptr;
	}


	void UpdateWeatherVisuals();
	void SetTimeOfDay(float Value);
	void SetStormIntensity(float Value);
	void SetCurrentDarknessIntensityMultiplier(float Intensity);
	void NetMulticast_UpdateWeatherVisuals(float newTimeOfDay, float newStormIntensity);
	struct FVector GetWindVelocity();
	float GetWaterTemperature(const struct FVector& Location);
	float GetTimeOfDaySpeed();
	float GetTimeOfDay();
	float GetStormIntensity();
	float GetRelativeHumidity(const struct FVector& Location);
	float GetRainIntensity();
	EDayPeriod GetDayPeriod();
	float GetDarknessIntensityMultiplier();
	float GetCurrentDarknessIntensityMultiplier();
	float GetAirTemperature(const struct FVector& Location);
	float GetAirPressure(const struct FVector& Location);
};


// Class ConZ.WetnessHelpers
// 0x0000 (0x0028 - 0x0028)
class UWetnessHelpers : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WetnessHelpers");
		return ptr;
	}


	void STATIC_SetMaterialsWetness(class UPrimitiveComponent* Component, float wetness);
};


// Class ConZ.WetnessManager
// 0x0048 (0x0370 - 0x0328)
class AWetnessManager : public AActor
{
public:
	int                                                MaxNumberOfActiveWettables;                               // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWettableLifeTime;                                      // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeatherAndWettableObjectParametersUpdateInterval;         // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UCurveFloat*                                 WettingRateFromRainVsRainIntensity;                       // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WettingRateFromWaterImmersion;                            // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DryingRate;                                               // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DryingRateModifierVsTemperature;                          // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DryingRateModifierVsRelativeHumidity;                     // 0x0350(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirTemperatureModifierWhenNotExposedToSunlight;           // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x035C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WetnessManager");
		return ptr;
	}

};


// Class ConZ.Wettable
// 0x0000 (0x0028 - 0x0028)
class UWettable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Wettable");
		return ptr;
	}


	void SetWaterWeight(float Value);
	float GetWaterWeight();
	float GetMaxWaterWeight();
};


// Class ConZ.WidgetHelpers
// 0x0000 (0x0028 - 0x0028)
class UWidgetHelpers : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WidgetHelpers");
		return ptr;
	}


	bool STATIC_ProjectWorldToScreen(class APlayerController* Controller, struct FVector* WorldPosition, struct FVector2D* Size, struct FVector2D* ScreenPosition);
	class UWidget* STATIC_GetWidgetParentOfType(class UWidget* Widget, class UClass* Type, bool includeUserWidgets);
	struct FVector STATIC_GetMuscleLeanFatFactorsFromCoordinates(const struct FVector2D& Coordinates);
	class UClass* STATIC_GetDesiredWidgetClass(EWidgetType Type);
	struct FText STATIC_GetDataForFieldName(const struct FName& Name, class UStruct* Str, class UStruct* Type);
	struct FVector4 STATIC_GetAttributesFromMuscularAndFatFactors(float muscular, float Fat);
	struct FVector4 STATIC_GetAgeModifiersFromAge(int Age);
	struct FString STATIC_FilterNonNumbersFromString(struct FString* string);
	void STATIC_ColorToHex(const struct FSlateColor& Color, struct FText* Text);
};


// Class ConZ.WindowFortificationsType
// 0x0050 (0x0080 - 0x0030)
class UWindowFortificationsType : public UDataAsset
{
public:
	TMap<class UClass*, class UStaticMesh*>            MeshForFortification;                                     // 0x0030(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WindowFortificationsType");
		return ptr;
	}

};


// Class ConZ.Wolf
// 0x0020 (0x0B00 - 0x0AE0)
class AWolf : public AAnimal
{
public:
	class USoundCue*                                   HowlSound;                                                // 0x0AE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   BarkSound;                                                // 0x0AE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _scale;                                                   // 0x0AF0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	EWolfAttackState                                   _attackState;                                             // 0x0AF4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0AF5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Wolf");
		return ptr;
	}


	void PlayAttackMontageOnClients();
	void OnRep_Scale();
};


// Class ConZ.WolfAIController
// 0x0010 (0x04D8 - 0x04C8)
class AWolfAIController : public AAnimalAIController
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WolfAIController");
		return ptr;
	}

};


// Class ConZ.WolfAnimInstance
// 0x0000 (0x0380 - 0x0380)
class UWolfAnimInstance : public UAnimalAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WolfAnimInstance");
		return ptr;
	}


	void AnimNotify_Howl();
};


// Class ConZ.WorldCraftingMarkerWidget
// 0x0008 (0x02C0 - 0x02B8)
class UWorldCraftingMarkerWidget : public UWaypointWidget
{
public:
	class UCraftingInfoWidget*                         _craftingInfo;                                            // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WorldCraftingMarkerWidget");
		return ptr;
	}


	void ChangeMode(ECraftingMarkerMode Mode);
};


// Class ConZ.WorldEventManager
// 0x0030 (0x0358 - 0x0328)
class AWorldEventManager : public AActor
{
public:
	TArray<class UClass*>                              EventTypes;                                               // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              TimeBetweenEventsMin;                                     // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenEventsMax;                                     // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	TArray<class AWorldEvent*>                         _events;                                                  // 0x0348(0x0010) (Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WorldEventManager");
		return ptr;
	}

};


// Class ConZ.WorldStatics
// 0x0000 (0x0028 - 0x0028)
class UWorldStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.WorldStatics");
		return ptr;
	}


	bool STATIC_IsEnvironmentClassOutdoor(EEnvironmentClass Value);
	bool STATIC_IsEnvironmentClassIndoor(EEnvironmentClass Value);
	float STATIC_GetExtraAirTemperatureFromHeatSourcesAtLocation(class UObject* WorldContextObject, const struct FVector& Location);
	struct FEnvironmentDescription STATIC_GetEnvironmentDescriptionAtLocation(class UObject* WorldContextObject, const struct FVector& Location);
};


// Class ConZ.Wristwatch
// 0x0010 (0x0338 - 0x0328)
class AWristwatch : public AActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Wristwatch");
		return ptr;
	}


	void ToggleDisplayVisibility(bool Visiblity);
	void SyncTime();
	void SetTime(float Value);
	void SetDisplayBrightness(float Value);
};


// Class ConZ.XMLAttributeMap
// 0x0010 (0x0038 - 0x0028)
class UXMLAttributeMap : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.XMLAttributeMap");
		return ptr;
	}

};


// Class ConZ.ZincDeficiency
// 0x0000 (0x01C0 - 0x01C0)
class UZincDeficiency : public UDeficiency
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZincDeficiency");
		return ptr;
	}

};


// Class ConZ.Zombie2
// 0x0300 (0x0C30 - 0x0930)
class AZombie2 : public AConZCharacter
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0930(0x0010) MISSED OFFSET
	class UNavigationInvokerComponent*                 _navigationInvokerComponent;                              // 0x0940(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHitReactComponent*                          _hitReactComponent;                                       // 0x0948(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FZombieMeshVariation2>               _meshVariations;                                          // 0x0950(0x0010) (Edit, ZeroConstructor)
	TArray<struct FZombieRelaxedStanceVariation2>      _relaxedStanceVariations;                                 // 0x0960(0x0010) (Edit, ZeroConstructor)
	TArray<struct FZombieCombatStanceVariation2>       _combatStanceVariations;                                  // 0x0970(0x0010) (Edit, ZeroConstructor)
	struct FZombieTurnMontageDescription               _turnMontageDescriptions[0x4];                            // 0x0980(0x0040) (Edit)
	class UAnimMontage*                                _gettingUpMontage;                                        // 0x0A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        _intimidateMontages;                                      // 0x0A88(0x0010) (Edit, ZeroConstructor)
	TArray<struct FZombieAttackDescription>            _attacks;                                                 // 0x0A98(0x0010) (Edit, ZeroConstructor)
	struct FGameplayTag                                _hitReactType;                                            // 0x0AA8(0x0008) (Edit)
	float                                              _throwingDamageMultiplier;                                // 0x0AB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _throwingDamageMultiplierPerBodyPart[0xC];                // 0x0AB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _projectileDamageMultiplier;                              // 0x0AE4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _projectileDamageMultiplierPerBodyPart[0xC];              // 0x0AE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _ragdollHitImpulseStrengthPerUnitDamage;                  // 0x0B18(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minDynamicMovementBaseSpeedForRagdoll;                   // 0x0B1C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _eyeViewPointOffset;                                      // 0x0B20(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _receivedDamageComboCooldown;                             // 0x0B24(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _receivedMeleeHitComboCooldown;                           // 0x0B28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _inflictedMeleeHitComboCooldown;                          // 0x0B2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minRagdollRecoveryTimeAfterKnockout;                     // 0x0B30(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxRagdollRecoveryTimeAfterKnockout;                     // 0x0B34(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minLandingImpactSpeedForDamage;                          // 0x0B38(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _landingDamagePerImpactSpeed;                             // 0x0B3C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _landingImpactSpeedForRagdoll;                            // 0x0B40(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minRagdollRecoveryTimeAfterLanding;                      // 0x0B44(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxRagdollRecoveryTimeAfterLanding;                      // 0x0B48(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0B4C(0x0004) MISSED OFFSET
	class ULandingEffects*                             _landingEffects;                                          // 0x0B50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _corpseSearchDuration;                                    // 0x0B58(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _corpseMaxLifeTimeInMinutes;                              // 0x0B5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _destroyCorpseTimerInterval;                              // 0x0B60(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse;       // 0x0B64(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           _packedZombieVariationIndices;                            // 0x0B68(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              _hitPoints;                                               // 0x0B6C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _receivedMeleeDamageMultiplier;                           // 0x0B70(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _receivedMeleeDamageKnockoutChanceMultiplier;             // 0x0B74(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _inflictedMeleeDamageMultiplier;                          // 0x0B78(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minConsecutiveReceivedDamageRatioToBeKnockedOut;         // 0x0B7C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxConsecutiveReceivedDamageRatioToBeKnockedOut;         // 0x0B80(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0B84(0x0004) MISSED OFFSET
	int                                                _minNumConsecutiveReceivedMeleeHitsToBeKnockedOut;        // 0x0B88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _maxNumConsecutiveReceivedMeleeHitsToBeKnockedOut;        // 0x0B8C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0B90(0x0004) MISSED OFFSET
	float                                              _health;                                                  // 0x0B94(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isSearched;                                              // 0x0B98(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0B99(0x0001) MISSED OFFSET
	EZombieStance                                      _stance;                                                  // 0x0B9A(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0B9B(0x0001) MISSED OFFSET
	TWeakObjectPtr<class APawn>                        _foe;                                                     // 0x0B9C(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7C];                                      // 0x0BA4(0x007C) MISSED OFFSET
	float                                              _inflictedDamageMultiplierConfig;                         // 0x0C20(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x0C24(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.Zombie2");
		return ptr;
	}


	bool StartAttack(class APawn* foe);
	void SetStance(EZombieStance Value);
	void SetFoe(class APawn* Value);
	void Server_StartAttack(int attackDescriptionIndex);
	void Server_SetStance(EZombieStance Value);
	void Server_PlayTurnMontage(EZombieTurnMontage turnMontage, float turnAngle);
	void Server_PlayMontage(class UAnimMontage* Montage);
	void RecoverFromRagdoll();
	void OnRep_Stance(EZombieStance OldValue);
	void OnRep_IsSearched(bool OldValue);
	void OnRep_Health(float OldValue);
	void NetMulticast_StartAttack(int attackDescriptionIndex);
	void NetMulticast_PlayTurnMontage(EZombieTurnMontage turnMontage, float turnAngle);
	void NetMulticast_PlaySound(class UAkAudioEvent* Sound);
	void NetMulticast_PlayMontage(class UAnimMontage* Montage);
	void NetMulticast_HandleLanded(const struct FVector& ImpactVelocity, const struct FHitResult& HitResult);
	bool IsRagdollAtRest();
	bool IsInRagdoll();
	bool IsAttacking();
	void GoToRagdoll(const struct FZombieRagdollAutoRecovery& autoRecovery);
	class UZombieSoundComponent2* GetZombieSoundComponent();
	class UZombieMovementComponent2* GetZombieMovement();
	EZombieStance GetStance();
	float GetMaxHealth();
	class UHitReactComponent* GetHitReactComponent();
	float GetHealthRatio();
	float GetHealth();
	class APawn* GetFoe();
	struct FRotator GetAimOffset();
	bool CanStartAttack();
};


// Class ConZ.ZombieAIController2
// 0x0310 (0x0748 - 0x0438)
class AZombieAIController2 : public AAIController
{
public:
	class UAISenseConfig_Sight*                        _lyingSightSenseConfig;                                   // 0x0438(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      _lyingHearingSenseConfig;                                 // 0x0440(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              _stateMachineTickIntervalWhenInRelaxedState;              // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldWander;                                            // 0x044C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldWanderAroundWanderOrigin;                          // 0x044D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x044E(0x0002) MISSED OFFSET
	float                                              _maxWanderingRadius;                                      // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minTimeToRestBeforeWandering;                            // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxTimeToRestBeforeWandering;                            // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldBecomeAlertedBySight;                              // 0x045C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x045D(0x0003) MISSED OFFSET
	float                                              _minLineOfSightDurationToBecomeAlerted;                   // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxLineOfSightDurationToBecomeAlerted;                   // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldBecomeAlertedByHearing;                            // 0x0468(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	float                                              _minDelayBeforeBecomingAlertedByHearing;                  // 0x046C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxDelayBeforeBecomingAlertedByHearing;                  // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	class UAISenseConfig_Sight*                        _relaxedIdleSightSenseConfig;                             // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      _relaxedIdleHearingSenseConfig;                           // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Sight*                        _relaxedWanderSightSenseConfig;                           // 0x0488(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      _relaxedWanderHearingSenseConfig;                         // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              _stateMachineTickIntervalWhenInAlertedState;              // 0x0498(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minObservingForLineOfSightStartDelay;                    // 0x049C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxObservingForLineOfSightStartDelay;                    // 0x04A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minInvestigateStimulusDelay;                             // 0x04A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxInvestigateStimulusDelay;                             // 0x04A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minEnterCombatModeDelay;                                 // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxEnterCombatModeDelay;                                 // 0x04B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _distanceAtWhichToIgnoreEnterCombatModeDelay;             // 0x04B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                _observingCurve;                                          // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _observingCurvePeriod;                                    // 0x04C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _observingCurveMaxYaw;                                    // 0x04C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _observingCurveMaxPitch;                                  // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	class UAISenseConfig_Sight*                        _alertedSightSenseConfig;                                 // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAISenseConfig_Hearing*                      _alertedHearingSenseConfig;                               // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              _stateMachineTickIntervalWhenInCombatState;               // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldAttack;                                            // 0x04E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldBackOffIfTooCloseToFoe;                            // 0x04E5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               _shouldPredictFoeLocation;                                // 0x04E6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x04E7(0x0001) MISSED OFFSET
	class UCurveFloat*                                 _foeLocationPredictionStrengthVsDistanceToFoe;            // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _attackDistance;                                          // 0x04F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _minNumConsecutiveInflictedMeleeHitsToIntimidate;         // 0x04F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _maxNumConsecutiveInflictedMeleeHitsToIntimidate;         // 0x04F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minTimeBeforeFoeIsConsideredUnreachable;                 // 0x04FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxTimeBeforeFoeIsConsideredUnreachable;                 // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate;// 0x0504(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate;// 0x0508(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _costOfJumpingInPathLength;                               // 0x050C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minPathPointDistance;                                    // 0x0510(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0514(0x0004) MISSED OFFSET
	class AZombie2*                                    _zombie;                                                  // 0x0518(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x228];                                     // 0x0520(0x0228) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieAIController2");
		return ptr;
	}

};


// Class ConZ.ZombieAnimInstance2
// 0x00B0 (0x0410 - 0x0360)
class UZombieAnimInstance2 : public UAnimInstance
{
public:
	bool                                               IsStanceCombat;                                           // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	int                                                NumRelaxedIdleVariations;                                 // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RelaxedIdleVariationIndex;                                // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Acceleration;                                             // 0x036C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               WantsToMove;                                              // 0x0378(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0379(0x0003) MISSED OFFSET
	struct FVector                                     Velocity;                                                 // 0x037C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Speed;                                                    // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedXY;                                                  // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WalkStoppingDistance;                                     // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WalkStoppingTime;                                         // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsFalling;                                                // 0x0398(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsJumping;                                                // 0x0399(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x039A(0x0002) MISSED OFFSET
	float                                              JumpApex;                                                 // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JumpDuration;                                             // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimOffset;                                                // 0x03A4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               CanStartGoToLoop;                                         // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x03B1(0x0007) MISSED OFFSET
	class UAnimSequenceBase*                           RelaxedWalkLoopAnimation;                                 // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RelaxedWalkLoopAnimationPlayRate;                         // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	class UAnimSequenceBase*                           CombatRunStartAnimation;                                  // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CombatRunStartAnimationPlayRate;                          // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	class UAnimSequenceBase*                           CombatRunLoopAnimation;                                   // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CombatRunLoopAnimationPlayRate;                           // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	class UAnimSequenceBase*                           CombatRunStopAnimation;                                   // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CombatRunStopAnimationStartTime;                          // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CombatRunStopAnimationPlayRate;                           // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinUpperBodyBlendWeight;                                  // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UpperBodyBlendMaxSpeedXY;                                 // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UpperBodyBlendWeight;                                     // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x0404(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieAnimInstance2");
		return ptr;
	}


	void AnimNotify_RFootDown();
	void AnimNotify_LFootDown();
	void AnimNotify_GoToRagdoll();
};


// Class ConZ.ZombieArmorDamageReductionAssetData
// 0x0090 (0x00B8 - 0x0028)
class UZombieArmorDamageReductionAssetData : public UAssetUserData
{
public:
	float                                              ThrowingDamageMultiplierPerBodyPart[0xC];                 // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileDamageMultiplierPerBodyPart[0xC];               // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeDamageMultiplierPerBodyPart[0xC];                    // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieArmorDamageReductionAssetData");
		return ptr;
	}

};


// Class ConZ.ZombieCorpse
// 0x0010 (0x0510 - 0x0500)
class AZombieCorpse : public ACorpse
{
public:
	class USkeletalMesh*                               StrippedMesh;                                             // 0x0500(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               _isSearched;                                              // 0x0508(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0509(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieCorpse");
		return ptr;
	}

};


// Class ConZ.ZombieKamikazeComponent
// 0x00E8 (0x01D8 - 0x00F0)
class UZombieKamikazeComponent : public UActorComponent
{
public:
	class AConZCharacter*                              _owningCharacter;                                         // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              _beepingDistance;                                         // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              _explosionDistance;                                       // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _autoExplosionTime;                                       // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	float                                              _baseDamage;                                              // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minimumDamage;                                           // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _damageInnerRadius;                                       // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _damageOuterRadius;                                       // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _damageFalloff;                                           // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               _explosionAudioEvent;                                     // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _beepingStartAudioEvent;                                  // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               _beepingEndAudioEvent;                                    // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0138(0x0008) MISSED OFFSET
	class UParticleSystem*                             _explosionPS;                                             // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      _explosionCameraShakeClass;                               // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   _bloodDecal;                                              // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minBloodDecalSize;                                       // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxBloodDecalSize;                                       // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minBloodScalarParamValue;                                // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxBloodScalarParamValue;                                // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _bloodScalarParameterValueName;                           // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   _sootDecal;                                               // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minSootDecalSize;                                        // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxSootDecalSize;                                        // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minSootScalarParamValue;                                 // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxSootScalarParamValue;                                 // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       _sootScalarParameterValueName;                            // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _decalsLifeSpan;                                          // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _decalFadeFactor;                                         // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                _maximumNumberOfChunksSpawned;                            // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _minVelocityMagnitude;                                    // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _maxVelocityMagnitude;                                    // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _velocityHalfAngle;                                       // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              _timeAfterChunksAreDeleted;                               // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	TArray<class UStaticMesh*>                         _bodyPartChunks;                                          // 0x01B0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData04[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	bool                                               _shouldExplodeOnDeath;                                    // 0x01D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieKamikazeComponent");
		return ptr;
	}


	void NetMulticast_HandleExplosion();
};


// Class ConZ.ZombieSoundComponent2
// 0x0040 (0x0158 - 0x0118)
class UZombieSoundComponent2 : public UCharacterSoundComponent
{
public:
	class UAkAudioEvent*                               RelaxedStanceEnteredAudioEvent;                           // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AlertedStanceEnteredAudioEvent;                           // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               CombatStanceEnteredAudioEvent;                            // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               FootstepAudioEvent;                                       // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopAllAudioEvent;                                        // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               DeathAudioEvent;                                          // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StartSearchCorpseAudioEvent;                              // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               StopSearchCorpseAudioEvent;                               // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieSoundComponent2");
		return ptr;
	}

};


// Class ConZ.ZombieVariationsDataAsset
// 0x0040 (0x0070 - 0x0030)
class UZombieVariationsDataAsset : public UDataAsset
{
public:
	struct FZombiesVariations                          ZombieVariations;                                         // 0x0030(0x0040) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieVariationsDataAsset");
		return ptr;
	}

};


// Class ConZ.ZombieMovementComponent2
// 0x0000 (0x0770 - 0x0770)
class UZombieMovementComponent2 : public UCharacterMovementComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ZombieMovementComponent2");
		return ptr;
	}

};


// Class ConZ.ConZSpectatorPawn
// 0x0010 (0x03C0 - 0x03B0)
class AConZSpectatorPawn : public ASpectatorPawn
{
public:
	float                                              DefaultFOV;                                               // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x03B4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class ConZ.ConZSpectatorPawn");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
